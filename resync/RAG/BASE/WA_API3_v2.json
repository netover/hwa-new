{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "HCL Workload Automation",
    "description" : "HCL Workload Automation REST API V2",
    "version" : "10.1.0.1"
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "description" : "Auto generated value"
  }, {
    "url" : "http://0.0.0.0:8080",
    "description" : "Auto generated value"
  }, {
    "url" : "/"
  } ],
  "security" : [ {
    "JWT" : [ ]
  }, {
    "Basic" : [ ]
  } ],
  "tags" : [ {
    "name" : "V2 APIs - Engine"
  }, {
    "name" : "V2 APIs - Folder"
  }, {
    "name" : "V2 APIs - Job Definition"
  }, {
    "name" : "V2 APIs - Job In Plan"
  }, {
    "name" : "V2 APIs - Job Stream"
  }, {
    "name" : "V2 APIs - Objects Info"
  }, {
    "name" : "V2 APIs - Workstation"
  }, {
    "name" : "V2 APIs - Workstation In Plan"
  } ],
  "paths" : {
    "/twsd/api/v2/engine/configuration" : {
      "get" : {
        "tags" : [ "V2 APIs - Engine Configuration" ],
        "summary" : "Get engine configuration",
        "description" : "Retrieves engine configuration.",
        "responses" : {
          "200" : {
            "description" : "The engine configuration has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/ConfigValue"
                  },
                  
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Engine Configuration" ],
        "summary" : "Set engine configuration key",
        "description" : "Sets a specific engine configuration key.",
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "value",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The engine configuration key has been correctly set.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigValue"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Engine Configuration" ],
        "summary" : "Saves the engine configuration",
        "description" : "Saves engine configuration.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/ConfigValue"
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The engine configuration has been correctly saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/ConfigValue"
                  },
                  
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/engine/configuration/{key}" : {
      "get" : {
        "tags" : [ "V2 APIs - Engine Configuration" ],
        "summary" : "Get engine configuration key",
        "description" : "Retrieves engine configuration key.",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The engine configuration key has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigValue"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/engine/groups" : {
      "get" : {
        "tags" : [ "V2 APIs - Engine" ],
        "summary" : "Get list of group names.",
        "description" : "Get list of group names.",
        "responses" : {
          "200" : {
            "description" : "Get group names.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupsV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/engine/info" : {
      "get" : {
        "tags" : [ "V2 APIs - Engine" ],
        "summary" : "Get engine info v2",
        "description" : "Retrieves engine info.",
        "responses" : {
          "200" : {
            "description" : "The engine info have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EngineInfoV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/engine/licenseServerAccessToken" : {
      "get" : {
        "tags" : [ "V2 APIs - Engine" ],
        "summary" : "Get access token",
        "description" : "Get access token.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "Console" ]
        } ]
      }
    },
    "/twsd/api/v2/engine/read_permission" : {
      "get" : {
        "tags" : [ "V2 APIs - Engine" ],
        "summary" : "Get list of user permissions.",
        "description" : "Get list of user permissions.",
        "responses" : {
          "200" : {
            "description" : "Get Permissions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string",
                    
                  },
                  
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/engine/run-component-command" : {
      "put" : {
        "tags" : [ "V2 APIs - Engine" ],
        "summary" : "Run component command",
        "description" : "Run a command on a specific executor by providing parameters.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ComponentCommandInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No workstation or componenId was found with the provided data."
          },
          "400" : {
            "description" : "The run component command result cannot be converted to json or parameters are missing in the request."
          },
          "200" : {
            "description" : "The component command has been correctly run."
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/engine/run-executor-command" : {
      "put" : {
        "tags" : [ "V2 APIs - Engine" ],
        "summary" : "Run executor command",
        "description" : "Run a command on a specific executor by providing parameters or the task definition in json/jsdl string.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExecutorCommandV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No workstation or executorId was found with the provided data."
          },
          "400" : {
            "description" : "The run executor command result cannot be converted to json or parameters are missing in the request."
          },
          "200" : {
            "description" : "The executor command has been correctly run."
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/engine/users" : {
      "get" : {
        "tags" : [ "V2 APIs - Engine" ],
        "summary" : "Get list of user names.",
        "description" : "Get list of user names.",
        "responses" : {
          "200" : {
            "description" : "Get user names.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/model/calendar" : {
      "get" : {
        "tags" : [ "V2 APIs - Calendar" ],
        "summary" : "Queries calendar definitions",
        "description" : "Retrieves all calendar definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The calendar definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV21"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV21"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV21"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Calendar" ],
        "summary" : "Creates a new calendar definition",
        "description" : "Creates a new calendar definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCalendar"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCalendar"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCalendar"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No calendar definition has been created."
          },
          "201" : {
            "description" : "The calendar definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Calendar" ],
        "summary" : "Deletes calendar definitions",
        "description" : "Deletes all calendar definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The calendar definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/calendar/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Calendar" ],
        "summary" : "Locks calendar definitions",
        "description" : "Locks all calendar definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The calendar definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/calendar/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Calendar" ],
        "summary" : "Unlocks calendar definitions",
        "description" : "Unlocks all calendar definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The calendar definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/calendar/{calendar_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Calendar" ],
        "summary" : "Get calendar by ID",
        "description" : "Retrieves a calendar definition selected by ID.",
        "parameters" : [ {
          "name" : "calendar_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The calendar definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectCalendar"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectCalendar"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectCalendar"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Calendar" ],
        "summary" : "Updates a calendar definition",
        "description" : "Updates a calendar definition selected by ID.",
        "parameters" : [ {
          "name" : "calendar_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCalendar"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCalendar"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCalendar"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No calendar definition has been updated."
          },
          "404" : {
            "description" : "No calendar definition has been found with the provided id. No calendar definition has been updated."
          },
          "200" : {
            "description" : "The calendar definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Calendar" ],
        "summary" : "Deletes a calendar definition",
        "description" : "Deletes a calendar definition selected by ID.",
        "parameters" : [ {
          "name" : "calendar_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No calendar definition has been deleted."
          },
          "404" : {
            "description" : "No calendar definition has been found with the provided id. No calendar definition has been deleted."
          },
          "200" : {
            "description" : "The calendar definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/calendar/{calendar_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Calendar" ],
        "summary" : "Locks a calendar definition",
        "description" : "Locks a calendar definition selected by ID.",
        "parameters" : [ {
          "name" : "calendar_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No calendar definition has been locked."
          },
          "404" : {
            "description" : "No calendar definition has been found with the provided id. No calendar definition has been locked."
          },
          "200" : {
            "description" : "The calendar definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/calendar/{calendar_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Calendar" ],
        "summary" : "Unlocks a calendar definition",
        "description" : "Unlocks a calendar definition selected by ID.",
        "parameters" : [ {
          "name" : "calendar_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No calendar definition has been unlocked."
          },
          "404" : {
            "description" : "No calendar definition has been found with the provided id. No calendar definition has been unlocked."
          },
          "200" : {
            "description" : "The calendar definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/common/autocomplete" : {
      "get" : {
        "tags" : [ "V2 APIs - Common" ],
        "summary" : "Autocompletes the item key",
        "description" : "Retrieves items matching a partial item key.",
        "parameters" : [ {
          "name" : "additionalFilters",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "exact_match",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "subType",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "targetType",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "value",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified are not valid."
          },
          "404" : {
            "description" : "If exact match is true and not object is found."
          },
          "200" : {
            "description" : "The list of items has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV215"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/common/convert" : {
      "post" : {
        "tags" : [ "V2 APIs - Common" ],
        "summary" : "Convert model objects",
        "description" : "Converts model objects from the format specified by Content-Type to format specified by Accept.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                
                "items" : {
                  "$ref" : "#/components/schemas/ModelObjectObject"
                }
              }
            },
            "text/yaml" : {
              "schema" : {
                "type" : "array",
                
                "items" : {
                  "$ref" : "#/components/schemas/ModelObjectObject"
                }
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "type" : "array",
                
                "items" : {
                  "$ref" : "#/components/schemas/ModelObjectObject"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "The parameters specified are not valid."
          },
          "200" : {
            "description" : "The list of objects have been correctly converted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/ModelObjectObject"
                  }
                }
              },
              "text/yaml" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/ModelObjectObject"
                  }
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/ModelObjectObject"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/common/convertOne" : {
      "post" : {
        "tags" : [ "V2 APIs - Common" ],
        "summary" : "Convert model object",
        "description" : "Converts one model object from the format specified by Content-Type to format specified by Accept.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectObject"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectObject"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "The parameters specified are not valid."
          },
          "200" : {
            "description" : "The object has been correctly converted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectObject"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectObject"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectObject"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/common/output-conditions" : {
      "get" : {
        "tags" : [ "V2 APIs - Common" ],
        "summary" : "Retrieves output conditions of a task in a workflow or from a task template.",
        "description" : "Retrieves output conditions defined on a referenced task template or task of a workflow.",
        "parameters" : [ {
          "name" : "job_definition_ref",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "job_definition_ref_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "job_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Unexpected error."
          },
          "200" : {
            "description" : "Output conditions correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "type" : "string",
                    
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/credentials" : {
      "get" : {
        "tags" : [ "V2 APIs - Credentials" ],
        "summary" : "Queries credentials definitions",
        "description" : "Retrieves all credentials definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The credentials definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV22"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV22"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV22"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Credentials" ],
        "summary" : "Creates a new credentials definition",
        "description" : "Creates a new credentials definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCredentials"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCredentials"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCredentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No credentials definition has been created."
          },
          "201" : {
            "description" : "The credentials definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Credentials" ],
        "summary" : "Deletes credentials definitions",
        "description" : "Deletes all credentials definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The credentials definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/credentials/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Credentials" ],
        "summary" : "Locks credentials definitions",
        "description" : "Locks all credentials definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The credentials definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/credentials/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Credentials" ],
        "summary" : "Unlocks credentials definitions",
        "description" : "Unlocks all credentials definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The credentials definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/credentials/{credentials_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Credentials" ],
        "summary" : "Gets a credentials definition by ID",
        "description" : "Retrieves a credentials definition selected by ID.",
        "parameters" : [ {
          "name" : "credentials_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The credentials definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectCredentials"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectCredentials"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectCredentials"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Credentials" ],
        "summary" : "Updates a credentials definition",
        "description" : "Updates a credentials definition selected by ID.",
        "parameters" : [ {
          "name" : "credentials_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCredentials"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCredentials"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectCredentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No credentials definition has been updated."
          },
          "404" : {
            "description" : "No credentials definition has been found with the provided id. No credentials definition has been updated."
          },
          "200" : {
            "description" : "The credentials definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Credentials" ],
        "summary" : "Deletes a credentials definition",
        "description" : "Deletes a credentials definition selected by ID.",
        "parameters" : [ {
          "name" : "credentials_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No credentials definition has been deleted."
          },
          "404" : {
            "description" : "No credentials definition has been found with the provided id. No credentials definition has been deleted."
          },
          "200" : {
            "description" : "The credentials definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/credentials/{credentials_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Credentials" ],
        "summary" : "Locks a credentials definition",
        "description" : "Locks a credentials definition selected by ID.",
        "parameters" : [ {
          "name" : "credentials_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No credentials definition has been locked."
          },
          "404" : {
            "description" : "No credentials definition has been found with the provided id. No credentials definition has been locked."
          },
          "200" : {
            "description" : "The credentials definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/credentials/{credentials_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Credentials" ],
        "summary" : "Unlocks a credentials definition",
        "description" : "Unlocks a credentials definition selected by ID.",
        "parameters" : [ {
          "name" : "credentials_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No credentials definition has been unlocked."
          },
          "404" : {
            "description" : "No credentials definition has been found with the provided id. No credentials definition has been unlocked."
          },
          "200" : {
            "description" : "The credentials definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/domain" : {
      "get" : {
        "tags" : [ "V2 APIs - Domain" ],
        "summary" : "Queries domain definitions",
        "description" : "Retrieves all domain definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The domain definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV23"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV23"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV23"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Domain" ],
        "summary" : "Creates a new domain definition",
        "description" : "Creates a new domain definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectDomain"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectDomain"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectDomain"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No domain definition has been created."
          },
          "201" : {
            "description" : "The domain definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Domain" ],
        "summary" : "Deletes domain definitions",
        "description" : "Deletes all domain definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The domain definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/domain/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Domain" ],
        "summary" : "Locks domain definitions",
        "description" : "Locks all domain definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The domain definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/domain/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Domain" ],
        "summary" : "Unlocks domain definitions",
        "description" : "Unlocks all domain definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The domain definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/domain/{domain_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Domain" ],
        "summary" : "Gets a domain definition by ID",
        "description" : "Retrieves a domain definition selected by ID.",
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The domain definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectDomain"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectDomain"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectDomain"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Domain" ],
        "summary" : "Updates a domain definition",
        "description" : "Updates a domain definition selected by ID.",
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectDomain"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectDomain"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectDomain"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No domain definition has been updated."
          },
          "404" : {
            "description" : "No domain definition has been found with the provided id. No domain definition has been updated."
          },
          "200" : {
            "description" : "The domain definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Domain" ],
        "summary" : "Deletes a domain definition",
        "description" : "Deletes a domain definition selected by ID.",
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No domain definition has been deleted."
          },
          "404" : {
            "description" : "No domain definition has been found with the provided id. No domain definition has been deleted."
          },
          "200" : {
            "description" : "The domain definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/domain/{domain_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Domain" ],
        "summary" : "Locks a domain definition",
        "description" : "Locks a domain definition selected by ID.",
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No domain definition has been locked."
          },
          "404" : {
            "description" : "No domain definition has been found with the provided id. No domain definition has been locked."
          },
          "200" : {
            "description" : "The domain definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/domain/{domain_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Domain" ],
        "summary" : "Unlocks a domain definition",
        "description" : "Unlocks a domain definition selected by ID.",
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No domain definition has been unlocked."
          },
          "404" : {
            "description" : "No domain definition has been found with the provided id. No domain definition has been unlocked."
          },
          "200" : {
            "description" : "The domain definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/folder" : {
      "get" : {
        "tags" : [ "V2 APIs - Folder" ],
        "summary" : "Queries folder definitions",
        "description" : "Retrieves all folder definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The folder definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV24"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV24"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV24"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Folder" ],
        "summary" : "Creates a new folder definition",
        "description" : "Creates a new folder definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectFolder"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectFolder"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectFolder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No folder definition has been created."
          },
          "201" : {
            "description" : "The folder definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Folder" ],
        "summary" : "Deletes folder definitions",
        "description" : "Deletes all folder definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The folder definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/folder/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Folder" ],
        "summary" : "Locks a folder definition",
        "description" : "Locks all folder definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The folder definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/folder/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Folder" ],
        "summary" : "Unlocks folder definitions",
        "description" : "Unlocks all folder definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The folder definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/folder/{folder_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Folder" ],
        "summary" : "Gets a folder definition by ID",
        "description" : "Retrieves a folder definition selected by ID.",
        "parameters" : [ {
          "name" : "folder_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The folder definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectFolder"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectFolder"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectFolder"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Folder" ],
        "summary" : "Updates a folder definition",
        "description" : "Updates a folder definition selected by ID.",
        "parameters" : [ {
          "name" : "folder_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectFolder"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectFolder"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectFolder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No folder updated."
          },
          "404" : {
            "description" : "No folder definition has been found with the provided id. No folder definition has been updated."
          },
          "200" : {
            "description" : "The folder definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Folder" ],
        "summary" : "Deletes a folder definition",
        "description" : "Deletes a folder definition selected by ID.",
        "parameters" : [ {
          "name" : "folder_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No folder definition has been deleted."
          },
          "404" : {
            "description" : "No folder definition has been found with the provided id. No folder definition has been deleted."
          },
          "200" : {
            "description" : "The folder definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/folder/{folder_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Folder" ],
        "summary" : "Locks a folder definition",
        "description" : "Locks a folder definition selected by ID.",
        "parameters" : [ {
          "name" : "folder_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No folder definition has been locked."
          },
          "404" : {
            "description" : "No folder definition has been found with the provided id. No folder definition has been locked."
          },
          "200" : {
            "description" : "The folder definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/folder/{folder_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Folder" ],
        "summary" : "Unlocks a folder definition",
        "description" : "Unlocks a folder definition selected by ID.",
        "parameters" : [ {
          "name" : "folder_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No folder definition has been unlocked."
          },
          "404" : {
            "description" : "No folder definition has been found with the provided id. No folder definition has been unlocked."
          },
          "200" : {
            "description" : "The folder definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobdefinition" : {
      "get" : {
        "tags" : [ "V2 APIs - Job Definition" ],
        "summary" : "Queries jobDefinition definitions",
        "description" : "Retrieves all jobDefinition definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The jobDefinition definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV25"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV25"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV25"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Job Definition" ],
        "summary" : "Creates a new jobDefinition definition",
        "description" : "Creates a new jobDefinition definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobDefinition"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobDefinition"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No jobDefinition definition has been created."
          },
          "201" : {
            "description" : "The jobDefinition definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Job Definition" ],
        "summary" : "Deletes jobDefinition definitions",
        "description" : "Deletes all jobDefinition definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The jobDefinition definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobdefinition/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Definition" ],
        "summary" : "Locks jobDefinition definitions",
        "description" : "Locks all jobDefinition definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The jobDefinition definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobdefinition/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Definition" ],
        "summary" : "Unlocks jobDefinition definitions",
        "description" : "Unlocks all jobDefinition definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The jobDefinition definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobdefinition/{jobDefinition_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Job Definition" ],
        "summary" : "Gets a jobDefinition definition",
        "description" : "Retrieves a jobDefinition definition selected by ID.",
        "parameters" : [ {
          "name" : "jobDefinition_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The jobDefinition definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectJobDefinition"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectJobDefinition"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectJobDefinition"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Job Definition" ],
        "summary" : "Updates a jobDefinition definition",
        "description" : "Updates a jobDefinition definition selected by ID.",
        "parameters" : [ {
          "name" : "jobDefinition_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobDefinition"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobDefinition"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No jobDefinition definition has been updated."
          },
          "404" : {
            "description" : "No jobDefinition definition has been found with the provided id. No jobDefinition definition has been updated."
          },
          "200" : {
            "description" : "The jobDefinition definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Job Definition" ],
        "summary" : "Delete a jobDefinition",
        "description" : "Deletes a jobDefinition definition selected by ID.",
        "parameters" : [ {
          "name" : "jobDefinition_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No jobDefinition definition has been deleted."
          },
          "404" : {
            "description" : "No jobDefinition definition has been found with the provided id. No jobDefinition definition has been deleted."
          },
          "200" : {
            "description" : "The jobDefinition definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobdefinition/{jobDefinition_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Definition" ],
        "summary" : "Locks a jobDefinition definition",
        "description" : "Locks a jobDefinition definition selected by ID.",
        "parameters" : [ {
          "name" : "jobDefinition_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No jobDefinition definition has been locked."
          },
          "404" : {
            "description" : "No jobDefinition definition has been found with the provided id. No jobDefinition definition has been locked."
          },
          "200" : {
            "description" : "The jobDefinition definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobdefinition/{jobDefinition_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Definition" ],
        "summary" : "Unlocks a jobDefinition definition",
        "description" : "Unlocks a jobDefinition definition selected by ID.",
        "parameters" : [ {
          "name" : "jobDefinition_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No jobDefinition definition has been unlocked."
          },
          "404" : {
            "description" : "No jobDefinition definition has been found with the provided id. No jobDefinition definition has been unlocked."
          },
          "200" : {
            "description" : "The jobDefinition definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobstream" : {
      "get" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Queries job stream definitions",
        "description" : "Retrieves all job stream definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The job stream definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV26"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV26"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV26"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Creates a new job stream definition",
        "description" : "Creates a new job stream definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobStream"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobStream"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobStream"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No job stream definition has been created."
          },
          "201" : {
            "description" : "The job stream has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Deletes job stream definitions",
        "description" : "Deletes all job Stream definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The job streams definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobstream-multiple" : {
      "post" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Create/update a workspace",
        "description" : "Creates or updates all elements in the workspace.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkspaceWorkflowsV2"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkspaceWorkflowsV2"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkspaceWorkflowsV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "500" : {
            "description" : "Unexpected error."
          },
          "400" : {
            "description" : "At least one object in the workspace cannot be created successfully."
          },
          "201" : {
            "description" : "Workspace request correctly processed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/JobStreamOperationResult"
                  }
                }
              },
              "text/yaml" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/JobStreamOperationResult"
                  }
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/JobStreamOperationResult"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/model/jobstream-multiple/submit" : {
      "post" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Submit a workspace",
        "description" : "Submit all elements in the workspace.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkspaceWorkflowsV2"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkspaceWorkflowsV2"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkspaceWorkflowsV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "500" : {
            "description" : "Unexpected error."
          },
          "400" : {
            "description" : "At least one object in the workspace cannot be submitted successfully."
          },
          "201" : {
            "description" : "Workspace request correctly processed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/JobStreamOperationResult"
                  }
                }
              },
              "text/yaml" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/JobStreamOperationResult"
                  }
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/JobStreamOperationResult"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/model/jobstream/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Locks job stream definitions",
        "description" : "Locks all job stream definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The job stream definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobstream/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Unlocks job stream definitions",
        "description" : "Unlocks all job stream definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The job streamd definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobstream/{jobStream_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Gets a job stream definition by ID",
        "description" : "Retrieves a job stream definition selected by ID.",
        "parameters" : [ {
          "name" : "jobStream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The job stream definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectJobStream"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectJobStream"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectJobStream"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Updates a job stream definition",
        "description" : "Updates a job stream definition selected by ID.",
        "parameters" : [ {
          "name" : "jobStream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobStream"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobStream"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectJobStream"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No job stream definition has been updated."
          },
          "404" : {
            "description" : "No job stream definition has been found with the provided id. No job stream definition has been updated."
          },
          "200" : {
            "description" : "The job stream definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Deletes a job stream definition",
        "description" : "Deletes a job stream definition selected by ID.",
        "parameters" : [ {
          "name" : "jobStream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No job stream definition has been deleted."
          },
          "404" : {
            "description" : "No job stream definition has been found with the provided id. No job stream definition has been deleted."
          },
          "200" : {
            "description" : "The job stream definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobstream/{jobStream_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Locks a job stream definition",
        "description" : "Locks a job stream definition selected by ID.",
        "parameters" : [ {
          "name" : "jobStream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No job stream definition has been locked."
          },
          "404" : {
            "description" : "No job stream definition has been found with the provided id. No job stream definition has been locked."
          },
          "200" : {
            "description" : "The job stream definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/jobstream/{jobStream_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream" ],
        "summary" : "Unlocks a job stream definition",
        "description" : "Unlocks a job stream definition selected by ID.",
        "parameters" : [ {
          "name" : "jobStream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No job stream definition has been unlocked."
          },
          "404" : {
            "description" : "No job stream definition has been found with the provided id. No job stream definition has been unlocked."
          },
          "200" : {
            "description" : "the job stream definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/prompt" : {
      "get" : {
        "tags" : [ "V2 APIs - Prompt" ],
        "summary" : "Queries prompt definitions",
        "description" : "Retrieves all prompt definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The prompt definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV27"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV27"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV27"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Prompt" ],
        "summary" : "Creates a new prompt definition",
        "description" : "Creates a new prompt definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectPrompt"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectPrompt"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectPrompt"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No prompt definition has been created."
          },
          "201" : {
            "description" : "The prompt definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Prompt" ],
        "summary" : "Deletes prompt definitions",
        "description" : "Deletes all prompt definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The prompt definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/prompt/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Prompt" ],
        "summary" : "Locks prompt definitions",
        "description" : "Locks all prompt definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The prompt definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/prompt/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Prompt" ],
        "summary" : "Unlocks prompt definitions",
        "description" : "Unlocks all prompt definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The prompt definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/prompt/{prompt_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Prompt" ],
        "summary" : "Gets a prompt definition by ID",
        "description" : "Retrieves a prompt definition selected by ID.",
        "parameters" : [ {
          "name" : "prompt_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The prompt definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectPrompt"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectPrompt"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectPrompt"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Prompt" ],
        "summary" : "Updates a prompt definition",
        "description" : "Updates a prompt definition selected by ID.",
        "parameters" : [ {
          "name" : "prompt_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectPrompt"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectPrompt"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectPrompt"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No prompt definition has been updated."
          },
          "404" : {
            "description" : "No prompt definition has been found with the provided id. No prompt definition has been updated."
          },
          "200" : {
            "description" : "The prompt definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Prompt" ],
        "summary" : "Deletes a prompt definition",
        "description" : "Deletes a prompt definition selected by ID.",
        "parameters" : [ {
          "name" : "prompt_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No prompt definition has been deleted."
          },
          "404" : {
            "description" : "No prompt definition has been found with the provided id. No prompt definition has been deleted."
          },
          "200" : {
            "description" : "The prompt definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/prompt/{prompt_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Prompt" ],
        "summary" : "Locks a prompt definition",
        "description" : "Locks a prompt definition selected by ID.",
        "parameters" : [ {
          "name" : "prompt_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No prompt definition has been locked."
          },
          "404" : {
            "description" : "No prompt definition has been found with the provided id. No prompt definition has been locked."
          },
          "200" : {
            "description" : "The prompt definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/prompt/{prompt_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Prompt" ],
        "summary" : "Unlocks a prompt definition",
        "description" : "Unlocks a prompt definition selected by ID.",
        "parameters" : [ {
          "name" : "prompt_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No prompt definition has been unlocked."
          },
          "404" : {
            "description" : "No prompt definition has been found with the provided id. No prompt definition has been unlocked."
          },
          "200" : {
            "description" : "The prompt definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/resource" : {
      "get" : {
        "tags" : [ "V2 APIs - Resource" ],
        "summary" : "Queries resource definitions",
        "description" : "Retrieves all resource definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The resource definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV28"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV28"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV28"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Resource" ],
        "summary" : "Creates a new resource definition",
        "description" : "Creates a new resource definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectResource"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectResource"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No resource definition has been created."
          },
          "201" : {
            "description" : "The resource definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Resource" ],
        "summary" : "Deletes resource definitions",
        "description" : "Deletes all resource definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The resource definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/resource/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Resource" ],
        "summary" : "Locks resource definitions",
        "description" : "Locks all resource definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The resource definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/resource/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Resource" ],
        "summary" : "Unlocks resource definitions",
        "description" : "Unlocks all resource definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The resource definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/resource/{resource_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Resource" ],
        "summary" : "Gets a resource definition by ID",
        "description" : "Retrieves a resource definition selected by ID.",
        "parameters" : [ {
          "name" : "resource_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The resource definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectResource"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectResource"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectResource"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Resource" ],
        "summary" : "Updates a resource definition",
        "description" : "Updates a resource definition selected by ID.",
        "parameters" : [ {
          "name" : "resource_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectResource"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectResource"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No resource definition has been updated."
          },
          "404" : {
            "description" : "No resource definition has been found with the provided id. No resource definition has been updated."
          },
          "200" : {
            "description" : "The resource definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Resource" ],
        "summary" : "Deletes a resource definition",
        "description" : "Deletes a resource definition selected by ID.",
        "parameters" : [ {
          "name" : "resource_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No resource definition has been deleted."
          },
          "404" : {
            "description" : "No resource definition has been found with the provided id. No resource definition has been deleted."
          },
          "200" : {
            "description" : "The resource definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/resource/{resource_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Resource" ],
        "summary" : "Locks a resource definition",
        "description" : "Locks a resource definition selected by ID.",
        "parameters" : [ {
          "name" : "resource_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No resource definition has been locked."
          },
          "404" : {
            "description" : "No resource definition has been found with the provided id. No resource definition has been locked."
          },
          "200" : {
            "description" : "The resource definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/resource/{resource_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Resource" ],
        "summary" : "Unlocks a resource definition",
        "description" : "Unlocks a resource definition selected by ID.",
        "parameters" : [ {
          "name" : "resource_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No resource definition has been unlocked."
          },
          "404" : {
            "description" : "No resource definition has been found with the provided id. No resource definition has been unlocked."
          },
          "200" : {
            "description" : "The resource definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/runcyclegroup" : {
      "get" : {
        "tags" : [ "V2 APIs - Run Cycle Group" ],
        "summary" : "Queries run cycle group definitions",
        "description" : "Retrieves all run cycle group definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The run cycle group definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV29"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV29"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV29"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Run Cycle Group" ],
        "summary" : "Creates a new run cycle group definition",
        "description" : "Creates a new run cycle group definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectRunCycleGroup"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectRunCycleGroup"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectRunCycleGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No run cycle group definition has been created."
          },
          "201" : {
            "description" : "The run cycle group definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Run Cycle Group" ],
        "summary" : "Deletes run cycle group definitions",
        "description" : "Deletes all run cycle group definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The run cycle group definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/runcyclegroup/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Run Cycle Group" ],
        "summary" : "Locks run cycle group definitions",
        "description" : "Locks all run cycle group definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The run cycle group definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/runcyclegroup/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Run Cycle Group" ],
        "summary" : "Unlocks run cycle group definitions",
        "description" : "Unlocks all run cycle group definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The run cycle group definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/runcyclegroup/{runCycleGroup_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Run Cycle Group" ],
        "summary" : "Gets a run cycle group definition by ID",
        "description" : "Retrieves a run cycle group definition selected by ID.",
        "parameters" : [ {
          "name" : "runCycleGroup_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The run cycle group definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectRunCycleGroup"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectRunCycleGroup"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectRunCycleGroup"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Run Cycle Group" ],
        "summary" : "Updates a run cycle group definition",
        "description" : "Updates a run cycle group definition selected by ID.",
        "parameters" : [ {
          "name" : "runCycleGroup_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectRunCycleGroup"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectRunCycleGroup"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectRunCycleGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No run cycle group definition has been updated."
          },
          "404" : {
            "description" : "No run cycle group definition has been found with the provided id. No run cycle group definition has been updated."
          },
          "200" : {
            "description" : "The run cycle group definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Run Cycle Group" ],
        "summary" : "Deletes a run cycle group definition",
        "description" : "Deletes a run cycle group definition selected by ID.",
        "parameters" : [ {
          "name" : "runCycleGroup_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No run cycle group definition has been deleted."
          },
          "404" : {
            "description" : "No run cycle group definition has been found with the provided id. No run cycle group definition has been deleted."
          },
          "200" : {
            "description" : "The run cycle group definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/runcyclegroup/{runCycleGroup_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Run Cycle Group" ],
        "summary" : "Locks a run cycle group definition",
        "description" : "Locks a run cycle group definition selected by ID.",
        "parameters" : [ {
          "name" : "runCycleGroup_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No run cycle group definition has been locked."
          },
          "404" : {
            "description" : "No run cycle group definition has been found with the provided id. No run cycle group definition has been locked."
          },
          "200" : {
            "description" : "The run cycle group definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/runcyclegroup/{runCycleGroup_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Run Cycle Group" ],
        "summary" : "Unlocks a run cycle group definition",
        "description" : "Unlocks a run cycle group definition selected by ID.",
        "parameters" : [ {
          "name" : "runCycleGroup_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No run cycle group definition has been unlocked."
          },
          "404" : {
            "description" : "No run cycle group definition has been found with the provided id. No run cycle group definition has been unlocked."
          },
          "200" : {
            "description" : "The run cycle group definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/service" : {
      "get" : {
        "tags" : [ "V2 APIs - Service" ],
        "summary" : "Queries service definitions",
        "description" : "Retrieves all service definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The service definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV26"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV26"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV26"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/service/tags" : {
      "get" : {
        "tags" : [ "V2 APIs - Service" ],
        "summary" : "Gets service tags",
        "description" : "Retrieves service tags.",
        "responses" : {
          "200" : {
            "description" : "The service tags have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "type" : "string",
                    
                  }
                }
              },
              "text/yaml" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "type" : "string",
                    
                  }
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "type" : "string",
                    
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/service/{service_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Service" ],
        "summary" : "Gets a service definition by ID",
        "description" : "Retrieves a service definition selected by ID.",
        "parameters" : [ {
          "name" : "service_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "The service definition does not exist."
          },
          "200" : {
            "description" : "The service definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectJobStream"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectJobStream"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectJobStream"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variable" : {
      "get" : {
        "tags" : [ "V2 APIs - Variable" ],
        "summary" : "Queries variable definitions",
        "description" : "Retrieves all variable definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The variable definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV210"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV210"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV210"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Variable" ],
        "summary" : "Creates a new variable definition",
        "description" : "Creates a new variable definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariable"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariable"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariable"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No variable definition has been created."
          },
          "201" : {
            "description" : "The variable definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Variable" ],
        "summary" : "Deletes variable definitions",
        "description" : "Deletes all variable definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The variable definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variable/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Variable" ],
        "summary" : "Locks variable definitions",
        "description" : "Locks all variable definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The variable definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variable/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Variable" ],
        "summary" : "Unlocks variable definitions",
        "description" : "Unlocks all variable definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The variable definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variable/{variable_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Variable" ],
        "summary" : "Gets a variable definition by ID",
        "description" : "Retrieves a variable definition selected by ID.",
        "parameters" : [ {
          "name" : "variable_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The variable definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectVariable"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectVariable"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectVariable"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Variable" ],
        "summary" : "Updates a variable definition",
        "description" : "Updates a variable definition selected by ID.",
        "parameters" : [ {
          "name" : "variable_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariable"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariable"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariable"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No variable definition has been updated."
          },
          "404" : {
            "description" : "No variable definition has been found with the provided id. No variable definition has been updated."
          },
          "200" : {
            "description" : "The variable definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Variable" ],
        "summary" : "Deletes a variable definition",
        "description" : "Deletes a variable definition selected by ID.",
        "parameters" : [ {
          "name" : "variable_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No variable definition has been deleted."
          },
          "404" : {
            "description" : "No variable definition has been found with the provided id. No variable definition has been deleted."
          },
          "200" : {
            "description" : "The variable definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variable/{variable_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Variable" ],
        "summary" : "Locks a variable definition",
        "description" : "Locks a variable definition selected by ID.",
        "parameters" : [ {
          "name" : "variable_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No variable definition has been locked."
          },
          "404" : {
            "description" : "No variable definition has been found with the provided id. No variable definition has been locked."
          },
          "200" : {
            "description" : "The variable definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variable/{variable_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Variable" ],
        "summary" : "Unlocks a variable definition",
        "description" : "Unlocks a variable definition selected by ID.",
        "parameters" : [ {
          "name" : "variable_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No variable definition has been unlocked."
          },
          "404" : {
            "description" : "No variable definition has been found with the provided id. No variable definition has been unlocked."
          },
          "200" : {
            "description" : "The variable definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variabletable" : {
      "get" : {
        "tags" : [ "V2 APIs - Variable Table" ],
        "summary" : "Queries variable table definitions",
        "description" : "Retrieves all variable table definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The variable table definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV211"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV211"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV211"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Variable Table" ],
        "summary" : "Creates a new variable table definition",
        "description" : "Creates a new variable table definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariableTable"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariableTable"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariableTable"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No variable table definition has been created."
          },
          "201" : {
            "description" : "The variable table definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Variable Table" ],
        "summary" : "Deletes variable table definitions",
        "description" : "Deletes all variable table definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The variable table definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variabletable/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Variable Table" ],
        "summary" : "Locks variable table definitions",
        "description" : "Locks all variable table definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The variable table definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variabletable/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Variable Table" ],
        "summary" : "Unlocks variable table definitions",
        "description" : "Unlocks all variable table definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The variable table definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variabletable/{variableTable_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Variable Table" ],
        "summary" : "Gets a variable table definition by ID",
        "description" : "Retrieves a variable table definition selected by ID.",
        "parameters" : [ {
          "name" : "variableTable_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The variable table definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectVariableTable"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectVariableTable"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectVariableTable"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Variable Table" ],
        "summary" : "Updates a variable table definition",
        "description" : "Updates a variable table definition selected by ID.",
        "parameters" : [ {
          "name" : "variableTable_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariableTable"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariableTable"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectVariableTable"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No variable table definition has been updated."
          },
          "404" : {
            "description" : "No variable table definition has been found with the provided id. No variable table has been updated."
          },
          "200" : {
            "description" : "The variable table definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Variable Table" ],
        "summary" : "Deletes a variable table definition",
        "description" : "Deletes a variable table definition selected by ID.",
        "parameters" : [ {
          "name" : "variableTable_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No variable table definition has been deleted."
          },
          "404" : {
            "description" : "No variable table definition has been found with the provided id. No variable table definition has been deleted."
          },
          "200" : {
            "description" : "The variable table definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variabletable/{variableTable_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Variable Table" ],
        "summary" : "Locks a variable table definition",
        "description" : "Locks a variable table definition selected by ID.",
        "parameters" : [ {
          "name" : "variableTable_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No variable table definition has been locked."
          },
          "404" : {
            "description" : "No variable table definition has been found with the provided id. No variable table definition has been locked."
          },
          "200" : {
            "description" : "The variable table definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/variabletable/{variableTable_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Variable Table" ],
        "summary" : "Unlocks a variable table definition",
        "description" : "Unlocks a variable table definition selected by ID.",
        "parameters" : [ {
          "name" : "variableTable_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No variable table definition has been unlocked."
          },
          "404" : {
            "description" : "No variable table definition has been found with the provided id. No variable table definition has been unlocked."
          },
          "200" : {
            "description" : "The variable table definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workloadapplicationtemplate" : {
      "get" : {
        "tags" : [ "V2 APIs - Workload Application Template" ],
        "summary" : "Queries workload application template definitions",
        "description" : "Retrieves all workload application template definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workload application template definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV212"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV212"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV212"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Workload Application Template" ],
        "summary" : "Creates a new workload application template definition",
        "description" : "Creates a new workload application template definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkloadApplicationTemplate"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkloadApplicationTemplate"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkloadApplicationTemplate"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workload application template definition has been created."
          },
          "201" : {
            "description" : "The workload application template definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Workload Application Template" ],
        "summary" : "Deletes workload application template definitions",
        "description" : "Deletes all workload application template definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workload application template definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workloadapplicationtemplate/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workload Application Template" ],
        "summary" : "Locks workload application template definitions",
        "description" : "Locks all workload application template definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workload application template definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workloadapplicationtemplate/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workload Application Template" ],
        "summary" : "Unlocks workload application template definitions",
        "description" : "Unlocks all workload application template definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workload application template definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workloadapplicationtemplate/{workloadApplicationTemplate_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Workload Application Template" ],
        "summary" : "Gets a workload application template definition by ID",
        "description" : "Retrieves a workload application template definition selected by ID.",
        "parameters" : [ {
          "name" : "workloadApplicationTemplate_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workload application template definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectWorkloadApplicationTemplate"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectWorkloadApplicationTemplate"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectWorkloadApplicationTemplate"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Workload Application Template" ],
        "summary" : "Updates a workload application template definition",
        "description" : "Updates a workload application template definition selected by ID.",
        "parameters" : [ {
          "name" : "workloadApplicationTemplate_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkloadApplicationTemplate"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkloadApplicationTemplate"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkloadApplicationTemplate"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workload application template definition has been updated."
          },
          "404" : {
            "description" : "No workload application template definition has been found with the provided id. No workload application template definition has been updated."
          },
          "200" : {
            "description" : "The workload application template definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Workload Application Template" ],
        "summary" : "Deletes a workload application template definition",
        "description" : "Deletes a workload application template definition selected by ID.",
        "parameters" : [ {
          "name" : "workloadApplicationTemplate_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workload application template definition has been deleted."
          },
          "404" : {
            "description" : "No workload application template definition has been found with the provided id. No workload application template definition has been deleted."
          },
          "200" : {
            "description" : "The workload application template definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workloadapplicationtemplate/{workloadApplicationTemplate_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workload Application Template" ],
        "summary" : "Locks a workload application template definition",
        "description" : "Locks a workload application template definition selected by ID.",
        "parameters" : [ {
          "name" : "workloadApplicationTemplate_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workload application template definition has been locked."
          },
          "404" : {
            "description" : "No workload application template definition has been found with the provided id. No workload application template definition has been locked."
          },
          "200" : {
            "description" : "The workload application template definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workloadapplicationtemplate/{workloadApplicationTemplate_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workload Application Template" ],
        "summary" : "Unlocks a workload application template definition",
        "description" : "Unlocks a workload application template definition selected by ID.",
        "parameters" : [ {
          "name" : "workloadApplicationTemplate_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workload application template definition has been unlocked."
          },
          "404" : {
            "description" : "No workload application template definition has been found with the provided id. No workload application template definition has been unlocked."
          },
          "200" : {
            "description" : "The workload application template definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstation" : {
      "get" : {
        "tags" : [ "V2 APIs - Workstation" ],
        "summary" : "Queries workstation definitions",
        "description" : "Retrieves all workstation definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstation definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV214"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV214"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV214"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Workstation" ],
        "summary" : "Creates a new workstation definition",
        "description" : "Creates a new workstation definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstation"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstation"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workstation definition has been created."
          },
          "201" : {
            "description" : "The workstation definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Workstation" ],
        "summary" : "Deletes workstation definitions",
        "description" : "Deletes all workstation definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstation definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstation/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation" ],
        "summary" : "Locks workstation definitions",
        "description" : "Locks all workstation definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstation definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstation/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation" ],
        "summary" : "Unlocks workstation definitions",
        "description" : "Unlocks all workstation definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstation definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstation/{workstation_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Workstation" ],
        "summary" : "Gets a workstation definition by ID",
        "description" : "Retrieves a workstation definition selected by ID.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstation definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectWorkstation"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectWorkstation"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectWorkstation"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Workstation" ],
        "summary" : "Updates a workstation definition",
        "description" : "Updates a workstation definition selected by ID.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstation"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstation"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workstation definition has been updated."
          },
          "404" : {
            "description" : "No workstation definition has been found with the provided id. No workstation definition has been updated."
          },
          "200" : {
            "description" : "The workstation definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Workstation" ],
        "summary" : "Deletes a workstation definition",
        "description" : "Deletes a workstation definition selected by ID.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workstation definition has been deleted."
          },
          "404" : {
            "description" : "No workstation definition has been found with the provided id. No workstation definition has been deleted."
          },
          "200" : {
            "description" : "The workstation definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstation/{workstation_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation" ],
        "summary" : "Locks a workstation definition",
        "description" : "Locks a workstation definition selected by ID.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workstation definition has been locked."
          },
          "404" : {
            "description" : "No workstation definition has been found with provided id. No workstation definition has been locked."
          },
          "200" : {
            "description" : "The workstation definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstation/{workstation_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation" ],
        "summary" : "Unlocks a workstation definition",
        "description" : "Unlocks a workstation definition selected by ID.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workstation definition has been unlocked."
          },
          "404" : {
            "description" : "No workstation definition has been found with the provided id. No workstation definition has been unlocked."
          },
          "200" : {
            "description" : "The workstation definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstationclass" : {
      "get" : {
        "tags" : [ "V2 APIs - Workstation Class" ],
        "summary" : "Queries workstation class definitions",
        "description" : "Retrieves all workstation class definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : true
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Only-Header",
          "in" : "header",
          "schema" : {
            "type" : "boolean",
            
            "default" : false
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstation class definitions have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV213"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV213"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV213"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "post" : {
        "tags" : [ "V2 APIs - Workstation Class" ],
        "summary" : "Creates a new workstation class definition",
        "description" : "Creates a new workstation class definition.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstationClass"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstationClass"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstationClass"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workstation class definition has been created."
          },
          "201" : {
            "description" : "The workstation class definition has been correctly created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Workstation Class" ],
        "summary" : "Deletes workstation class definitions",
        "description" : "Deletes all workstation class definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstation class definitions have been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstationclass/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation Class" ],
        "summary" : "Locks workstation class definitions",
        "description" : "Locks all workstation class definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstation class definitions have been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstationclass/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation Class" ],
        "summary" : "Unlocks workstation class definitions",
        "description" : "Unlocks all workstation class definitions that match the specified filters.",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstation class definitions have been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstationclass/{workstationClass_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Workstation Class" ],
        "summary" : "Gets a workstation class definition by ID",
        "description" : "Retrieves a workstation class definition selected by ID.",
        "parameters" : [ {
          "name" : "workstationClass_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "lock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item must be locked while being retrieved. The default value is false.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstation class definition has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectWorkstationClass"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectWorkstationClass"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelObjectWorkstationClass"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "put" : {
        "tags" : [ "V2 APIs - Workstation Class" ],
        "summary" : "Updates a workstation class definition",
        "description" : "Updates a workstation class definition selected by ID.",
        "parameters" : [ {
          "name" : "workstationClass_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstationClass"
              }
            },
            "text/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstationClass"
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelObjectWorkstationClass"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workstation class definition has been updated."
          },
          "404" : {
            "description" : "No workstation class definition has been found with the provided id. No workstation class definition has been updated."
          },
          "200" : {
            "description" : "The workstation class definition has been correctly updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "delete" : {
        "tags" : [ "V2 APIs - Workstation Class" ],
        "summary" : "Deletes a workstation class definition",
        "description" : "Deletes a workstation class definition selected by ID.",
        "parameters" : [ {
          "name" : "workstationClass_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "isLocked",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "unlock",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the item is expected to be locked by the user, false if it is expected to be unlocked.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workstation class definition has been deleted."
          },
          "404" : {
            "description" : "No workstation class definition has been found with the provided id. No workstation class definition has been deleted."
          },
          "200" : {
            "description" : "The workstation class definition has been correctly deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteListResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstationclass/{workstationClass_id}/action/lock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation Class" ],
        "summary" : "Locks a workstation class definition",
        "description" : "Locks a workstation class definition selected by ID.",
        "parameters" : [ {
          "name" : "workstationClass_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workstation class definition has been locked."
          },
          "404" : {
            "description" : "No workstation class definition has been found with the provided id. No workstation class definition has been locked."
          },
          "200" : {
            "description" : "The workstation class definition has been correctly locked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/model/workstationclass/{workstationClass_id}/action/unlock" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation Class" ],
        "summary" : "Unlocks a workstation class definition",
        "description" : "Unlocks a workstation class definition selected by ID.",
        "parameters" : [ {
          "name" : "workstationClass_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        }, {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "True if the unlock has to unlock items locked in other sessions or, if authorized, by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request. No workstation class definition has been unlocked."
          },
          "404" : {
            "description" : "No workstation class definition has been found with the provided id. No workstation class definition has been unlocked."
          },
          "200" : {
            "description" : "The workstation class definition has been correctly unlocked.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/objects-info" : {
      "get" : {
        "tags" : [ "V2 APIs - Objects Info" ],
        "summary" : "Get actions",
        "description" : "Retrieves supported actions and info for the objects in the plan.",
        "parameters" : [ {
          "name" : "object_type",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/ActionObjectType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The specified object type has not valid info."
          },
          "200" : {
            "description" : "The info for the specified object type have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/ObjectInfo"
                  },
                  
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      }
    },
    "/twsd/api/v2/plan/consumed-jobs/runs" : {
      "get" : {
        "tags" : [ "V2 APIs - Consumed jobs for licensing" ],
        "summary" : "Get licensing statistics of jobs run",
        "description" : "Retrieves the licensing statistics of jobs run on the system.",
        "parameters" : [ {
          "name" : "period",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/StatsPeriod"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "the licensing statistics of jobs run on the system have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/ConsumedJobs"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/folder/objects-count" : {
      "get" : {
        "tags" : [ "V2 APIs - Folder plan" ],
        "summary" : "Get object count",
        "description" : "Retrieves object count for objects in plan.",
        "parameters" : [ {
          "name" : "object_type",
          "in" : "query",
          "required" : true,
          "schema" : {
            
            "allOf" : [ {
              "$ref" : "#/components/schemas/ActionObjectType"
            }, {
              "type" : "object",
              
              "default" : "JOBSTREAM_IN_PLAN"
            } ]
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Define the oql filter to match the folders. Allowed fields are: parent, parentId, folder, folderId",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "Plan ID.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid.."
          },
          "200" : {
            "description" : "The object count for the specified object type have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  
                  "items" : {
                    "$ref" : "#/components/schemas/ObjectFolderCountV2"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job" : {
      "get" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Get job in plan",
        "description" : "Retrieves jobs in the plan that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more jobs.",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "Current plan ID.",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "If true, the query returns the total amount of items identified by the specified filter. By default, it is false.",
            
            "default" : "true"
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The jobs have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV216"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "patch" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Patch job in plan",
        "description" : "Retrieves jobs in the plan that match the specified filters to modify the jobs.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "description" : "The job in plan details that can be patched according to merge JSON patch (RFC 7396). For more information, see the update action payload that is returned by /twsd/api/v2/objects-info endpoint.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "flowNodeType" : {
                    "$ref" : "#/components/schemas/FlowNodeType"
                  },
                  "engineId" : {
                    "type" : "string",
                    "description" : "The identifier of the engine.",
                    "readOnly" : true,
                    
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "persistentId" : {
                    "type" : "string",
                    "description" : "The persistent unique identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "planId" : {
                    "type" : "string",
                    "description" : "The database identifier of the plan.",
                    
                  },
                  "folderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "folder" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
                    
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the key",
                    
                  },
                  "workstationId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced workstation.",
                    
                  },
                  "workstation" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "A reference to the Workstation where the flow node in plan is contained",
                    
                  },
                  "cpuFolderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "jobStreamId" : {
                    "type" : "string",
                    "description" : "The identifier of the job stream to which the job belongs.",
                    
                  },
                  "jobStreamName" : {
                    "type" : "string",
                    "description" : "The name of the jobstream where the job in plan is contained",
                    
                  },
                  "jobStreamWorkstationId" : {
                    "type" : "string",
                    "description" : "The identifier of the workstation of the job stream in plan where this job in plan is contained.",
                    
                  },
                  "jobStreamWorkstation" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "A reference to the workstation of the job stream in plan where this job in plan is contained.",
                    
                  },
                  "position" : {
                    "type" : "integer",
                    "description" : "The position of the job in the job stream.",
                    "format" : "int32",
                    
                  },
                  "key" : {
                    "type" : "string",
                    "description" : "The actual key value.",
                    
                  },
                  "jobDefinitionFlags" : {
                    "$ref" : "#/components/schemas/JobInPlanDefinitionFlags"
                  },
                  "jobStatusFlags" : {
                    "$ref" : "#/components/schemas/JobInPlanStatusFlags"
                  },
                  "jobOptions" : {
                    "$ref" : "#/components/schemas/JobInPlanOptions"
                  },
                  "lastRunCompositeStatus" : {
                    "$ref" : "#/components/schemas/JobInPlanCompositeStatusV2"
                  },
                  "lastRunCommonStatus" : {
                    "$ref" : "#/components/schemas/CommonStatusV2"
                  },
                  "jobDefinitionRefId" : {
                    "type" : "string",
                    "description" : "The identifier of the job definition.",
                    
                  },
                  "jobDefinition" : {
                    "$ref" : "#/components/schemas/JobDefinitionInPlanV2"
                  },
                  "priority" : {
                    "type" : "integer",
                    "description" : "The priority of the flow node.",
                    "format" : "int32",
                    
                  },
                  "origPriority" : {
                    "type" : "integer",
                    "description" : "The original priority of the flow node.",
                    "format" : "int32",
                    
                  },
                  "jobruns" : {
                    "type" : "array",
                    "description" : "All the run instances of the job.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/JobRunInstanceV2"
                    }
                  },
                  "schedTime" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "cpuTime" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "timeZone" : {
                    "type" : "string",
                    "description" : "The time zone of the flow node.",
                    
                  },
                  "timeRestrictions" : {
                    "$ref" : "#/components/schemas/TimeRestrictionsInPlanV2"
                  },
                  "dependencies" : {
                    "type" : "array",
                    "description" : "The list of DependencyInPlan of the flow node. If this object is the result of a query, this list is not filled.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/DependencyInPlanV2"
                    }
                  },
                  "dependenciesStats" : {
                    "$ref" : "#/components/schemas/DependenciesStatsV2"
                  },
                  "endTime" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "confidenceInterval" : {
                    "type" : "string",
                    
                  },
                  "criticalStart" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "repeatInterval" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "skipLateAction" : {
                    "$ref" : "#/components/schemas/SkipLateAction"
                  },
                  "actions" : {
                    "type" : "array",
                    "readOnly" : true,
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ActionV2"
                    }
                  },
                  "archived" : {
                    "type" : "boolean",
                    "description" : "The flag to indicate if the object is archived.",
                    
                  }
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "The provided patch item is not valid to perform JSON merge patch (RFC 7396) on the jobs in plan."
          },
          "200" : {
            "description" : "Lists the jobs in plan that have been patched correctly and the ones for which the patch procedures failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/add-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Add dependencies to a job in plan",
        "description" : "Adds dependencies to a job in the plan that matches the specified filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan for which the dependencies have been added successfully and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/cancel" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Cancel job in plan",
        "description" : "Cancels jobs in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan that have been correctly canceled and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/cancel-pending" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Cancel pending job in plan",
        "description" : "Cancels pending jobs in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan that have been correctly marked for cancel pending and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/confirm-abend" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Confirm **ABEND** for job in plan",
        "description" : "Confirms the ABEND status for jobs in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionsV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan that have been correctly confirmed for the ABEND status and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/confirm-succ" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Confirm **SUCC** for job in plan",
        "description" : "Confirms the SUCC status for jobs in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionsV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "Lists the jobs in plan that have been correctly confirmed for SUCC status and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/hold" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Hold job in plan",
        "description" : "Puts job in the plan that match the provided filters on hold.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan that have been correctly put on hold and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/kill" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Kill job in plan",
        "description" : "Stops jobs in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan that have been correctly stopped and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/release" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Release job in plan",
        "description" : "Releases jobs in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan that have been correctly released and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/release-all-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Release all dependencies from job in plan",
        "description" : "Releases all dependencies on jobs in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan for which all dependencies have been correctly released and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/release-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Release all dependencies from job in plan",
        "description" : "Releases all dependencies on jobs in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan for which the provided dependencies have been correctly released and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/remove-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Remove dependencies from job in plan",
        "description" : "Removes the dependencies on jobs in the plan that match the provided filter.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan for which the provided dependencies have been correctly removed and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/rerun" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Rerun job in plan",
        "description" : "Reruns jobs in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by internal status equal to \"SUCC\"" : {
              "value" : "jobruns.compositeStatus.status = 'SUCC'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RerunDetailsV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan for which a new run instance has been correctly created and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/action/run-command" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Run a command on job in plan",
        "description" : "Runs a command on jobs in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobCommandV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "404" : {
            "description" : "No job run instances that match the provided key were found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The specified command has been correctly executed."
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/async/{result}" : {
      "post" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Complete an asynchronous request.",
        "description" : "Retrieves a job in the plan that needs to complete an asynchronous request.",
        "parameters" : [ {
          "name" : "result",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "security_key",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The async request has been completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/count" : {
      "get" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Return the count for job in plan",
        "description" : "Returns the count for jobs in the plan that match the specified filter. The count can be grouped by specified filters separated by a comma.",
        "parameters" : [ {
          "name" : "grouping_filters",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "(optional) Ordered comma-separated fields (one or more between workstation, status, folder) to count for each group.",
            
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more items.",
            
            "default" : "/@/@#/@/@.@"
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Outputs the count of the jobs in plan matched by the filter and eventually the count for each group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupedCountResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/issues" : {
      "get" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Cancel job in plan",
        "description" : "Cancels the job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job in plan has been correctly canceled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssuesResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/joblog" : {
      "get" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Get job log.",
        "description" : "Returns the output of the job in the plan that match the specified identifier.",
        "parameters" : [ {
          "name" : "contentOnly",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "If true, header and footer of the job log will not be returned.",
            
          }
        }, {
          "name" : "follow",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "If true, new job log output will be returned as soon as it is available.",
            
          }
        }, {
          "name" : "from_line",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "If specified, defines starting line of the job log output.",
            "format" : "int32",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "to_line",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "If specified, defines ending line of the job log output.",
            "format" : "int32",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job run instances match the provided key."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Returns the job log of the specified run instance.",
            "content" : {
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary",
                  
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/run/{run_id}/action/rerun" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Rerun job in plan",
        "description" : "Reruns a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "run_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RerunDetailsV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "404" : {
            "description" : "No job run instances with the provided run ID were found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "A new job run instance was submitted with the specified details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/run/{run_id}/action/run-command" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Run a command on job in plan",
        "description" : "Runs a command on a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "run_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobCommandV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job run instances with the provided ID were found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The specified command has been correctly run."
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/run/{run_id}/action/run-command-json" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Run a command on job in plan and returns output as json",
        "description" : "Runs a command on a job in the plan that matches the specified identifier and returns the command output as json.",
        "parameters" : [ {
          "name" : "run_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobCommandV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job run instances with the provided ID were found in the plan."
          },
          "400" : {
            "description" : "The run job command result cannot be converted to json."
          },
          "200" : {
            "description" : "The specified command has been correctly run.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonNode"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/run/{run_id}/joblog" : {
      "get" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Get job log",
        "description" : "Returns the output of jobs in the plan that match the provided filters. The output can be retrieved either in a single step or in a different bunch of data (it generates a big output). To retrieve the output in a single step, call the API without specifying any parameter. To retrieve the output in a different bunch of data for the first time, specify the Lines parameter and set to 0 (zero) the pageNumber parameter. For the next bunch, you can specify other parameters for the pageNumber field.\"",
        "parameters" : [ {
          "name" : "run_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "contentOnly",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "If true, header and footer of the job log will not be returned.",
            
          }
        }, {
          "name" : "follow",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "If true, new job log output will be returned as soon as it is available.",
            
          }
        }, {
          "name" : "from_line",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "If specified, defines starting line of the job log output.",
            "format" : "int32",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "to_line",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "If specified, defines ending line of the job log output.",
            "format" : "int32",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job run instances were found with the provided run ID."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Returns the job log of the specified run instance.",
            "content" : {
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary",
                  
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/submit" : {
      "post" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Submit job",
        "description" : "Submits jobs that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubmitJobOptionsV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan that have been correctly submitted and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/submit-ad-hoc-job" : {
      "post" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Submit ad hoc job",
        "description" : "Submits an ad hoc job.",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubmitAdHocJobOptionsV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409" : {
            "description" : "The job could not be submitted because the job is already present in the destination job stream."
          },
          "400" : {
            "description" : "Missing required fields or invalid request."
          },
          "200" : {
            "description" : "The job has been submitted successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Get job in plan",
        "description" : "Retrieves a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobInPlanV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "patch" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Patch job in plan",
        "description" : "Retrieves a job in the plan that matches the specified identifier to modify the job.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "description" : "The job in plan details that can be patched according to merge JSON patch (RFC 7396). For more information, see the update action payload that is returned by /twsd/api/v2/objects-info endpoint.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "flowNodeType" : {
                    "$ref" : "#/components/schemas/FlowNodeType"
                  },
                  "engineId" : {
                    "type" : "string",
                    "description" : "The identifier of the engine.",
                    "readOnly" : true,
                    
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "persistentId" : {
                    "type" : "string",
                    "description" : "The persistent unique identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "planId" : {
                    "type" : "string",
                    "description" : "The database identifier of the plan.",
                    
                  },
                  "folderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "folder" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
                    
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the key",
                    
                  },
                  "workstationId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced workstation.",
                    
                  },
                  "workstation" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "A reference to the Workstation where the flow node in plan is contained",
                    
                  },
                  "cpuFolderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "jobStreamId" : {
                    "type" : "string",
                    "description" : "The identifier of the job stream to which the job belongs.",
                    
                  },
                  "jobStreamName" : {
                    "type" : "string",
                    "description" : "The name of the jobstream where the job in plan is contained",
                    
                  },
                  "jobStreamWorkstationId" : {
                    "type" : "string",
                    "description" : "The identifier of the workstation of the job stream in plan where this job in plan is contained.",
                    
                  },
                  "jobStreamWorkstation" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "A reference to the workstation of the job stream in plan where this job in plan is contained.",
                    
                  },
                  "position" : {
                    "type" : "integer",
                    "description" : "The position of the job in the job stream.",
                    "format" : "int32",
                    
                  },
                  "key" : {
                    "type" : "string",
                    "description" : "The actual key value.",
                    
                  },
                  "jobDefinitionFlags" : {
                    "$ref" : "#/components/schemas/JobInPlanDefinitionFlags"
                  },
                  "jobStatusFlags" : {
                    "$ref" : "#/components/schemas/JobInPlanStatusFlags"
                  },
                  "jobOptions" : {
                    "$ref" : "#/components/schemas/JobInPlanOptions"
                  },
                  "lastRunCompositeStatus" : {
                    "$ref" : "#/components/schemas/JobInPlanCompositeStatusV2"
                  },
                  "lastRunCommonStatus" : {
                    "$ref" : "#/components/schemas/CommonStatusV2"
                  },
                  "jobDefinitionRefId" : {
                    "type" : "string",
                    "description" : "The identifier of the job definition.",
                    
                  },
                  "jobDefinition" : {
                    "$ref" : "#/components/schemas/JobDefinitionInPlanV2"
                  },
                  "priority" : {
                    "type" : "integer",
                    "description" : "The priority of the flow node.",
                    "format" : "int32",
                    
                  },
                  "origPriority" : {
                    "type" : "integer",
                    "description" : "The original priority of the flow node.",
                    "format" : "int32",
                    
                  },
                  "jobruns" : {
                    "type" : "array",
                    "description" : "All the run instances of the job.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/JobRunInstanceV2"
                    }
                  },
                  "schedTime" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "cpuTime" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "timeZone" : {
                    "type" : "string",
                    "description" : "The time zone of the flow node.",
                    
                  },
                  "timeRestrictions" : {
                    "$ref" : "#/components/schemas/TimeRestrictionsInPlanV2"
                  },
                  "dependencies" : {
                    "type" : "array",
                    "description" : "The list of DependencyInPlan of the flow node. If this object is the result of a query, this list is not filled.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/DependencyInPlanV2"
                    }
                  },
                  "dependenciesStats" : {
                    "$ref" : "#/components/schemas/DependenciesStatsV2"
                  },
                  "endTime" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "confidenceInterval" : {
                    "type" : "string",
                    
                  },
                  "criticalStart" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "repeatInterval" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "skipLateAction" : {
                    "$ref" : "#/components/schemas/SkipLateAction"
                  },
                  "actions" : {
                    "type" : "array",
                    "readOnly" : true,
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ActionV2"
                    }
                  },
                  "archived" : {
                    "type" : "boolean",
                    "description" : "The flag to indicate if the object is archived.",
                    
                  }
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided patch item is not valid to perform JSON merge patch (RFC 7396) on the specified job in plan."
          },
          "200" : {
            "description" : "The job has been correctly patched.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/add-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Add dependencies to a job in plan",
        "description" : "Adds dependencies to a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The provided dependencies have been correctly added to the specified job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/cancel" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Cancel job in plan",
        "description" : "Cancels the job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job in plan has been correctly canceled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/cancel-pending" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Cancel pending job in plan",
        "description" : "Cancels pending job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job in plan was found with the provided ID."
          },
          "200" : {
            "description" : "The job in plan has been marked for cancel pending.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/confirm-abend" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Confirm **ABEND** for job in plan",
        "description" : "Confirms the ABEND status for a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionsV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The job in plan has been confirmed for ABEND.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/confirm-succ" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Confirm **SUCC** for job in plan",
        "description" : "Confirms the SUCC status for a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionsV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The job in plan has been correctly confirmed for the SUCC status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/hold" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Hold job in plan",
        "description" : "Puts a job in the plan that matches the specified identifier on hold.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The job in plan has been put on hold.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/kill" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Kill job in plan",
        "description" : "Stops a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The job in plan has been correctly stopped.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/release" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Release job in plan",
        "description" : "Releases a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The job in plan has been released.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/release-all-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Release all dependencies from job in plan",
        "description" : "Releases all dependencies on a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "All the dependencies of the job in plan have been correctly released.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/release-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Release all dependencies from job in plan",
        "description" : "Releases the dependencies on a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The provided dependencies of the job in plan have been correctly released.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/remove-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Remove dependencies from job in plan",
        "description" : "Removes the dependencies on a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The provided dependencies of the job in plan have been correctly removed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/action/update-priority" : {
      "put" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Update priority by id",
        "description" : "Update priority by id",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "priority",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job in plan with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/model" : {
      "patch" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Update properties into model ",
        "description" : "Update properties into mop",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "description" : "The job properties that can be patched according to merge JSON patch (RFC 7396)",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
                    "type" : "string",
                    "description" : "The identifier of the job.",
                    
                  },
                  "abstractId" : {
                    "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
                    "type" : "string",
                    "description" : "The id representing all versions of this object, regardless the validity range.",
                    
                  },
                  "name" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The name of the job. Optional, if not specified the name is the same of the job definition.",
                    
                  },
                  "jobDefinitionRefId" : {
                    "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
                    "type" : "string",
                    "description" : "The id of the job definition used by the job. At least one of jobDefinitionRefId, jobDefinitionRef, jobDefinition must be specified.",
                    
                  },
                  "jobDefinitionRef" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "Specify the path and the name of the job definition used by the job. At least one of jobDefinitionRefId, jobDefinitionRef, jobDefinition must be specified.",
                    
                  },
                  "workstationId" : {
                    "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
                    "type" : "string",
                    "description" : "The id of the workstation where this object is defined. For not embedded scenarios it's read-only, inherited from the job definition used by this job.",
                    
                  },
                  "workstation" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The path of a workstation where this object is defined. For not embedded scenarios it's read-only, inherited from the job definition used by this job.",
                    
                  },
                  "jobDefinition" : {
                    "$ref" : "#/components/schemas/EmbeddedJobDefinition"
                  },
                  "documentation" : {
                    "type" : "string",
                    "description" : "You can use this space to write comprehensive information about the item, such as its function, expected outcomes, and troubleshooting details. You can toggle \"Preview\" to see the formatted version of your documentation.",
                    
                  },
                  "options" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "Select job options.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/JobOption"
                    }
                  },
                  "priority" : {
                    "maximum" : 0,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Specify the priority value that defines the job instance submission order.",
                    "format" : "int32",
                    
                  },
                  "timeZone" : {
                    "type" : "string",
                    "description" : "Select the time zone for the job. If no time zone is specified, the job uses the time zone set on the workstation where the job is defined.",
                    
                  },
                  "startTime" : {
                    "$ref" : "#/components/schemas/LocalTime"
                  },
                  "startDays" : {
                    "maximum" : 0,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "An offset in days for the start time of the job.",
                    "format" : "int32",
                    
                  },
                  "asap" : {
                    "type" : "boolean",
                    "description" : "If selected, the job instance has to start as soon as its dependencies are resolved, without waiting for the defined start time.",
                    
                  },
                  "latestStartTime" : {
                    "$ref" : "#/components/schemas/LocalTime"
                  },
                  "latestStartDays" : {
                    "maximum" : 0,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "An offset in days for the latest start time of the job.",
                    "format" : "int32",
                    
                  },
                  "lateStartAction" : {
                    "$ref" : "#/components/schemas/LateStartAction"
                  },
                  "deadlineTime" : {
                    "$ref" : "#/components/schemas/LocalTime"
                  },
                  "deadlineDays" : {
                    "maximum" : 0,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "An offset in days for the deadline time of the job.",
                    "format" : "int32",
                    
                  },
                  "lateAction" : {
                    "$ref" : "#/components/schemas/LateAction"
                  },
                  "externalPredecessors" : {
                    "type" : "array",
                    "description" : "Dependencies on other job streams, or on jobs in other job streams.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ExternalPredecessor"
                    }
                  },
                  "internalPredecessors" : {
                    "type" : "array",
                    "description" : "Dependencies on other jobs in the same job stream.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/InternalPredecessor"
                    }
                  },
                  "joinConditions" : {
                    "type" : "array",
                    "description" : "Dependencies on sets of predecessors that could be only partially satisfied.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/JoinConditionForJob"
                    }
                  },
                  "interNetworkDependencies" : {
                    "type" : "array",
                    "description" : "Dependencies on remote systems via an X-AGENT.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/InterNetworkDependency"
                    }
                  },
                  "promptDependencies" : {
                    "type" : "array",
                    "description" : "Prompts that need to be replied before the job stream is launched.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/PromptDependency"
                    }
                  },
                  "fileDependencies" : {
                    "type" : "array",
                    "description" : "Files that are checked before the job stream is launched.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/FileDependency"
                    }
                  },
                  "resourceDependencies" : {
                    "type" : "array",
                    "description" : "Resources allocated while the job stream is running.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ResourceDependency"
                    }
                  },
                  "minDuration" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "minDurationPercentage" : {
                    "maximum" : 0,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The minimum expected duration of the job, as percentage of the estimated duration. minDuration and minDurationPercentage cannot be specified at the same time.",
                    "format" : "int32",
                    
                  },
                  "minDurationAction" : {
                    "$ref" : "#/components/schemas/MinDurationActionV2"
                  },
                  "maxDuration" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "maxDurationPercentage" : {
                    "maximum" : 0,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The maximum duration of the job, as percentage of the estimated duration. maxDuration and maxDurationPercentage cannot be specified at the same time.",
                    "format" : "int32",
                    
                  },
                  "maxDurationAction" : {
                    "$ref" : "#/components/schemas/MaxDurationActionV2"
                  },
                  "repeatInterval" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "pollingCondition" : {
                    "type" : "string",
                    "description" : "An output condition that is used to automatically rerun a job until a specified condition is satisfied.",
                    
                  },
                  "pollingInterval" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "noOperation" : {
                    "type" : "boolean",
                    "description" : "The noOperation flag value",
                    
                  },
                  "perJobLatestStart" : {
                    "type" : "boolean",
                    "writeOnly" : true,
                    
                  }
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job in plan with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/model/description" : {
      "get" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Get job description info using job in plan",
        "description" : "Retrieves the job description info using job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    
                  },
                  "format" : "binary",
                  
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/predecessors" : {
      "get" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Get job in plan",
        "description" : "Retrieves a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "depth",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListResponseV21"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{job_id}/successors" : {
      "get" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Get job in plan",
        "description" : "Retrieves a job in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "depth",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListResponseV21"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/job/{model_job_id}/submit" : {
      "post" : {
        "tags" : [ "V2 APIs - Job In Plan" ],
        "summary" : "Submit job",
        "description" : "Submits a job that matches the specified identifier.",
        "parameters" : [ {
          "name" : "model_job_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubmitJobOptionsV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "409" : {
            "description" : "The job could not be submitted because the job is already present in the destination job stream."
          },
          "200" : {
            "description" : "The job has been submitted successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream" : {
      "get" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Get job stream in plan",
        "description" : "Retrieves job streams in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by external status equal to \"SUCCESSFUL\"" : {
              "value" : "commonStatus = 'SUCCESSFUL'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more jobstreams.",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "Current plan ID.",
            
            "default" : "current"
          }
        }, {
          "name" : "submitted_by_me",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "If true, the query returns only the job streams submitted by the current user. If it is false, the query returns job streams submitted by other users.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "If true, the query returns the total amount of items identified by the specified filter. By default, it is false.",
            
            "default" : "true"
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "scope",
          "in" : "header",
          "schema" : {
            "$ref" : "#/components/schemas/ScopeType"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filter are not valid."
          },
          "200" : {
            "description" : "The job streams have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV217"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "patch" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Patch job stream in plan",
        "description" : "Retrieves job streams in the plan that match the provided filters to modify the job stream.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by external status equal to \"SUCCESSFUL\"" : {
              "value" : "commonStatus = 'SUCCESSFUL'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "description" : "The job stream in plan details that can be patched according to merge json patch (RFC 7396). For more information, see the update action payload that is returned by /twsd/api/v2/objects-info endpoint.",
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "originalJobStreamName" ],
                "type" : "object",
                "properties" : {
                  "flowNodeType" : {
                    "$ref" : "#/components/schemas/FlowNodeType"
                  },
                  "engineId" : {
                    "type" : "string",
                    "description" : "The identifier of the engine.",
                    "readOnly" : true,
                    
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "persistentId" : {
                    "type" : "string",
                    "description" : "The persistent unique identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "planId" : {
                    "type" : "string",
                    "description" : "The database identifier of the plan.",
                    
                  },
                  "folderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "folder" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
                    
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the key",
                    
                  },
                  "originalJobStreamName" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The original job stream name. Before it was aliased. Read-only attribute.",
                    "readOnly" : true,
                    
                  },
                  "aliasJobStreamName" : {
                    "type" : "string",
                    "description" : "The aliased job stream name.",
                    
                  },
                  "workstationId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced workstation.",
                    
                  },
                  "workstation" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "A reference to the Workstation where the flow node in plan is contained",
                    
                  },
                  "cpuFolderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "jobStreamModelId" : {
                    "type" : "string",
                    "description" : "The identifier of the job stream in the model.",
                    
                  },
                  "key" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The actual key value.",
                    
                  },
                  "schedTime" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "cpuTime" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "timeZone" : {
                    "type" : "string",
                    "description" : "The time zone of the flow node.",
                    
                  },
                  "variableTableId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced VariableTable.",
                    
                  },
                  "jsDefinitionFlags" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanDefinitionFlags"
                  },
                  "jsStatusFlags" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanStatusFlags"
                  },
                  "jsOptions" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanOptions"
                  },
                  "compositeStatus" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanCompositeStatusV2"
                  },
                  "commonStatus" : {
                    "$ref" : "#/components/schemas/CommonStatusV2"
                  },
                  "priority" : {
                    "type" : "integer",
                    "description" : "The priority of the flow node.",
                    "format" : "int32",
                    
                  },
                  "origPriority" : {
                    "type" : "integer",
                    "description" : "The original priority of the flow node.",
                    "format" : "int32",
                    
                  },
                  "timeInfo" : {
                    "$ref" : "#/components/schemas/TimeInfoV2"
                  },
                  "scheduledDate" : {
                    "type" : "string",
                    "description" : "The Scheduled Date of the job stream instance.",
                    "format" : "date-time",
                    
                  },
                  "jobStreamStats" : {
                    "$ref" : "#/components/schemas/JobStreamStatsV2"
                  },
                  "dependencies" : {
                    "type" : "array",
                    "description" : "The list of DependencyInPlan of the flow node. If this object is the result of a query, this list is not filled.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/DependencyInPlanV2"
                    }
                  },
                  "dependenciesStats" : {
                    "$ref" : "#/components/schemas/DependenciesStatsV2"
                  },
                  "timeRestrictions" : {
                    "$ref" : "#/components/schemas/TimeRestrictionsInPlanV2"
                  },
                  "limit" : {
                    "type" : "integer",
                    "description" : "The job stream limit. Valid values between -1 (NO_LIMIT) and 1024. Default value NO_LIMIT.",
                    "format" : "int32",
                    
                  },
                  "jobs" : {
                    "type" : "array",
                    "description" : "The list of JobInPlan that are part of the job stream in plan.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/JobInPlanV2"
                    }
                  },
                  "serviceName" : {
                    "type" : "string",
                    
                  },
                  "serviceContact" : {
                    "type" : "string",
                    
                  },
                  "submitter" : {
                    "type" : "string",
                    
                  },
                  "internalIdentifier" : {
                    "type" : "string",
                    
                  },
                  "approvalInfo" : {
                    "type" : "array",
                    "description" : "Info regarding human tasks jobs of this job stream instance.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ApprovalInfo"
                    }
                  },
                  "followsDepSequenceNum" : {
                    "type" : "integer",
                    "description" : "The sequence number of the predecessors dependency.",
                    "format" : "int32",
                    
                  },
                  "workstationClass" : {
                    "type" : "string",
                    "description" : "The id of the workstation class which represents a group of workstations.",
                    
                  },
                  "actions" : {
                    "type" : "array",
                    "readOnly" : true,
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ActionV2"
                    }
                  },
                  "archived" : {
                    "type" : "boolean",
                    "description" : "The flag to indicate if the object is archived.",
                    
                  },
                  "outputProperties" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string",
                      
                    },
                    
                  }
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "The provided patch item is not valid to perform JSON merge patch (RFC 7396) on the job streams in plan."
          },
          "200" : {
            "description" : "Lists the job streams in plan that have been correctly patched and the ones for which the patch procedures failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/action/add-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Add dependencies to job stream in plan",
        "description" : "Add dependencies to job streams that match the provided filters in the plan.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by external status equal to \"SUCCESSFUL\"" : {
              "value" : "commonStatus = 'SUCCESSFUL'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the job streams in plan for which the dependencies have been correctly added and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/action/cancel" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Cancel list of job streams in plan",
        "description" : "Cancels lists of job streams that match the provided filters in the plan.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by external status equal to \"SUCCESSFUL\"" : {
              "value" : "commonStatus = 'SUCCESSFUL'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the job streams in plan that have been correctly canceled and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/action/cancel-pending" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Cancel list of pending job streams in plan",
        "description" : "Cancels lists of pending job streams that match the provided filters in the plan.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by external status equal to \"SUCCESSFUL\"" : {
              "value" : "commonStatus = 'SUCCESSFUL'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the job streams in plan that have been correctly marked for cancel pending and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/action/hold" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Hold job stream in plan",
        "description" : "Puts job streams that match the provided filters in the plan on hold.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by external status equal to \"SUCCESSFUL\"" : {
              "value" : "commonStatus = 'SUCCESSFUL'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the job streams in plan that have been correctly put on hold and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/action/release" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Release job stream in plan",
        "description" : "Releases job streams that match the provided filters in the plan.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by external status equal to \"SUCCESSFUL\"" : {
              "value" : "commonStatus = 'SUCCESSFUL'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the jobs in plan that have been correctly released and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/action/release-all-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Release all dependencies of job stream in plan",
        "description" : "Releases all the dependencies on the job streams that match the provided filter in the plan.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by external status equal to \"SUCCESSFUL\"" : {
              "value" : "commonStatus = 'SUCCESSFUL'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the job streams in plan for which all dependencies have been correctly released and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/action/release-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Release dependencies to job stream in plan",
        "description" : "Releases the dependencies on job streams in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by external status equal to \"SUCCESSFUL\"" : {
              "value" : "commonStatus = 'SUCCESSFUL'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the job streams in plan for which the provided dependencies have been correctly released and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/action/remove-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Remove dependencies from job stream in plan",
        "description" : "Removes the dependencies on job streams that match the provided filters in the plan.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Filter by external status equal to \"SUCCESSFUL\"" : {
              "value" : "commonStatus = 'SUCCESSFUL'"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the job streams in plan for which the provided dependencies have been removed and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/count" : {
      "get" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Return count of job stream in plan",
        "description" : "Returns the count for job streams that match the provided filters in the plan. The count can be grouped by specified filters.",
        "parameters" : [ {
          "name" : "grouping_filters",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "(optional) Ordered comma-separated fields (one or more between workstation, status, folder) to count for each group.",
            
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more items.",
            
            "default" : "/@/@#/@/@"
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Outputs the count of the job streams in plan matched by the filter and eventually the count for each group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupedCountResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/submit" : {
      "post" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Submit job stream",
        "description" : "Submits job streams instances that match the specified filter.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "model_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubmitJobStreamOptionsV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the job streams in plan that have been correctly submitted and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Get job stream in plan",
        "description" : "Retrieves a job stream in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job streams have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobStreamInPlanV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "patch" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Patch job stream in plan",
        "description" : "Retrieves a job stream in the plan that matches the specified identifier to modify the job stream.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "description" : "The job stream in plan details that can be patched according to merge JSON patch (RFC 7396). For more information, see the update action payload that is returned by /twsd/api/v2/objects-info endpoint.",
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "originalJobStreamName" ],
                "type" : "object",
                "properties" : {
                  "flowNodeType" : {
                    "$ref" : "#/components/schemas/FlowNodeType"
                  },
                  "engineId" : {
                    "type" : "string",
                    "description" : "The identifier of the engine.",
                    "readOnly" : true,
                    
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "persistentId" : {
                    "type" : "string",
                    "description" : "The persistent unique identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "planId" : {
                    "type" : "string",
                    "description" : "The database identifier of the plan.",
                    
                  },
                  "folderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "folder" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
                    
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the key",
                    
                  },
                  "originalJobStreamName" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The original job stream name. Before it was aliased. Read-only attribute.",
                    "readOnly" : true,
                    
                  },
                  "aliasJobStreamName" : {
                    "type" : "string",
                    "description" : "The aliased job stream name.",
                    
                  },
                  "workstationId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced workstation.",
                    
                  },
                  "workstation" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "A reference to the Workstation where the flow node in plan is contained",
                    
                  },
                  "cpuFolderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "jobStreamModelId" : {
                    "type" : "string",
                    "description" : "The identifier of the job stream in the model.",
                    
                  },
                  "key" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The actual key value.",
                    
                  },
                  "schedTime" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "cpuTime" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "timeZone" : {
                    "type" : "string",
                    "description" : "The time zone of the flow node.",
                    
                  },
                  "variableTableId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced VariableTable.",
                    
                  },
                  "jsDefinitionFlags" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanDefinitionFlags"
                  },
                  "jsStatusFlags" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanStatusFlags"
                  },
                  "jsOptions" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanOptions"
                  },
                  "compositeStatus" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanCompositeStatusV2"
                  },
                  "commonStatus" : {
                    "$ref" : "#/components/schemas/CommonStatusV2"
                  },
                  "priority" : {
                    "type" : "integer",
                    "description" : "The priority of the flow node.",
                    "format" : "int32",
                    
                  },
                  "origPriority" : {
                    "type" : "integer",
                    "description" : "The original priority of the flow node.",
                    "format" : "int32",
                    
                  },
                  "timeInfo" : {
                    "$ref" : "#/components/schemas/TimeInfoV2"
                  },
                  "scheduledDate" : {
                    "type" : "string",
                    "description" : "The Scheduled Date of the job stream instance.",
                    "format" : "date-time",
                    
                  },
                  "jobStreamStats" : {
                    "$ref" : "#/components/schemas/JobStreamStatsV2"
                  },
                  "dependencies" : {
                    "type" : "array",
                    "description" : "The list of DependencyInPlan of the flow node. If this object is the result of a query, this list is not filled.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/DependencyInPlanV2"
                    }
                  },
                  "dependenciesStats" : {
                    "$ref" : "#/components/schemas/DependenciesStatsV2"
                  },
                  "timeRestrictions" : {
                    "$ref" : "#/components/schemas/TimeRestrictionsInPlanV2"
                  },
                  "limit" : {
                    "type" : "integer",
                    "description" : "The job stream limit. Valid values between -1 (NO_LIMIT) and 1024. Default value NO_LIMIT.",
                    "format" : "int32",
                    
                  },
                  "jobs" : {
                    "type" : "array",
                    "description" : "The list of JobInPlan that are part of the job stream in plan.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/JobInPlanV2"
                    }
                  },
                  "serviceName" : {
                    "type" : "string",
                    
                  },
                  "serviceContact" : {
                    "type" : "string",
                    
                  },
                  "submitter" : {
                    "type" : "string",
                    
                  },
                  "internalIdentifier" : {
                    "type" : "string",
                    
                  },
                  "approvalInfo" : {
                    "type" : "array",
                    "description" : "Info regarding human tasks jobs of this job stream instance.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ApprovalInfo"
                    }
                  },
                  "followsDepSequenceNum" : {
                    "type" : "integer",
                    "description" : "The sequence number of the predecessors dependency.",
                    "format" : "int32",
                    
                  },
                  "workstationClass" : {
                    "type" : "string",
                    "description" : "The id of the workstation class which represents a group of workstations.",
                    
                  },
                  "actions" : {
                    "type" : "array",
                    "readOnly" : true,
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ActionV2"
                    }
                  },
                  "archived" : {
                    "type" : "boolean",
                    "description" : "The flag to indicate if the object is archived.",
                    
                  },
                  "outputProperties" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string",
                      
                    },
                    
                  }
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided patch item is not valid to perform JSON merge patch (RFC 7396) on the specified job stream in plan."
          },
          "200" : {
            "description" : "The job stream in plan has been correctly patched.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/action/add-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Add dependencies to job stream in plan",
        "description" : "Add dependencies to a job stream that match the specified identifier in the plan.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The provided dependencies have been correctly added to the specified job stream in the plan.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/action/cancel" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Cancel list of job stream in plan",
        "description" : "Cancels a list of job stream that matches the specified identifier in the plan.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job stream in plan has been canceled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/action/cancel-pending" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Cancel list of pending job streams in plan",
        "description" : "Cancels a list of pending job streams that matches the specified identifier in the plan.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job stream in plan has been marked for cancel pending.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/action/hold" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Hold job stream in plan",
        "description" : "Puts the job stream that matches the specified identifier in the plan on hold.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The job stream in plan has been correctly put on hold.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/action/release" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Release job stream in plan",
        "description" : "Releases the job stream that matches the specified identifier in the plan.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The job stream in plan has been correctly released.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/action/release-all-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Release all dependencies of job stream in plan",
        "description" : "Releases all the dependencies on a job stream that matches the specified identifier in the plan.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "All the dependencies of the job stream in plan have been correctly released.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/action/release-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Release dependencies to job stream in plan",
        "description" : "Releases the dependencies on a job stream that matches the specified identifier in the plan.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The provided dependencies of the job stream in plan have been correctly released.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/action/remove-dependencies" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Remove dependencies from job stream in plan",
        "description" : "Removes the dependencies on a job stream that matches the specified identifier in the plan.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DependenciesInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The provided dependencies of the job stream in plan have been correctly removed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/model/description" : {
      "get" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Get job stream description info using job stream in plan",
        "description" : "Retrieves a JobStreamDescriptionInfo using job stream in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job streams have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object",
                    
                  },
                  "format" : "binary",
                  
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/no-validate" : {
      "patch" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Patch job stream in plan",
        "description" : "Retrieves a job stream in the plan that matches the specified identifier to modify the job stream.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "description" : "The job stream in plan details that can be patched according to merge JSON patch (RFC 7396). For more information, see the update action payload that is returned by /twsd/api/v2/objects-info endpoint.",
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "originalJobStreamName" ],
                "type" : "object",
                "properties" : {
                  "flowNodeType" : {
                    "$ref" : "#/components/schemas/FlowNodeType"
                  },
                  "engineId" : {
                    "type" : "string",
                    "description" : "The identifier of the engine.",
                    "readOnly" : true,
                    
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "persistentId" : {
                    "type" : "string",
                    "description" : "The persistent unique identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "planId" : {
                    "type" : "string",
                    "description" : "The database identifier of the plan.",
                    
                  },
                  "folderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "folder" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
                    
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the key",
                    
                  },
                  "originalJobStreamName" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The original job stream name. Before it was aliased. Read-only attribute.",
                    "readOnly" : true,
                    
                  },
                  "aliasJobStreamName" : {
                    "type" : "string",
                    "description" : "The aliased job stream name.",
                    
                  },
                  "workstationId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced workstation.",
                    
                  },
                  "workstation" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "A reference to the Workstation where the flow node in plan is contained",
                    
                  },
                  "cpuFolderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "jobStreamModelId" : {
                    "type" : "string",
                    "description" : "The identifier of the job stream in the model.",
                    
                  },
                  "key" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The actual key value.",
                    
                  },
                  "schedTime" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "cpuTime" : {
                    "$ref" : "#/components/schemas/Duration"
                  },
                  "timeZone" : {
                    "type" : "string",
                    "description" : "The time zone of the flow node.",
                    
                  },
                  "variableTableId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced VariableTable.",
                    
                  },
                  "jsDefinitionFlags" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanDefinitionFlags"
                  },
                  "jsStatusFlags" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanStatusFlags"
                  },
                  "jsOptions" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanOptions"
                  },
                  "compositeStatus" : {
                    "$ref" : "#/components/schemas/JobStreamInPlanCompositeStatusV2"
                  },
                  "commonStatus" : {
                    "$ref" : "#/components/schemas/CommonStatusV2"
                  },
                  "priority" : {
                    "type" : "integer",
                    "description" : "The priority of the flow node.",
                    "format" : "int32",
                    
                  },
                  "origPriority" : {
                    "type" : "integer",
                    "description" : "The original priority of the flow node.",
                    "format" : "int32",
                    
                  },
                  "timeInfo" : {
                    "$ref" : "#/components/schemas/TimeInfoV2"
                  },
                  "scheduledDate" : {
                    "type" : "string",
                    "description" : "The Scheduled Date of the job stream instance.",
                    "format" : "date-time",
                    
                  },
                  "jobStreamStats" : {
                    "$ref" : "#/components/schemas/JobStreamStatsV2"
                  },
                  "dependencies" : {
                    "type" : "array",
                    "description" : "The list of DependencyInPlan of the flow node. If this object is the result of a query, this list is not filled.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/DependencyInPlanV2"
                    }
                  },
                  "dependenciesStats" : {
                    "$ref" : "#/components/schemas/DependenciesStatsV2"
                  },
                  "timeRestrictions" : {
                    "$ref" : "#/components/schemas/TimeRestrictionsInPlanV2"
                  },
                  "limit" : {
                    "type" : "integer",
                    "description" : "The job stream limit. Valid values between -1 (NO_LIMIT) and 1024. Default value NO_LIMIT.",
                    "format" : "int32",
                    
                  },
                  "jobs" : {
                    "type" : "array",
                    "description" : "The list of JobInPlan that are part of the job stream in plan.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/JobInPlanV2"
                    }
                  },
                  "serviceName" : {
                    "type" : "string",
                    
                  },
                  "serviceContact" : {
                    "type" : "string",
                    
                  },
                  "submitter" : {
                    "type" : "string",
                    
                  },
                  "internalIdentifier" : {
                    "type" : "string",
                    
                  },
                  "approvalInfo" : {
                    "type" : "array",
                    "description" : "Info regarding human tasks jobs of this job stream instance.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ApprovalInfo"
                    }
                  },
                  "followsDepSequenceNum" : {
                    "type" : "integer",
                    "description" : "The sequence number of the predecessors dependency.",
                    "format" : "int32",
                    
                  },
                  "workstationClass" : {
                    "type" : "string",
                    "description" : "The id of the workstation class which represents a group of workstations.",
                    
                  },
                  "actions" : {
                    "type" : "array",
                    "readOnly" : true,
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ActionV2"
                    }
                  },
                  "archived" : {
                    "type" : "boolean",
                    "description" : "The flag to indicate if the object is archived.",
                    
                  },
                  "outputProperties" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string",
                      
                    },
                    
                  }
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No job stream with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided patch item is not valid to perform JSON merge patch (RFC 7396) on the specified job stream in plan."
          },
          "200" : {
            "description" : "The job stream in plan has been correctly patched.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/predecessors" : {
      "get" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Get job stream predecessors in plan",
        "description" : "Retrieves the predecessors of a job stream in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "depth",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListResponseV21"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/successors" : {
      "get" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Get job stream successors in plan",
        "description" : "Retrieves the successors of a job stream in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "depth",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListResponseV21"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{jobstream_id}/successors/action/rerun" : {
      "put" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Rerun job stream successors",
        "description" : "Reruns the successors of a job stream in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "depth",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No job with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The job has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/jobstream/{model_jobstream_id}/submit" : {
      "post" : {
        "tags" : [ "V2 APIs - Job Stream In Plan" ],
        "summary" : "Submit job stream instance",
        "description" : "Submits a job stream instance that matches the specified identifier.",
        "parameters" : [ {
          "name" : "model_jobstream_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubmitJobStreamOptionsV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "The job stream has been correctly submitted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListResponseV22"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/prompt/{prompt_id}/action/reply" : {
      "put" : {
        "tags" : [ "V2 APIs - Prompt plan" ],
        "summary" : "Reply yes-no prompt",
        "description" : "Replies \"YES\" (true) or \"NO\" (false) to the specified prompt.",
        "parameters" : [ {
          "name" : "prompt_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PromptInPlanAnswer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No prompt with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The prompt has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/resource" : {
      "get" : {
        "tags" : [ "V2 APIs - Resource In Plan" ],
        "summary" : "Get resources in plan",
        "description" : "Retrieves resources in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of resources to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which resource to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or resources. You can also sort the results by entering the order definition.",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more resources.",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "Current plan ID.",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "If true, the query returns the total amount of items identified by the specified filter. By default, it is false.",
            
            "default" : "true"
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filter are not valid."
          },
          "200" : {
            "description" : "The resources have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV218"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "patch" : {
        "tags" : [ "V2 APIs - Resource In Plan" ],
        "summary" : "Patch resources in plan",
        "description" : "Retrieves resources in the plan that match the filter, to modify the resources.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "description" : "The resources in plan details that can be patched according to merge json patch (RFC 7396). For more information, see the update action payload that is returned by /twsd/api/v2/objects-info endpoint.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "engineId" : {
                    "type" : "string",
                    "description" : "The identifier of the engine.",
                    "readOnly" : true,
                    
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "persistentId" : {
                    "type" : "string",
                    "description" : "The persistent unique identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "folderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "folder" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
                    
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the key",
                    
                  },
                  "key" : {
                    "type" : "string",
                    "description" : "The actual key value.",
                    
                  },
                  "workstationId" : {
                    "type" : "string",
                    "description" : "The identifier of the workstation where the resource is defined.",
                    
                  },
                  "workstation" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "A reference to the workstation where the resource is defined.",
                    
                  },
                  "quantity" : {
                    "type" : "integer",
                    "description" : "The quantity of the resource defined.",
                    "format" : "int32",
                    
                  },
                  "quantityAvailable" : {
                    "type" : "integer",
                    "description" : "The quantity of the resource available.",
                    "format" : "int32",
                    
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The description of the resource.",
                    
                  },
                  "quantityInUse" : {
                    "type" : "integer",
                    "description" : "The quantity of the resource is in use.",
                    "format" : "int32",
                    
                  },
                  "holders" : {
                    "type" : "array",
                    "description" : "The resource holders information.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ResourceHolderInPlan"
                    }
                  },
                  "actions" : {
                    "type" : "array",
                    "readOnly" : true,
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ActionV2"
                    }
                  },
                  "archived" : {
                    "type" : "boolean",
                    "description" : "The flag to indicate if the object is archived.",
                    
                  },
                  "status" : {
                    "$ref" : "#/components/schemas/ResourceInPlanStatus"
                  },
                  "internalIdentifier" : {
                    "type" : "string",
                    "description" : "The internal key value.",
                    
                  }
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No resource with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided patch item is not valid to perform JSON merge patch (RFC 7396) on the specified resource."
          },
          "200" : {
            "description" : "The resources in plan has been correctly patched.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/resource/action/update-quantity" : {
      "put" : {
        "tags" : [ "V2 APIs - Resource In Plan" ],
        "summary" : "Update quantity by filter",
        "description" : "Updates the quantity of a resource selected by filter.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/resource/{resource_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Resource In Plan" ],
        "summary" : "Get resource in plan",
        "description" : "Retrieves a resource in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "resource_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
            "default" : "current"
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No resource with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The resource have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceInPlanV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "patch" : {
        "tags" : [ "V2 APIs - Resource In Plan" ],
        "summary" : "Patch resource in plan",
        "description" : "Retrieves a resource in the plan that matches the specified identifier to modify the resource.",
        "parameters" : [ {
          "name" : "resource_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "description" : "The resource in plan details that can be patched according to merge JSON patch (RFC 7396). For more information, see the update action payload that is returned by /twsd/api/v2/objects-info endpoint.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "engineId" : {
                    "type" : "string",
                    "description" : "The identifier of the engine.",
                    "readOnly" : true,
                    
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "persistentId" : {
                    "type" : "string",
                    "description" : "The persistent unique identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "folderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "folder" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
                    
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the key",
                    
                  },
                  "key" : {
                    "type" : "string",
                    "description" : "The actual key value.",
                    
                  },
                  "workstationId" : {
                    "type" : "string",
                    "description" : "The identifier of the workstation where the resource is defined.",
                    
                  },
                  "workstation" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "A reference to the workstation where the resource is defined.",
                    
                  },
                  "quantity" : {
                    "type" : "integer",
                    "description" : "The quantity of the resource defined.",
                    "format" : "int32",
                    
                  },
                  "quantityAvailable" : {
                    "type" : "integer",
                    "description" : "The quantity of the resource available.",
                    "format" : "int32",
                    
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The description of the resource.",
                    
                  },
                  "quantityInUse" : {
                    "type" : "integer",
                    "description" : "The quantity of the resource is in use.",
                    "format" : "int32",
                    
                  },
                  "holders" : {
                    "type" : "array",
                    "description" : "The resource holders information.",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ResourceHolderInPlan"
                    }
                  },
                  "actions" : {
                    "type" : "array",
                    "readOnly" : true,
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ActionV2"
                    }
                  },
                  "archived" : {
                    "type" : "boolean",
                    "description" : "The flag to indicate if the object is archived.",
                    
                  },
                  "status" : {
                    "$ref" : "#/components/schemas/ResourceInPlanStatus"
                  },
                  "internalIdentifier" : {
                    "type" : "string",
                    "description" : "The internal key value.",
                    
                  }
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No resource with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided patch item is not valid to perform JSON merge patch (RFC 7396) on the specified resource."
          },
          "200" : {
            "description" : "The resource in plan has been correctly patched.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/resource/{resource_id}/action/update-quantity" : {
      "put" : {
        "tags" : [ "V2 APIs - Resource In Plan" ],
        "summary" : "Update quantity by id",
        "description" : "Updates the quantity of a resource selected by id.",
        "parameters" : [ {
          "name" : "resource_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No resource with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation" : {
      "get" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Query workstations in plan",
        "description" : "Retrieves workstations in the plan that match the specified filters.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify the maximum number of jobs to be returned by the query.",
            "format" : "int32",
            
            "default" : 10000
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "description" : "Specify from which job to start returning results ",
            "format" : "int32",
            
            "default" : 0
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more workstations.",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Include-Count",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "If true, the query returns the total amount of items identified by the specified filter. By default, it is false.",
            
            "default" : "true"
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The parameters specified for the filters are not valid."
          },
          "200" : {
            "description" : "The workstations have been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedResponseV219"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "patch" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Patch workstation in plan",
        "description" : "Retrieves a workstation in the plan that matches the specified identifier to modify the workstation.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "description" : "The workstation in plan details that can be patched according to merge json patch (RFC 7396). For more information, see the update action payload that is returned by /twsd/api/v2/objects-info endpoint.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "engineId" : {
                    "type" : "string",
                    "description" : "The identifier of the engine.",
                    "readOnly" : true,
                    
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "persistentId" : {
                    "type" : "string",
                    "description" : "The persistent unique identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "planId" : {
                    "type" : "string",
                    
                  },
                  "folderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "folder" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
                    
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the key",
                    
                  },
                  "key" : {
                    "type" : "string",
                    "description" : "The actual key value.",
                    
                  },
                  "symId" : {
                    "type" : "string",
                    
                  },
                  "runNumber" : {
                    "type" : "integer",
                    "format" : "int32",
                    
                  },
                  "description" : {
                    "type" : "string",
                    
                  },
                  "activeStates" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/WorkstationStateEnum"
                    }
                  },
                  "activeFlags" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/WorkstationFlagEnum"
                    }
                  },
                  "type" : {
                    "$ref" : "#/components/schemas/WorkstationType"
                  },
                  "hostType" : {
                    "$ref" : "#/components/schemas/HostWorkstationType"
                  },
                  "os" : {
                    "$ref" : "#/components/schemas/OperatingSystemV2"
                  },
                  "timeZone" : {
                    "type" : "string",
                    
                  },
                  "nodeName" : {
                    "type" : "string",
                    
                  },
                  "tcpPort" : {
                    "type" : "integer",
                    "format" : "int32",
                    
                  },
                  "domainName" : {
                    "type" : "string",
                    
                  },
                  "limit" : {
                    "type" : "integer",
                    "description" : "The workstation limit.",
                    "format" : "int32",
                    
                  },
                  "fence" : {
                    "type" : "integer",
                    "description" : "The workstation fence.",
                    "format" : "int32",
                    
                  },
                  "agentId" : {
                    "type" : "string",
                    
                  },
                  "version" : {
                    "type" : "string",
                    
                  },
                  "userInfo" : {
                    "type" : "string",
                    
                  },
                  "requested" : {
                    "type" : "integer",
                    "format" : "int32",
                    
                  },
                  "createdTimestamp" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "timeStarted" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "securityLevel" : {
                    "$ref" : "#/components/schemas/SecurityLevel"
                  },
                  "sslPort" : {
                    "type" : "integer",
                    "format" : "int32",
                    
                  },
                  "host" : {
                    "type" : "string",
                    
                  },
                  "hostWorkstation" : {
                    "type" : "string",
                    
                  },
                  "mailmanServerId" : {
                    "type" : "string",
                    
                  },
                  "actions" : {
                    "type" : "array",
                    "readOnly" : true,
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ActionV2"
                    }
                  },
                  "ignore" : {
                    "type" : "boolean",
                    
                  },
                  "archived" : {
                    "type" : "boolean",
                    "description" : "The flag to indicate if the object is archived.",
                    
                  }
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided patch item is not valid to perform JSON merge patch (RFC 7396) on the specified workstation."
          },
          "200" : {
            "description" : "The workstation in plan has been correctly patched.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/become-mdm" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Become Master Domain Manager",
        "description" : "Become Master Domain Manager.",
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/connect-to-host-cpu" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Connect to host cpu by filter",
        "description" : "Connect to host cpu by filter",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkstationConnectInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/health-status" : {
      "get" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Get health status of workstation in plan by filter",
        "description" : "Get health status of workstation in plan by filter",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/link" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Link workstation in plan",
        "description" : "Links workstations in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the workstation in plan that have been correctly linked and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/monitoring-configuration" : {
      "get" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Get monitoring configuration by filter",
        "description" : "Get monitoring configuration by filter",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/start" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Start by filter",
        "description" : "Start by filter",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/start-event-monitoring" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Start event monitoring",
        "description" : "Start event monitoring",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the workstation in plan started.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/start-event-processor" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Switch event processor by key",
        "description" : "Switch event processor by key",
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/stop" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Stop by filter",
        "description" : "Stop by filter",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/stop-event-monitoring" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Start Event Monitoring By Filter",
        "description" : "Start Event Monitoring By Filter.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/stop-event-processor" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Stop event processor by key",
        "description" : "Stop event processor by key",
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/switch-event-processor" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Switch Event Processor By Key",
        "description" : "Switch Event Processor By Key",
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : " ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/unlink" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Unlink by filter",
        "description" : "Unlink by filter",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/update-fence" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Update fence by filter",
        "description" : "Update fence by filter",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "priority",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/update-limit" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Update limit by filter",
        "description" : "Update limit by filter.",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/action/upgrade" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Upgrade workstation in plan",
        "description" : "Upgrade workstations in the plan that match the provided filters.",
        "parameters" : [ {
          "name" : "max_object_affected",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
            "default" : 1
          }
        }, {
          "name" : "oql",
          "in" : "query",
          "description" : "For information about the OQL filter syntax, refer to the \"Using Orchestration Query Language\" topic in the product documentation.",
          "schema" : {
            "type" : "string",
            "description" : "Define the path or the name of one or more job or jobstream. You can also sort the results by entering the order definition. Example: \"jobstreamName = 'TEST_JS' AND key.name = 'TEST_JOB' ORDER BY key.name ASC\"",
            
          },
          "examples" : {
            "-- Select an example --" : {
              "value" : ""
            },
            "Filter by exact name and matching folder and sort results in name descending order" : {
              "value" : "name = 'MY_NAME' AND folder LIKE '/FOL@' ORDER BY name DESC"
            },
            "Retrieve all items within folders named \"/FOL1\" and \"/FOL2\"" : {
              "value" : "folder IN ['/FOL1','/FOL2']"
            },
            "Filter by exact id and either matching folder or folder name similar to provided input" : {
              "value" : "id = 'id_example' AND (folder = '/FOL' OR name LIKE '@EXAMPLE@')"
            },
            "Retrieve online workstations" : {
              "value" : "activeStates IN ['ONLINE']"
            }
          }
        }, {
          "name" : "plan_filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "The provided parameters are not valid."
          },
          "200" : {
            "description" : "Lists the workstation in plan that have been correctly upgraded and the ones for which the procedure failed with related error messages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilterActionResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/collect-agent-logs" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Collect Agent Logs",
        "description" : "Collect Agent Logs",
        "parameters" : [ {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ComponentCommandInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}" : {
      "get" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Get workstation in plan",
        "description" : "Retrieves a workstation in the plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The workstation has been correctly retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkstationInPlanV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "patch" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Patch workstation in plan",
        "description" : "Retrieves a workstation in the plan that matches the specified identifier to modify the workstation.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Context-Session",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Justification-Category",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Description",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Justification-Ticket-Num",
          "in" : "header",
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "description" : "The workstation in plan details that can be patched according to merge JSON patch (RFC 7396). For more information, see the update action payload that is returned by /twsd/api/v2/objects-info endpoint.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "engineId" : {
                    "type" : "string",
                    "description" : "The identifier of the engine.",
                    "readOnly" : true,
                    
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "persistentId" : {
                    "type" : "string",
                    "description" : "The persistent unique identifier of the object.",
                    "readOnly" : true,
                    
                  },
                  "planId" : {
                    "type" : "string",
                    
                  },
                  "folderId" : {
                    "type" : "string",
                    "description" : "The identifier of the referenced folder.",
                    
                  },
                  "folder" : {
                    "pattern" : ".*",
                    "type" : "string",
                    "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
                    
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the key",
                    
                  },
                  "key" : {
                    "type" : "string",
                    "description" : "The actual key value.",
                    
                  },
                  "symId" : {
                    "type" : "string",
                    
                  },
                  "runNumber" : {
                    "type" : "integer",
                    "format" : "int32",
                    
                  },
                  "description" : {
                    "type" : "string",
                    
                  },
                  "activeStates" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/WorkstationStateEnum"
                    }
                  },
                  "activeFlags" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    
                    "items" : {
                      "$ref" : "#/components/schemas/WorkstationFlagEnum"
                    }
                  },
                  "type" : {
                    "$ref" : "#/components/schemas/WorkstationType"
                  },
                  "hostType" : {
                    "$ref" : "#/components/schemas/HostWorkstationType"
                  },
                  "os" : {
                    "$ref" : "#/components/schemas/OperatingSystemV2"
                  },
                  "timeZone" : {
                    "type" : "string",
                    
                  },
                  "nodeName" : {
                    "type" : "string",
                    
                  },
                  "tcpPort" : {
                    "type" : "integer",
                    "format" : "int32",
                    
                  },
                  "domainName" : {
                    "type" : "string",
                    
                  },
                  "limit" : {
                    "type" : "integer",
                    "description" : "The workstation limit.",
                    "format" : "int32",
                    
                  },
                  "fence" : {
                    "type" : "integer",
                    "description" : "The workstation fence.",
                    "format" : "int32",
                    
                  },
                  "agentId" : {
                    "type" : "string",
                    
                  },
                  "version" : {
                    "type" : "string",
                    
                  },
                  "userInfo" : {
                    "type" : "string",
                    
                  },
                  "requested" : {
                    "type" : "integer",
                    "format" : "int32",
                    
                  },
                  "createdTimestamp" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "timeStarted" : {
                    "$ref" : "#/components/schemas/Instant"
                  },
                  "securityLevel" : {
                    "$ref" : "#/components/schemas/SecurityLevel"
                  },
                  "sslPort" : {
                    "type" : "integer",
                    "format" : "int32",
                    
                  },
                  "host" : {
                    "type" : "string",
                    
                  },
                  "hostWorkstation" : {
                    "type" : "string",
                    
                  },
                  "mailmanServerId" : {
                    "type" : "string",
                    
                  },
                  "actions" : {
                    "type" : "array",
                    "readOnly" : true,
                    
                    "items" : {
                      "$ref" : "#/components/schemas/ActionV2"
                    }
                  },
                  "ignore" : {
                    "type" : "boolean",
                    
                  },
                  "archived" : {
                    "type" : "boolean",
                    "description" : "The flag to indicate if the object is archived.",
                    
                  }
                },
                
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "400" : {
            "description" : "The provided patch item is not valid to perform JSON merge patch (RFC 7396) on the specified workstation."
          },
          "200" : {
            "description" : "The workstation in plan has been correctly patched.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/become-mdm" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Become Master Domain Manager",
        "description" : "Become Master Domain Manager",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/connect-to-host-cpu" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Connect to host cpu by id",
        "description" : "Connect to host cpu by id",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkstationConnectInfoV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/health-status" : {
      "get" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Health status of Workstation",
        "description" : "Health status of Workstation",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/link" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Sets workstation in plan as offline",
        "description" : "Sets offline the workstation in plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The workstation has been set offline.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/monitoring-configuration" : {
      "get" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Get monitoring configuration of workstation in plan",
        "description" : "Get monitoring configuration of workstation in plan",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/set-offline" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Sets workstation in plan as offline",
        "description" : "Sets offline the workstation in plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The workstation has been set offline.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/set-online" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Sets workstation in plan as online",
        "description" : "Sets online the workstation in plan that matches the specified identifier.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The workstation has been set online.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/start" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Start by id",
        "description" : "Start by id.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/start-event-monitoring" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Start Event Monitoring By Workstation Id",
        "description" : "Start Event Monitoring By Workstation Id",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/start-event-processor" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Start event processor by id",
        "description" : "Start event processor by id",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/stop" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Stop by id",
        "description" : "Stop by id",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The workstation has been set offline.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/stop-event-monitoring" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Stop Event Monitoring By Workstation Id",
        "description" : "Stop Event Monitoring By Workstation Id.",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/stop-event-processor" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Stop event processor by Id",
        "description" : "Stop event processor by Id",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/switch-event-processor" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Switch event processor by id",
        "description" : "Switch event processor by id",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/unlink" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Unlink by id",
        "description" : "Unlink by id",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/update-fence" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Update fence by id",
        "description" : "Update fence by id",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "priority",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/update-limit" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Update limit by id",
        "description" : "Update limit by id",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    },
    "/twsd/api/v2/plan/workstation/{workstation_id}/action/upgrade" : {
      "put" : {
        "tags" : [ "V2 APIs - Workstation In Plan" ],
        "summary" : "Upgrade Workstation",
        "description" : "Upgrade Workstation",
        "parameters" : [ {
          "name" : "workstation_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            
          }
        }, {
          "name" : "Base-Folder",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The relative path that is applied to folder fields in queries and in payloads. It is recommended for long folder paths.",
            
          }
        }, {
          "name" : "Date-Format",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The date format that is applied when evaluating a full format date on plan and model filters.",
            
          }
        }, {
          "name" : "Default-Workstation",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The default workstation that is applied if no other workstation is specified in queries and in payloads.",
            
          }
        }, {
          "name" : "Local-Timezone",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "description" : "The local timezone that is applied if no other timezone is specified in queries and in payloads.",
            
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "No workstation with the provided ID was found in the plan."
          },
          "200" : {
            "description" : "The workstation has been set offline.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponseV2"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ "**" ]
        } ]
      },
      "parameters" : [ ]
    }
  },
  "components" : {
    "schemas" : {
      "DeleteListResponseV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the resource.",
            
          },
          "url" : {
            "type" : "string",
            "description" : "The URL to get the resource.",
            
          },
          "message" : {
            "type" : "string",
            
          },
          "isError" : {
            "type" : "boolean",
            
          },
          "lockData" : {
            "$ref" : "#/components/schemas/LockDataV2"
          },
          "error" : {
            "type" : "boolean",
            
          },
          "deletedObjects" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ObjectIdentifier"
            }
          }
        },
        
      },
      "SecurityRole" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "permissions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              
              "items" : {
                "type" : "string",
                
              }
            },
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            "writeOnly" : true,
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            "writeOnly" : true,
            
          }
        },
        "description" : "Security Role defines a set of permissions that can be granted to users or group of users via an Access Control List.",
        
      },
      "Subset" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the subset.",
            
          },
          "runCycles" : {
            "type" : "array",
            "description" : "List of run cycles included in the subset.",
            
            "items" : {
              "$ref" : "#/components/schemas/RunCycleSubset"
            }
          },
          "exclusiveRunCycles" : {
            "type" : "array",
            "description" : "List of exclusive run cycles included in the subset.",
            
            "items" : {
              "$ref" : "#/components/schemas/ExclusiveRunCycleSubset"
            }
          }
        },
        "description" : "A subset of run cycles and exclusive run cycles.",
        
      },
      "HostWorkstationType" : {
        "type" : "string",
        
        "enum" : [ "MASTER", "MANAGER", "WORKSTATION" ]
      },
      "ResourceActionOnComplete" : {
        "type" : "string",
        
        "enum" : [ "DEFAULT", "YES", "NO", "RESET" ]
      },
      "JobRunInstanceV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The database identifier of the job run.",
            
          },
          "name" : {
            "type" : "string",
            
          },
          "jobId" : {
            "type" : "string",
            "description" : "The identifier of the job in plan.",
            
          },
          "jobKey" : {
            "type" : "string",
            
          },
          "actualWorkstation" : {
            "type" : "string",
            "description" : "The workstation where the job actually runs.",
            
          },
          "jobNumber" : {
            "type" : "integer",
            "description" : "The run number.",
            "format" : "int32",
            
          },
          "compositeStatus" : {
            "$ref" : "#/components/schemas/JobInPlanCompositeStatusV2"
          },
          "commonStatus" : {
            "$ref" : "#/components/schemas/CommonStatusV2"
          },
          "jobDefinition" : {
            "$ref" : "#/components/schemas/JobDefinitionInPlanV2"
          },
          "outputProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PropertyValueV2"
            },
            
          },
          "outputConditions" : {
            "type" : "array",
            "description" : "The list of the output conditions.",
            
            "items" : {
              "$ref" : "#/components/schemas/OutputConditionInPlanV2"
            }
          },
          "step" : {
            "type" : "string",
            "description" : "Alias for the job run.",
            
          },
          "returnCode" : {
            "type" : "integer",
            "description" : "The returnCode of the job.",
            "format" : "int32",
            
          },
          "rerunJob" : {
            "type" : "boolean",
            "description" : "The job is a re-run job. Read-only attribute.",
            "readOnly" : true,
            
          },
          "confirmed" : {
            "type" : "boolean",
            "description" : "The job instance has been confirmed.",
            
          },
          "released" : {
            "type" : "boolean",
            "description" : "The Job has been released. Read Only attribute.",
            "readOnly" : true,
            
          },
          "rerunType" : {
            "$ref" : "#/components/schemas/RerunType"
          },
          "timeInfo" : {
            "$ref" : "#/components/schemas/TimeInfoV2"
          },
          "submittedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "lastInRerunChain" : {
            "type" : "boolean",
            "description" : "A boolean representing if the job is the last in a re-run chain.",
            
          },
          "minDurationNotReached" : {
            "type" : "boolean",
            "description" : "Duration is lower than minimum duration. Read-only attribute.",
            
          },
          "maxDurationGone" : {
            "type" : "boolean",
            "description" : "Duration is higher than maximum duration. Read-only attribute.",
            
          },
          "runAttempt" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "actions" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          },
          "nestedJobStreamId" : {
            "type" : "string",
            "description" : "The id of the nested workflow",
            
          },
          "nestedJobStreamKey" : {
            "type" : "string",
            "description" : "The key of the nested workflow definition",
            
          },
          "nestedJobStreamSchedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "isGetNamesFromJobDefinition" : {
            "type" : "boolean",
            "writeOnly" : true,
            
          },
          "getNamesFromJobDefinition" : {
            "type" : "boolean",
            
          }
        },
        
      },
      "Document" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the plug in for a specific version",
            
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the plug in",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the plug in",
            
          },
          "version" : {
            "type" : "string",
            "description" : "The version of plug in",
            
          },
          "uploadStatus" : {
            "type" : "string",
            "writeOnly" : true,
            
          },
          "actionType" : {
            "type" : "string",
            "writeOnly" : true,
            
          },
          "actionResponse" : {
            "type" : "string",
            "writeOnly" : true,
            
          },
          "responseType" : {
            "type" : "string",
            "writeOnly" : true,
            
          },
          "documentType" : {
            "type" : "string",
            
          },
          "docVersion" : {
            "type" : "string",
            
          }
        },
        "description" : "PluginV2",
        
      },
      "LocalDate" : {
        "type" : "string",
        "format" : "date",
        
      },
      "DependencyExtendedStatus" : {
        "type" : "string",
        
        "enum" : [ "FROZEN_BY_COMPLETE", "FORCED_BY_RERUN" ]
      },
      "ModelObjectKind" : {
        "type" : "string",
        
        "enum" : [ "Calendar", "Folder", "JobDefinition", "JobStream", "EventSource", "Workstation", "Resource", "Prompt", "Variable", "Credentials", "Domain", "WorkstationClass", "VariableTable", "RunCycle", "ExclusiveRunCycle", "RunCycleGroup", "WorkloadApplicationTemplate", "SecurityRole", "ACL", "ApiKey", "PromptDependency", "InterNetworkDependency", "FileDependency", "ResourceDependency" ]
      },
      "DependencyType" : {
        "type" : "string",
        
        "enum" : [ "INTERNAL", "EXTERNAL_JOB", "EXTERNAL_JOBSTREAM", "JOIN", "FILE", "RESOURCE", "INTERNETWORK", "PROMPT" ]
      },
      "JoinConditionForJob" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the object.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Specify the name of the join condition.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the join condition.",
            
          },
          "howMany" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Specify the the number of the predecessor dependencies that must be satisfied to fulfill the join dependency. If no value is specified, all the predecessor dependencies must be satisfied.",
            "format" : "int32",
            
          },
          "externalPredecessors" : {
            "type" : "array",
            "description" : "Dependencies on other job streams, or on jobs in other job streams.",
            
            "items" : {
              "$ref" : "#/components/schemas/ExternalPredecessor"
            }
          },
          "internalPredecessors" : {
            "type" : "array",
            "description" : "Dependencies on other job streams, or on jobs in other job streams.",
            
            "items" : {
              "$ref" : "#/components/schemas/InternalPredecessor"
            }
          }
        },
        
      },
      "EngineType" : {
        "type" : "string",
        
        "enum" : [ "UNO", "DIST", "ZOS", "FEDERATOR" ]
      },
      "WorkstationClass" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "options" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of options for the workstation.",
            
            "items" : {
              "$ref" : "#/components/schemas/WorkstationOption"
            }
          },
          "allWorkstationsIncluded" : {
            "type" : "boolean",
            "description" : "True if all workstations are included in the workstation class, false otherwise.",
            
          },
          "workstationLinks" : {
            "type" : "array",
            "description" : "List of workstation member in the workstation class.",
            
            "items" : {
              "$ref" : "#/components/schemas/MemberWorkstation"
            }
          }
        },
        "description" : "A workstation class is a group of workstations with similar job scheduling characteristics.",
        
      },
      "PaginatedResponseV29" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectRunCycleGroup"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "Status" : {
        "type" : "string",
        
        "enum" : [ "SATISFIED", "UNSATISFIED", "UNDECIDED", "UNBOUND" ]
      },
      "FileStatusType" : {
        "type" : "string",
        
        "enum" : [ "Not Checked", "Checking", "Exists", "Unavailable", "Resync" ]
      },
      "PaginatedResponseV28" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectResource"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "TriggerType" : {
        "type" : "string",
        
        "enum" : [ "scheduling", "event group", "manual submit", "service", "nesting" ]
      },
      "VariableTable" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "default" : {
            "type" : "boolean",
            "description" : "If selected, the specified variable table is set as default.",
            
          },
          "variables" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "The list of variables defined by the variable table.",
            
          }
        },
        "description" : "A Variable table is a list of variable (key, value tuple) that can be used to make job definition more generic. Variable tables can be specified in Workstations, Job Streams and Run Cycles.",
        
      },
      "PaginatedResponseV27" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectPrompt"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "ResourceAllocationType" : {
        "type" : "string",
        
        "enum" : [ "EXCLUSIVE", "SHARED" ]
      },
      "PaginatedResponseV26" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectJobStream"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "ModifyDataV21" : {
        "type" : "object",
        "properties" : {
          "modifiedBy" : {
            "type" : "string",
            
          },
          "modifiedTime" : {
            "$ref" : "#/components/schemas/Instant"
          }
        },
        
      },
      "PaginatedResponseV25" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectJobDefinition"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "PaginatedResponseV24" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectFolder"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "RerunDetailsV2" : {
        "type" : "object",
        "properties" : {
          "jobDefinitionDbIdentifier" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the job definition taken from the Database. If specified, the rerun will be a 'Rerun from'.",
            
          },
          "jobDefinitionDbKey" : {
            "type" : "string",
            "description" : "The key of the job definition taken from the Database. If specified, the rerun will be a 'Rerun from'.",
            
          },
          "userLogin" : {
            "type" : "string",
            "description" : "If specified, it is used as new user logon value.",
            
          },
          "variables" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "Variables that can be specified for the new run.",
            
          },
          "priority" : {
            "type" : "integer",
            "description" : "The new priority value. If not specified, the default value is 10.",
            "format" : "int32",
            
          },
          "startTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "asap" : {
            "type" : "boolean",
            "description" : "If set to true, the job should be run immediately, otherwise accordingly to the start time set.",
            
          },
          "stepName" : {
            "type" : "string",
            "description" : "The step name to be used. If not specified, the rerun will not be a 'rerun step'.",
            
          },
          "skipCheckForJobSuccessorRerun" : {
            "type" : "boolean",
            "description" : "If set to true, the security and status check must be skipped.",
            
          },
          "rerunJobOnTermination" : {
            "type" : "boolean",
            "description" : "True if rerun must be performed at the job termination. False otherwise.",
            
          },
          "rerunJobOnSameWorkstation" : {
            "type" : "boolean",
            "description" : "True if rerun must be performed on the same workstation (for pool and dynamic pool). False otherwise.",
            
          },
          "jobDefinitionInPlan" : {
            "$ref" : "#/components/schemas/JobDefinitionInPlanV2"
          },
          "successorsInfo" : {
            "$ref" : "#/components/schemas/SuccessorsInfo"
          },
          "successorsInformation" : {
            "$ref" : "#/components/schemas/SuccessorsInfo"
          }
        },
        
      },
      "PaginatedResponseV23" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectDomain"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "Instant" : {
        "type" : "string",
        "format" : "date-time",
        
      },
      "PaginatedResponseV22" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectCredentials"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "PaginatedResponseV21" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectCalendar"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "EventCondition" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the event condition.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the event condition.",
            
          },
          "eventPlugin" : {
            "type" : "string",
            "description" : "Referred plug-in name.",
            
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the expected event.",
            
          },
          "eventSourceId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The event source id referenced by this event condition.",
            
          },
          "eventSource" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the event source that is referenced by this event condition.",
            
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope of this event condition.",
            "readOnly" : true,
            
          },
          "attributeFilters" : {
            "type" : "array",
            "description" : "The list of conditions that must be satisfied to consider the event as received.",
            
            "items" : {
              "$ref" : "#/components/schemas/AttributeFilter"
            }
          }
        },
        
      },
      "ModelObjectPrompt" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/Prompt"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "InternetworkDependencyInPlanV2" : {
        "required" : [ "dependencyType" ],
        "type" : "object",
        "properties" : {
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object. It must be provided to release or remove a set of dependencies",
            
          },
          "dependencyStatus" : {
            "$ref" : "#/components/schemas/Status"
          },
          "satisfied" : {
            "type" : "boolean",
            "description" : "A boolean that shows if the dependency is satisfied or not",
            "readOnly" : true,
            
          },
          "depSequence" : {
            "type" : "integer",
            "description" : "The sequence number of the dependency.",
            "format" : "int32",
            "readOnly" : true,
            
          },
          "mandatory" : {
            "type" : "boolean",
            
          },
          "networkAgentId" : {
            "type" : "string",
            "description" : "The Identifier of the Network Agent",
            
          },
          "jobId" : {
            "type" : "string",
            "description" : "The Identifier of the External Job",
            
          },
          "jobStreamId" : {
            "type" : "string",
            "description" : "The Identifier of the External Job Stream",
            
          },
          "jobSuccId" : {
            "type" : "string",
            "description" : "The Identifier of the <b>JobInPlan</b> that points to this dependency.",
            
          },
          "jobStreamSuccId" : {
            "type" : "string",
            "description" : "The Identifier of the JobStreamInPlan that points to this dependency.",
            
          },
          "networkAgent" : {
            "type" : "string",
            "description" : "The key of the workstation in the plan of the Network agent",
            
          },
          "workstationOriginalName" : {
            "type" : "string",
            "description" : "The original name of the referenced workstation (the one without the folder)",
            
          },
          "dependency" : {
            "type" : "string",
            "description" : "A string representing the real dependency",
            
          },
          "jobInPlanCompositeStatus" : {
            "$ref" : "#/components/schemas/JobInPlanCompositeStatusV2"
          },
          "jobStreamInPlanCompositeStatus" : {
            "$ref" : "#/components/schemas/JobStreamInPlanCompositeStatusV2"
          }
        },
        
      },
      "PromptDependencyInPlanV2" : {
        "required" : [ "dependencyType" ],
        "type" : "object",
        "properties" : {
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "id" : {
            "type" : "string",
            "description" : "The Prompt Identifier",
            
          },
          "dependencyStatus" : {
            "$ref" : "#/components/schemas/Status"
          },
          "satisfied" : {
            "type" : "boolean",
            "description" : "A boolean that shows if the dependency is satisfied or not",
            "readOnly" : true,
            
          },
          "depSequence" : {
            "type" : "integer",
            "description" : "The sequence number of the dependency.",
            "format" : "int32",
            "readOnly" : true,
            
          },
          "mandatory" : {
            "type" : "boolean",
            
          },
          "folderId" : {
            "type" : "string",
            "description" : "The Workstation Identifier",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by this Prompt In Plan",
            
          },
          "promptName" : {
            "type" : "string",
            "description" : "Name of the prompt",
            
          },
          "promptOriginalName" : {
            "type" : "string",
            "description" : "Original name of the prompt",
            
          },
          "workstationOriginalName" : {
            "type" : "string",
            "description" : "The original name of the workstation (the one without the folder) referenced by this Prompt In Plan",
            
          },
          "workstationId" : {
            "type" : "string",
            "description" : "The Workstation Identifier",
            
          },
          "workstation" : {
            "type" : "string",
            "description" : "The Workstation Key",
            
          },
          "text" : {
            "type" : "string",
            "description" : "The Text of the prompt",
            
          },
          "promptStatus" : {
            "$ref" : "#/components/schemas/PromptStatus"
          },
          "promptType" : {
            "$ref" : "#/components/schemas/PromptType"
          },
          "number" : {
            "type" : "integer",
            "description" : "The Prompt Number",
            "format" : "int32",
            
          },
          "loadedFromDb" : {
            "type" : "boolean",
            "description" : "Loaded from DB. For internal use only",
            
          },
          "actions" : {
            "type" : "array",
            "description" : "Available actions",
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "CheckboxGroupVariable" : {
        "required" : [ "choices", "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the ServiceVariable.",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the self-service variable",
            
            "allOf" : [ {
              "type" : "string",
              "description" : "Type of the specific service variable.",
              
              "enum" : [ "string", "integer", "double", "checkbox", "select", "multiSelect", "radioGroup", "checkboxGroup" ]
            } ],
            "default" : "checkboxGroup"
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the self-service variable",
            
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the self-service variable",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the self-service variable",
            
          },
          "placeholder" : {
            "type" : "string",
            "description" : "The placeholder of the self-service variable",
            
          },
          "required" : {
            "type" : "boolean",
            "description" : "Specifies if the self-service variable is required",
            
          },
          "choices" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ValueChoice"
            }
          }
        },
        
      },
      "MaxDurationActionV2" : {
        "type" : "string",
        
        "enum" : [ "continue", "kill" ]
      },
      "ResourceDependencyInPlanV2" : {
        "required" : [ "dependencyType" ],
        "type" : "object",
        "properties" : {
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object. It must be provided to release or remove a set of dependencies",
            
          },
          "dependencyStatus" : {
            "$ref" : "#/components/schemas/Status"
          },
          "satisfied" : {
            "type" : "boolean",
            "description" : "A boolean that shows if the dependency is satisfied or not",
            "readOnly" : true,
            
          },
          "depSequence" : {
            "type" : "integer",
            "description" : "The sequence number of the dependency.",
            "format" : "int32",
            "readOnly" : true,
            
          },
          "mandatory" : {
            "type" : "boolean",
            
          },
          "folderId" : {
            "type" : "string",
            "description" : "The referenced Folder Identifier",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the Resource In Plan",
            
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource",
            
          },
          "originalName" : {
            "type" : "string",
            "description" : "Original name of the resource",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Workstation to which the Resource refers.",
            
          },
          "workstationId" : {
            "type" : "string",
            "description" : "The referenced Workstation Identifier",
            
          },
          "workstationOriginalName" : {
            "type" : "string",
            "description" : "The original name of the workstation (the one without the folder) referenced by this Resource In plan",
            
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Number of units required by this dependency.",
            "format" : "int32",
            
          },
          "quantityHeld" : {
            "type" : "integer",
            "description" : "Number of units currently held by this dependency.",
            "format" : "int32",
            
          },
          "available" : {
            "type" : "integer",
            "description" : "The Available Resources",
            "format" : "int32",
            
          },
          "actionOnComplete" : {
            "$ref" : "#/components/schemas/ResourceActionOnComplete"
          },
          "totalQuantity" : {
            "type" : "integer",
            "description" : "The total quantity. For internal use only.",
            "format" : "int32",
            
          },
          "loadedFromDb" : {
            "type" : "boolean",
            "description" : "Loaded from DB. For internal use only. ",
            
          }
        },
        
      },
      "MemberWorkstation" : {
        "type" : "object",
        "properties" : {
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of workstation.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of workstation.",
            
          },
          "type" : {
            "$ref" : "#/components/schemas/WorkstationType"
          }
        },
        "description" : "A dependency on another job stream, or on a job in another job stream.",
        
      },
      "WorkstationInPlanAvailabilitySettings" : {
        "type" : "object",
        "properties" : { },
        
      },
      "AttributeFilter" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the filter field.",
            
          },
          "operator" : {
            "$ref" : "#/components/schemas/OperatorType"
          },
          "values" : {
            "type" : "array",
            "description" : "The list of values that are valid for the specified field.",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        
      },
      "MatchingCriteriaInterval" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/MatchingCriteriaType"
          },
          "fromTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "fromDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the start of the time window.",
            "format" : "int32",
            
          },
          "from" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "toTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "toDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the end of the time window.",
            "format" : "int32",
            
          },
          "to" : {
            "$ref" : "#/components/schemas/Duration"
          }
        },
        "description" : "Time window used for relative or absolute interval matching criteria.",
        
      },
      "StatsPeriod" : {
        "type" : "string",
        
        "enum" : [ "day", "month" ]
      },
      "TimeRestrictionsInPlanV2" : {
        "type" : "object",
        "properties" : {
          "startTime" : {
            "type" : "string",
            "description" : "The date of the start time.",
            "format" : "date-time",
            
          },
          "deadlineTime" : {
            "type" : "string",
            "description" : "The date of the deadline time.",
            "format" : "date-time",
            
          },
          "lateAction" : {
            "$ref" : "#/components/schemas/LateAction"
          },
          "maxDuration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "minDuration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "latestStartTime" : {
            "type" : "string",
            "description" : "The latest start time.",
            "format" : "date-time",
            
          },
          "lateStartAction" : {
            "$ref" : "#/components/schemas/LateStartAction"
          },
          "minDurationAction" : {
            "$ref" : "#/components/schemas/MinDurationActionV2"
          },
          "maxDurationAction" : {
            "$ref" : "#/components/schemas/MaxDurationActionV2"
          },
          "timeDependent" : {
            "type" : "boolean",
            "description" : "If true, AT time dependency's evaluation is active",
            
          },
          "startTimeSatisfied" : {
            "type" : "boolean",
            
          },
          "deadlineSatisfied" : {
            "type" : "boolean",
            
          },
          "latestStartSatisfied" : {
            "type" : "boolean",
            
          },
          "maxDurationSatisfied" : {
            "type" : "boolean",
            
          },
          "minDurationSatisfied" : {
            "type" : "boolean",
            
          },
          "perJobLatestStart" : {
            "type" : "boolean",
            
          }
        },
        
      },
      "HttpMethod" : {
        "type" : "string",
        
        "enum" : [ "GET", "POST", "PATCH", "PUT", "DELETE" ]
      },
      "ModelObjectWorkstationClass" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/WorkstationClass"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "WorkstationOption" : {
        "type" : "string",
        
        "enum" : [ "ignore", "autolink", "behindFirewall", "fullStatus" ]
      },
      "FlowNodeType" : {
        "type" : "string",
        
        "enum" : [ "JOB", "JOBSTREAM" ]
      },
      "InterNetworkDependency" : {
        "type" : "object",
        "properties" : {
          "networkAgentId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the X-AGENT workstation that resolves the dependency.",
            
          },
          "networkAgent" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of the X-AGENT workstation that resolves the dependency.",
            
          },
          "dependency" : {
            "type" : "string",
            "description" : "Identifies the object on the remote system.",
            
          }
        },
        "description" : "A dependency on a remote system via an X-AGENT.",
        
      },
      "JoinDependencyInPlanV2" : {
        "required" : [ "dependencyType" ],
        "type" : "object",
        "properties" : {
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object. It must be provided to release or remove a set of dependencies",
            
          },
          "dependencyStatus" : {
            "$ref" : "#/components/schemas/Status"
          },
          "satisfied" : {
            "type" : "boolean",
            "description" : "A boolean that shows if the dependency is satisfied or not",
            "readOnly" : true,
            
          },
          "depSequence" : {
            "type" : "integer",
            "description" : "The sequence number of the dependency.",
            "format" : "int32",
            "readOnly" : true,
            
          },
          "mandatory" : {
            "type" : "boolean",
            
          },
          "joinName" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The join name key",
            
          },
          "joinQuantity" : {
            "type" : "integer",
            "description" : "The Join quantity",
            "format" : "int32",
            
          },
          "members" : {
            "type" : "array",
            "description" : "The Join dependency members",
            
            "items" : {
              "$ref" : "#/components/schemas/FlowNodeDependencyInPlanV2"
            }
          },
          "criteria" : {
            "$ref" : "#/components/schemas/JoinCriteria"
          }
        },
        
      },
      "RunCycleType" : {
        "type" : "string",
        "description" : "How the run cycle generates the instances.",
        
        "enum" : [ "simple", "calendar", "rrule", "group" ]
      },
      "JobInPlanStatus" : {
        "type" : "string",
        
        "enum" : [ "HOLD", "READY", "FENCE", "INTRO", "FAIL", "EXEC", "WAIT", "SUPPR", "END", "SUCC", "SUCCP", "ABEND", "CANCL", "CANCLP", "ABENP", "PEND", "SUSP", "STUCK", "EXTRN", "INTRPT", "COMPLT", "ERROR", "PENDPRED", "STARTED", "UNDCDED", "ARRVING", "NONREPPRED" ]
      },
      "ModelObjectWorkloadApplicationTemplate" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/WorkloadApplicationTemplate"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "SubmitJobOptionsV2" : {
        "type" : "object",
        "properties" : {
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "The variables used by the object.",
            
          },
          "inputArrivalTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "variableTableId" : {
            "type" : "string",
            "description" : "The identifier of the variable table referenced by the object.",
            
          },
          "variableTableKey" : {
            "type" : "string",
            "description" : "The key of the variable table referenced by the object. Used as an alternative of the identifier.",
            
          },
          "alias" : {
            "type" : "string",
            "description" : "The alias of the object.",
            
          },
          "priority" : {
            "type" : "integer",
            "description" : "The priority of the flow node.",
            "format" : "int32",
            
          },
          "monitored" : {
            "type" : "boolean",
            "description" : "Flag to monitor a flow node.",
            
          },
          "earliestDate" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "latestStart" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "lateStartAction" : {
            "$ref" : "#/components/schemas/LateStartAction"
          },
          "deadlineTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "dependencies" : {
            "type" : "array",
            "description" : "The list of dependencies in plan of the flow node. If the object is the result of a query, the list is not filled.",
            
            "items" : {
              "$ref" : "#/components/schemas/DependencyInPlanV2"
            }
          },
          "jobStreamId" : {
            "type" : "string",
            "description" : "Identifies the job stream where the job is submitted. If not specified the job is submitted to the default jobstream.",
            
          },
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the referenced workstation.",
            
          },
          "workstationKey" : {
            "type" : "string",
            "description" : "The key of the referenced workstation. Used as an alternative of the identifier.",
            
          },
          "critical" : {
            "type" : "boolean",
            "description" : "Flags the job as critical.",
            
          },
          "requiresConfirmation" : {
            "type" : "boolean",
            "description" : "Specifies if the job requires confirmation.",
            
          },
          "hasUniqueName" : {
            "type" : "boolean",
            "description" : "Used to specify if the submitted job needs to have a unique name",
            
          },
          "interactive" : {
            "type" : "boolean",
            "description" : "Flags the job as interactive.",
            
          },
          "returnCodeMapping" : {
            "type" : "string",
            
          },
          "recoveryOption" : {
            "$ref" : "#/components/schemas/RecoveryOptionV2"
          },
          "recoveryMessage" : {
            "type" : "string",
            
          },
          "recoveryJobId" : {
            "type" : "string",
            
          },
          "recoveryJob" : {
            "type" : "string",
            
          },
          "recoveryWorkstationId" : {
            "type" : "string",
            
          },
          "minDuration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "minDurationAction" : {
            "$ref" : "#/components/schemas/MinDurationActionV2"
          },
          "maxDuration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "maxDurationAction" : {
            "$ref" : "#/components/schemas/MaxDurationActionV2"
          },
          "repeatInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "skipLateAction" : {
            "$ref" : "#/components/schemas/SkipLateAction"
          }
        },
        
      },
      "ApiKeyType" : {
        "type" : "string",
        
        "enum" : [ "PERSONAL", "SERVICE" ]
      },
      "ActionV2" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "pattern" : ".*",
            "type" : "string",
            "readOnly" : true,
            
          },
          "id" : {
            "type" : "string",
            "readOnly" : true,
            
          }
        },
        
      },
      "CommonModelHeaderV2" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          }
        },
        
      },
      "EventTriggerInfoV2" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the event trigger that caused the submission of this job stream",
            
          },
          "timeout" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "triggerOnTimeout" : {
            "type" : "boolean",
            "description" : "Specifies that this job stream is submitted after the timeout expiration.",
            
          },
          "inOrder" : {
            "type" : "boolean",
            "description" : "Specifies that the events in the event trigger must be received strictly in the provided order.",
            
          },
          "correlationAttributes" : {
            "type" : "array",
            "description" : "Specifies which field is used to correlate the events.",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        
      },
      "ResourceDependency" : {
        "type" : "object",
        "properties" : {
          "resourceId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the resource.",
            
          },
          "resource" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of the resource.",
            
          },
          "quantity" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The quantity of the resource to allocate.",
            "format" : "int32",
            
          }
        },
        "description" : "A resources allocated while the job stream or job is running.",
        
      },
      "ActionObjectV2" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "FilterActionResponseV2" : {
        "type" : "object",
        "properties" : {
          "successfulResourceResponses" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ActionResourceResponseV2"
            }
          },
          "failedResourceResponses" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ActionResourceResponseV2"
            }
          }
        },
        
      },
      "PromptInPlanV2" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          },
          "engineId" : {
            "type" : "string",
            "description" : "The identifier of the engine.",
            "readOnly" : true,
            
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object.",
            "readOnly" : true,
            
          },
          "persistentId" : {
            "type" : "string",
            "description" : "The persistent unique identifier of the object.",
            "readOnly" : true,
            
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the key",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
            
          },
          "archived" : {
            "type" : "boolean",
            "description" : "The flag to indicate if the object is archived.",
            
          },
          "key" : {
            "pattern" : ".*",
            "type" : "string",
            
          },
          "symId" : {
            "type" : "string",
            
          },
          "workstationId" : {
            "type" : "string",
            
          },
          "workstation" : {
            "type" : "string",
            
          },
          "resourceModelId" : {
            "type" : "string",
            
          },
          "planId" : {
            "type" : "string",
            
          },
          "jobId" : {
            "type" : "string",
            
          },
          "jobKey" : {
            "pattern" : ".*",
            "type" : "string",
            
          },
          "jobStreamId" : {
            "type" : "string",
            
          },
          "jobStreamKey" : {
            "pattern" : ".*",
            "type" : "string",
            
          },
          "text" : {
            "type" : "string",
            
          },
          "status" : {
            "$ref" : "#/components/schemas/PromptStatusType"
          },
          "type" : {
            "$ref" : "#/components/schemas/PromptType"
          },
          "timeAsked" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "timeRespond" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "number" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "cpuFolderId" : {
            "type" : "string",
            
          },
          "cpuJsFolderId" : {
            "type" : "string",
            
          },
          "folderId" : {
            "type" : "string",
            
          },
          "modifyData" : {
            "$ref" : "#/components/schemas/ModifyDataV21"
          }
        },
        
      },
      "ExclusiveRunCycle" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The run cycle identifier.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The run cycle name.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "validFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "validTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "type" : {
            "$ref" : "#/components/schemas/RunCycleType"
          },
          "freeDaysRule" : {
            "$ref" : "#/components/schemas/FreeDaysRule"
          },
          "dates" : {
            "type" : "array",
            "description" : "For SIMPLE run cycles, a list of dates.",
            
            "items" : {
              "type" : "string",
              "format" : "date",
              
            }
          },
          "expression" : {
            "type" : "string",
            "description" : "For RRULE run cycles, an iCalendar RRule expression. For CRON run cycles, a UNIX or Quartz cron expression. For SIMPLE run cycles, a comma separated list of dates.",
            
          },
          "calendarId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For CALENDAR run cycles, the ID of the calendar that contains the list of days.",
            
          },
          "calendar" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For CALENDAR run cycles, the folder path of the calendar that contains the list of days. In input, calendar is ignored when calendarId is specified.",
            
          },
          "runCycleGroupId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For GROUP run cycles, the ID of the run cycle group generating the job stream instances.",
            
          },
          "runCycleGroup" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For GROUP run cycles, the folder path of the run cycle group generating the job stream instances. In input, calendar is ignored when runCycleGroupId is specified.",
            
          },
          "offset" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "For GROUP and CALENDAR run cycles, the number of days before or after a defined day in the specified run cycle group or calendar.",
            "format" : "int32",
            
          },
          "offsetUnit" : {
            "$ref" : "#/components/schemas/OffsetUnit"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "startDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the start time.",
            "format" : "int32",
            
          },
          "repeatInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "repeatEndTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "repeatEndDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the repeat end time.",
            "format" : "int32",
            
          }
        },
        "description" : "A run cycle defines the rules to generate or suppress scheduled instances of a job stream.",
        
      },
      "ModelObjectWorkstation" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/Workstation"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "PropertyValueV2" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            
          },
          "type" : {
            "$ref" : "#/components/schemas/PropertyType"
          }
        },
        
      },
      "ObjectIdentifier" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            
          },
          "key" : {
            "type" : "string",
            
          }
        },
        
      },
      "JobStreamOption" : {
        "type" : "string",
        
        "enum" : [ "draft", "carryForward", "monitored" ]
      },
      "ResultStatus" : {
        "type" : "string",
        
        "enum" : [ "CREATED", "ERROR", "REPLACED" ]
      },
      "Calendar" : {
        "required" : [ "dates", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "dates" : {
            "type" : "array",
            "description" : "The list of dates defined within the calendar.",
            
            "items" : {
              "type" : "string",
              "format" : "date",
              
            }
          }
        },
        "description" : "A calendar is a list of dates. Calendars can be used in run cycles to generate job stream instances on specified dates, or in job streams to stop them running of specified dates (e.g. for maintenance periods).",
        
      },
      "ListResponseV22" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ResourceResponseV2"
            }
          }
        },
        
      },
      "ListResponseV21" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/FlowNodeInPlanV2"
            }
          }
        },
        
      },
      "StringVariable" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the ServiceVariable.",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the self-service variable",
            
            "allOf" : [ {
              "type" : "string",
              "description" : "Type of the specific service variable.",
              
              "enum" : [ "string", "integer", "double", "checkbox", "select", "multiSelect", "radioGroup", "checkboxGroup" ]
            } ],
            "default" : "string"
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the self-service variable",
            
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the self-service variable",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the self-service variable",
            
          },
          "placeholder" : {
            "type" : "string",
            "description" : "The placeholder of the self-service variable",
            
          },
          "required" : {
            "type" : "boolean",
            "description" : "Specifies if the self-service variable is required",
            
          },
          "regex" : {
            "type" : "string",
            "description" : "Specifies the regular expression for the string variable.",
            
          },
          "defaultValue" : {
            "type" : "string",
            "description" : "Specifies the default value for the string variable.",
            
          }
        },
        
      },
      "GroupedCountResponse" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "groupedCount" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              
            },
            
          }
        },
        
      },
      "OperatingSystemV2" : {
        "type" : "string",
        
        "enum" : [ "WINDOWS", "UNIX", "LINUX", "ZOS", "AIX", "HPUX", "SOLARIS", "AS400", "WEB", "OTHER" ]
      },
      "ModelObjectRunCycleGroup" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/RunCycleGroup"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "WorkstationConnectInfoV2" : {
        "type" : "object",
        "properties" : {
          "connection" : {
            "type" : "string",
            "description" : "Connection and Command info for connect to host cpu action",
            
          },
          "command" : {
            "type" : "string",
            
          }
        },
        
      },
      "Status1" : {
        "type" : "object",
        "properties" : {
          "lockData" : {
            "$ref" : "#/components/schemas/LockDataV2"
          },
          "modifyData" : {
            "$ref" : "#/components/schemas/ModifyDataV2"
          },
          "permissions" : {
            "uniqueItems" : true,
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/UserPermission"
            }
          }
        },
        
      },
      "Credentials" : {
        "required" : [ "secret" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the workstation where the specified credentials can be used. It is optional.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of the workstation where the specified credentials can be used. It is optional. In input workstation is ignored if workstationId is specified.",
            
          },
          "username" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The user ID for authentication.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "secret" : {
            "type" : "string",
            "description" : "The password or token to authenticate. The secret that you provide is hidden.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            "writeOnly" : true,
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            "writeOnly" : true,
            
          }
        },
        "description" : "Credentials are used to store user ids and a combination of password/token. Credentials can be used in job definitions for the authentication of APIs or operating systems (e.g. to run jobs on Windows).",
        
      },
      "FileDependencyInPlanV2" : {
        "required" : [ "dependencyType" ],
        "type" : "object",
        "properties" : {
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object. It must be provided to release or remove a set of dependencies",
            
          },
          "dependencyStatus" : {
            "$ref" : "#/components/schemas/Status"
          },
          "satisfied" : {
            "type" : "boolean",
            "description" : "A boolean that shows if the dependency is satisfied or not",
            "readOnly" : true,
            
          },
          "depSequence" : {
            "type" : "integer",
            "description" : "The sequence number of the dependency.",
            "format" : "int32",
            "readOnly" : true,
            
          },
          "mandatory" : {
            "type" : "boolean",
            
          },
          "file" : {
            "$ref" : "#/components/schemas/FileInPlanV2"
          },
          "timeLastChecked" : {
            "$ref" : "#/components/schemas/Instant"
          }
        },
        
      },
      "UserPermission" : {
        "type" : "string",
        "description" : "Subset of permissions of the user on the object that are related to UI available actions.",
        
        "enum" : [ "ADD", "USE", "MODIFY", "DISPLAY", "LIST", "DELETE", "SUBMIT", "SUBMITDB" ]
      },
      "SubmitAdHocJobOptionsV2" : {
        "required" : [ "task" ],
        "type" : "object",
        "properties" : {
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "The variables used by the object.",
            
          },
          "inputArrivalTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "variableTableId" : {
            "type" : "string",
            "description" : "The identifier of the variable table referenced by the object.",
            
          },
          "variableTableKey" : {
            "type" : "string",
            "description" : "The key of the variable table referenced by the object. Used as an alternative of the identifier.",
            
          },
          "alias" : {
            "type" : "string",
            "description" : "The alias of the object.",
            
          },
          "priority" : {
            "type" : "integer",
            "description" : "The priority of the flow node.",
            "format" : "int32",
            
          },
          "monitored" : {
            "type" : "boolean",
            "description" : "Flag to monitor a flow node.",
            
          },
          "earliestDate" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "latestStart" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "lateStartAction" : {
            "$ref" : "#/components/schemas/LateStartAction"
          },
          "deadlineTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "dependencies" : {
            "type" : "array",
            "description" : "The list of dependencies in plan of the flow node. If the object is the result of a query, the list is not filled.",
            
            "items" : {
              "$ref" : "#/components/schemas/DependencyInPlanV2"
            }
          },
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the referenced workstation.",
            
          },
          "workstationKey" : {
            "type" : "string",
            "description" : "The key of the referenced workstation. Used as an alternative of the identifier.",
            
          },
          "jobStreamId" : {
            "type" : "string",
            "description" : "Identifies the job stream where the job is submitted. If not specified the job is submitted to the default jobstream.",
            
          },
          "critical" : {
            "type" : "boolean",
            "description" : "Flags the job as critical.",
            
          },
          "requiresConfirmation" : {
            "type" : "boolean",
            "description" : "Specifies if the job requires confirmation.",
            
          },
          "hasUniqueName" : {
            "type" : "boolean",
            "description" : "Used to specify if the submitted job needs to have a unique name",
            
          },
          "interactive" : {
            "type" : "boolean",
            "description" : "Flags the job as interactive.",
            
          },
          "returnCodeMapping" : {
            "type" : "string",
            
          },
          "recoveryOption" : {
            "$ref" : "#/components/schemas/RecoveryOptionV2"
          },
          "recoveryMessage" : {
            "type" : "string",
            
          },
          "recoveryJobId" : {
            "type" : "string",
            
          },
          "recoveryJob" : {
            "type" : "string",
            
          },
          "recoveryWorkstationId" : {
            "type" : "string",
            
          },
          "minDuration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "minDurationAction" : {
            "$ref" : "#/components/schemas/MinDurationActionV2"
          },
          "maxDuration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "maxDurationAction" : {
            "$ref" : "#/components/schemas/MaxDurationActionV2"
          },
          "repeatInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "skipLateAction" : {
            "$ref" : "#/components/schemas/SkipLateAction"
          },
          "task" : {
            "type" : "object",
            "description" : "The task definition.",
            
          },
          "workloadBrokerJobName" : {
            "type" : "string",
            
          },
          "workloadBrokerOptions" : {
            "type" : "string",
            
          },
          "workloadBrokerParameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            
          },
          "workloadBrokerAffinityType" : {
            "$ref" : "#/components/schemas/WorkloadBrokerAffinityType"
          },
          "workloadBrokerAffinityTDWBwithJobId" : {
            "type" : "string",
            
          },
          "workloadBrokerAffinityTDWBwithAlias" : {
            "type" : "string",
            
          },
          "workloadBrokerAffinityTWSwithJobId" : {
            "type" : "string",
            
          }
        },
        
      },
      "Issue" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            
          },
          "issueMessage" : {
            "type" : "string",
            
          },
          "issueType" : {
            "type" : "string",
            
          }
        },
        
      },
      "IssuesResponseV2" : {
        "type" : "object",
        "properties" : {
          "issues" : {
            "type" : "array",
            "description" : "The issues that have been retrieved.",
            
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            }
          }
        },
        
      },
      "MultipleSelectVariable" : {
        "required" : [ "choices", "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the ServiceVariable.",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the self-service variable",
            
            "allOf" : [ {
              "type" : "string",
              "description" : "Type of the specific service variable.",
              
              "enum" : [ "string", "integer", "double", "checkbox", "select", "multiSelect", "radioGroup", "checkboxGroup" ]
            } ],
            "default" : "multiSelect"
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the self-service variable",
            
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the self-service variable",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the self-service variable",
            
          },
          "placeholder" : {
            "type" : "string",
            "description" : "The placeholder of the self-service variable",
            
          },
          "required" : {
            "type" : "boolean",
            "description" : "Specifies if the self-service variable is required",
            
          },
          "choices" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ValueChoice"
            }
          }
        },
        
      },
      "ResourceInPlanStatus" : {
        "type" : "string",
        
        "enum" : [ "AVAILABLE", "NOT_AVAILABLE", "UNDECIDED" ]
      },
      "TargetStatus" : {
        "type" : "string",
        
        "enum" : [ "STARTED", "ABEND", "FAIL", "SUCC", "SUPPRESS" ]
      },
      "FlowNodeDependencyInPlanV2" : {
        "required" : [ "dependencyType" ],
        "type" : "object",
        "properties" : {
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object. It must be provided to release or remove a set of dependencies",
            
          },
          "dependencyStatus" : {
            "$ref" : "#/components/schemas/Status"
          },
          "satisfied" : {
            "type" : "boolean",
            "description" : "A boolean that shows if the dependency is satisfied or not",
            "readOnly" : true,
            
          },
          "depSequence" : {
            "type" : "integer",
            "description" : "The sequence number of the dependency.",
            "format" : "int32",
            "readOnly" : true,
            
          },
          "mandatory" : {
            "type" : "boolean",
            
          },
          "conditional" : {
            "type" : "boolean",
            "description" : "Flag indicating whether the Dependency is Conditional or not.",
            
          },
          "critical" : {
            "type" : "boolean",
            "description" : "Flag indicating whether the Dependency is on critical path or not.",
            
          },
          "statusConditions" : {
            "type" : "array",
            "description" : "The list of the output conditions.",
            
            "items" : {
              "$ref" : "#/components/schemas/ConditionStatus"
            }
          },
          "outputConditions" : {
            "type" : "array",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        
        "anyOf" : [ {
          "$ref" : "#/components/schemas/ExternalJobDependencyInPlanV2"
        }, {
          "$ref" : "#/components/schemas/ExternalJobStreamDependencyInPlanV2"
        }, {
          "$ref" : "#/components/schemas/InternalDependencyInPlanV2"
        } ]
      },
      "PromptInPlanAnswer" : {
        "type" : "object",
        "properties" : {
          "answer" : {
            "type" : "boolean",
            
          }
        },
        
      },
      "PropertyType" : {
        "type" : "string",
        
        "enum" : [ "STRING", "DATE" ]
      },
      "RecoveryOptionV2" : {
        "type" : "string",
        
        "enum" : [ "STOP", "CONTINUE", "CONTINUE_PROMPT", "RERUN", "RERUN_PROMPT" ]
      },
      "ServiceInfo" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the ServiceInfo.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name used to publish the job stream on the Self-Service Catalog.",
            
          },
          "published" : {
            "type" : "boolean",
            "description" : "If selected, the job stream is published on the Self-Service Catalog.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description used to publish the job stream on the Self-Service Catalog.",
            
          },
          "contact" : {
            "type" : "string",
            "description" : "The contact of the person or of the team to reach to get support on the service.",
            
          },
          "tags" : {
            "type" : "array",
            "description" : "The tags used to identify the service on the Self-Service Catalog.",
            
            "items" : {
              "type" : "string",
              
            }
          },
          "variables" : {
            "type" : "array",
            "description" : "The variables used to identify the service on the Self-Service Catalog.",
            
            "items" : {
              "$ref" : "#/components/schemas/ServiceVariable"
            }
          }
        },
        "description" : "Contains information about a service.",
        
      },
      "ApprovalInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the task.",
            
          },
          "url" : {
            "type" : "string",
            "description" : "The url of the task.",
            
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the task.",
            
          },
          "key" : {
            "type" : "string",
            "description" : "The name of the task.",
            
          },
          "timeout" : {
            "type" : "boolean",
            "description" : "Specifies if the task has timed out.",
            
          }
        },
        
      },
      "JobInfo" : {
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "string",
            "description" : "The job comments.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The job description.",
            
          }
        },
        "description" : "The JobInfo payload response",
        
      },
      "WorkloadBrokerAffinityType" : {
        "type" : "string",
        
        "enum" : [ "NO_AFFINITY", "TDWB", "TWS" ]
      },
      "FileSystem" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "$ref" : "#/components/schemas/FileSystemOperator"
          },
          "fileSystems" : {
            "type" : "array",
            "description" : "The file systems for the workstation.",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        "description" : "File Systems of the Dynamic Pool.",
        
      },
      "RerunType" : {
        "type" : "string",
        
        "enum" : [ "RERUN", "RECOVERY_RERUN", "RERUN_EVERY", "RERUN_FROM", "RECOVERY", "REGULAR", "RERUN_STEP" ]
      },
      "SecurityLevel" : {
        "type" : "string",
        
        "enum" : [ "NONE", "ON", "ENABLED", "FORCE", "HTTP", "HTTPS", "FORCE_ENABLED" ]
      },
      "ExternalJobDependencyInPlanV2" : {
        "required" : [ "dependencyType" ],
        "type" : "object",
        "properties" : {
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object. It must be provided to release or remove a set of dependencies",
            
          },
          "dependencyStatus" : {
            "$ref" : "#/components/schemas/Status"
          },
          "satisfied" : {
            "type" : "boolean",
            "description" : "A boolean that shows if the dependency is satisfied or not",
            "readOnly" : true,
            
          },
          "depSequence" : {
            "type" : "integer",
            "description" : "The sequence number of the dependency.",
            "format" : "int32",
            "readOnly" : true,
            
          },
          "mandatory" : {
            "type" : "boolean",
            
          },
          "conditional" : {
            "type" : "boolean",
            "description" : "Flag indicating whether the Dependency is Conditional or not.",
            
          },
          "critical" : {
            "type" : "boolean",
            "description" : "Flag indicating whether the Dependency is on critical path or not.",
            
          },
          "statusConditions" : {
            "type" : "array",
            "description" : "The list of the output conditions.",
            
            "items" : {
              "$ref" : "#/components/schemas/ConditionStatus"
            }
          },
          "outputConditions" : {
            "type" : "array",
            
            "items" : {
              "type" : "string",
              
            }
          },
          "jobStreamId" : {
            "type" : "string",
            "description" : "The plan Identifier of the pointer JobStreamInPlan instance",
            
          },
          "jobStreamName" : {
            "type" : "string",
            "description" : "The name of the jobstream where the job in plan is contained",
            
          },
          "jobStreamWorkstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "A reference to the Workstation of the jobstream where the job in plan is contained",
            
          },
          "jobStreamSchedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "jobStreamFolder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the jobstream where the job in plan is contained",
            
          },
          "folderOriginalName" : {
            "type" : "string",
            "description" : "The original name of the workstation (the one without the folder) referenced by the jobstream",
            
          },
          "jobStreamSuccId" : {
            "type" : "string",
            "description" : "The Identifier of the JobStreamInPlan that points to this dependency.",
            
          },
          "jobSuccId" : {
            "type" : "string",
            "description" : "The Identifier of the JobInPlan that points to this dependency.",
            
          },
          "pending" : {
            "type" : "boolean",
            "description" : "A boolean representing if the pointed object is pending or not.",
            "readOnly" : true,
            
          },
          "zombie" : {
            "type" : "boolean",
            "description" : "A boolean indicating if the dependency is a zombie (i.e. cannot be resolved) or not.",
            "readOnly" : true,
            
          },
          "jobId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The plan Identifier of the pointer JobInPlan instance.",
            
          },
          "jobName" : {
            "type" : "string",
            "description" : "Name of the key of the job",
            
          },
          "jobWorkstationName" : {
            "type" : "string",
            "description" : "The job workstation name of the pointer JobInPlan instance.",
            
          },
          "predecessorStatus" : {
            "$ref" : "#/components/schemas/JobInPlanCompositeStatusV2"
          }
        },
        
      },
      "LogicalResource" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the logical resource",
            
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the logical resource",
            
          },
          "quantity" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Quantity of the logical resource",
            "format" : "int32",
            
          },
          "reserveResource" : {
            "type" : "boolean",
            "description" : "Reserve the logical resource",
            
          }
        },
        "description" : "Logical Resource",
        
      },
      "ResourcesRequirements" : {
        "type" : "object",
        "properties" : { },
        
      },
      "ConsumedJobs" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dailyJobs" : {
            "$ref" : "#/components/schemas/Count"
          },
          "monthlyJobs" : {
            "$ref" : "#/components/schemas/Count"
          },
          "cumulativeJobs" : {
            "$ref" : "#/components/schemas/Count"
          },
          "jobsToSend" : {
            "type" : "integer",
            "description" : "Remaining jobs awaiting transmission to the license server.",
            "format" : "int64",
            
          },
          "integrity" : {
            "$ref" : "#/components/schemas/Integrity"
          }
        },
        "description" : "licensing statistics of jobs run",
        
      },
      "FlowNodeCompositeStatusV2" : {
        "type" : "object",
        "properties" : {
          "cancelPending" : {
            "type" : "boolean",
            
          },
          "canceled" : {
            "type" : "boolean",
            
          },
          "started" : {
            "type" : "boolean",
            
          },
          "error" : {
            "type" : "boolean",
            
          },
          "dontRun" : {
            "type" : "boolean",
            
          }
        },
        
        "oneOf" : [ {
          "$ref" : "#/components/schemas/JobInPlanCompositeStatusV2"
        }, {
          "$ref" : "#/components/schemas/JobStreamInPlanCompositeStatusV2"
        } ]
      },
      "ModelObjectResource" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/Resource"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "ComponentCommandInfoV2" : {
        "type" : "object",
        "properties" : {
          "componentId" : {
            "type" : "string",
            
          },
          "workstationName" : {
            "type" : "string",
            
          },
          "command" : {
            "type" : "string",
            
          },
          "parameters" : {
            "type" : "string",
            
          }
        },
        
      },
      "QueryResponseV21" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ApiKeyResponse"
            }
          }
        },
        
      },
      "JobStreamInPlanSubStatus" : {
        "type" : "string",
        
        "enum" : [ "WAITING_FOR_RESOURCE", "WAITING_FOR_USER_INTERVENTION" ]
      },
      "JobIdsListResultV2" : {
        "type" : "object",
        "properties" : {
          "jobIdList" : {
            "type" : "array",
            "description" : "The list of job IDs to search for job issues.",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        
      },
      "ResourceInPlanV2" : {
        "type" : "object",
        "properties" : {
          "engineId" : {
            "type" : "string",
            "description" : "The identifier of the engine.",
            "readOnly" : true,
            
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object.",
            "readOnly" : true,
            
          },
          "persistentId" : {
            "type" : "string",
            "description" : "The persistent unique identifier of the object.",
            "readOnly" : true,
            
          },
          "folderId" : {
            "type" : "string",
            "description" : "The identifier of the referenced folder.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
            
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the key",
            
          },
          "key" : {
            "type" : "string",
            "description" : "The actual key value.",
            
          },
          "workstationId" : {
            "type" : "string",
            "description" : "The identifier of the workstation where the resource is defined.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "A reference to the workstation where the resource is defined.",
            
          },
          "quantity" : {
            "type" : "integer",
            "description" : "The quantity of the resource defined.",
            "format" : "int32",
            
          },
          "quantityAvailable" : {
            "type" : "integer",
            "description" : "The quantity of the resource available.",
            "format" : "int32",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the resource.",
            
          },
          "quantityInUse" : {
            "type" : "integer",
            "description" : "The quantity of the resource is in use.",
            "format" : "int32",
            
          },
          "holders" : {
            "type" : "array",
            "description" : "The resource holders information.",
            
            "items" : {
              "$ref" : "#/components/schemas/ResourceHolderInPlan"
            }
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          },
          "archived" : {
            "type" : "boolean",
            "description" : "The flag to indicate if the object is archived.",
            
          },
          "status" : {
            "$ref" : "#/components/schemas/ResourceInPlanStatus"
          },
          "internalIdentifier" : {
            "type" : "string",
            "description" : "The internal key value.",
            
          }
        },
        
      },
      "Duration" : {
        "type" : "string",
        "format" : "duration",
        
      },
      "CommonStatusV2" : {
        "type" : "string",
        
        "enum" : [ "WAITING", "WAITING_FOR_TRIGGER", "READY", "READY_PREV_WS_NONREP", "COMPLETED", "SUPPRESS_BY_COND", "INTERRUPTED", "DUMMY_COMPLETED", "RUNNING", "SUCCESSFUL", "ERROR", "CANCELED", "HELD", "UNDECIDED", "BLOCKED", "SUPPRESS" ]
      },
      "JobCommandV2" : {
        "required" : [ "command", "input" ],
        "type" : "object",
        "properties" : {
          "command" : {
            "type" : "string",
            
          },
          "input" : {
            "type" : "string",
            
          }
        },
        
      },
      "Domain" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "parentId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the parent domain.",
            
          },
          "parentDomain" : {
            "type" : "string",
            "description" : "The path of the parent domain.",
            
          },
          "master" : {
            "type" : "boolean",
            "description" : "True if is master domain manager.",
            
          },
          "managerWorkstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of the domain manager workstation.",
            
          }
        },
        "description" : "A domain is a group of workstations consisting of one or more agents and a domain manager. The domain manager acts as the management hub for the agents in the domain.",
        
      },
      "RoleIdentifier" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            
          }
        },
        
      },
      "FileSystemOperator" : {
        "type" : "string",
        "description" : "Logic operator applied to the file systems.",
        
        "enum" : [ "OR", "AND" ]
      },
      "ServiceVariableType" : {
        "type" : "string",
        "description" : "Type of the specific service variable.",
        
        "enum" : [ "string", "integer", "double", "checkbox", "select", "multiSelect", "radioGroup", "checkboxGroup" ]
      },
      "AccessControlList" : {
        "required" : [ "grants", "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "type" : {
            "$ref" : "#/components/schemas/ACLType"
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "grants" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "The list of specified ACLs.",
            
            "items" : {
              "$ref" : "#/components/schemas/ACLGrant"
            }
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            "writeOnly" : true,
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            "writeOnly" : true,
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            "writeOnly" : true,
            
          }
        },
        "description" : "Security roles define sets of permissions that can be granted to users or group of users via an Access Control List (ACL).",
        
      },
      "CriticalRecalculationTrigger" : {
        "type" : "string",
        
        "enum" : [ "DYNAMIC", "LATE", "LONG_RUNNING", "ERROR", "JOB_COMPLETION_OR_NOT_IN_HOTLIST", "DAILY_PLANNING" ]
      },
      "LocalDateTime" : {
        "type" : "string",
        "format" : "date-time",
        
      },
      "WorkstationInPlanV2" : {
        "type" : "object",
        "properties" : {
          "engineId" : {
            "type" : "string",
            "description" : "The identifier of the engine.",
            "readOnly" : true,
            
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object.",
            "readOnly" : true,
            
          },
          "persistentId" : {
            "type" : "string",
            "description" : "The persistent unique identifier of the object.",
            "readOnly" : true,
            
          },
          "planId" : {
            "type" : "string",
            
          },
          "folderId" : {
            "type" : "string",
            "description" : "The identifier of the referenced folder.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
            
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the key",
            
          },
          "key" : {
            "type" : "string",
            "description" : "The actual key value.",
            
          },
          "symId" : {
            "type" : "string",
            
          },
          "runNumber" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "description" : {
            "type" : "string",
            
          },
          "activeStates" : {
            "uniqueItems" : true,
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/WorkstationStateEnum"
            }
          },
          "activeFlags" : {
            "uniqueItems" : true,
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/WorkstationFlagEnum"
            }
          },
          "type" : {
            "$ref" : "#/components/schemas/WorkstationType"
          },
          "hostType" : {
            "$ref" : "#/components/schemas/HostWorkstationType"
          },
          "os" : {
            "$ref" : "#/components/schemas/OperatingSystemV2"
          },
          "timeZone" : {
            "type" : "string",
            
          },
          "nodeName" : {
            "type" : "string",
            
          },
          "tcpPort" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "domainName" : {
            "type" : "string",
            
          },
          "limit" : {
            "type" : "integer",
            "description" : "The workstation limit.",
            "format" : "int32",
            
          },
          "fence" : {
            "type" : "integer",
            "description" : "The workstation fence.",
            "format" : "int32",
            
          },
          "agentId" : {
            "type" : "string",
            
          },
          "version" : {
            "type" : "string",
            
          },
          "userInfo" : {
            "type" : "string",
            
          },
          "requested" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "createdTimestamp" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "timeStarted" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "securityLevel" : {
            "$ref" : "#/components/schemas/SecurityLevel"
          },
          "sslPort" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "host" : {
            "type" : "string",
            
          },
          "hostWorkstation" : {
            "type" : "string",
            
          },
          "mailmanServerId" : {
            "type" : "string",
            
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          },
          "ignore" : {
            "type" : "boolean",
            
          },
          "archived" : {
            "type" : "boolean",
            "description" : "The flag to indicate if the object is archived.",
            
          }
        },
        
      },
      "ServerType" : {
        "type" : "string",
        "description" : "Server Type Enum",
        
        "enum" : [ "None", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0" ]
      },
      "ConfigValue" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            
          },
          "description" : {
            "type" : "string",
            
          }
        },
        
      },
      "JobStreamInfo" : {
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "string",
            "description" : "The comments of the job stream.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the job stream.",
            
          }
        },
        "description" : "The JobStreamInfo payload response",
        
      },
      "ModelObjectCredentials" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/Credentials"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "RolePrivilegeV2" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            
          },
          "label" : {
            "type" : "string",
            
          },
          "description" : {
            "type" : "string",
            
          }
        },
        
      },
      "FileDependency" : {
        "type" : "object",
        "properties" : {
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the workstation where the file is checked.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of the workstation where the file is checked.",
            
          },
          "filename" : {
            "type" : "string",
            "description" : "The path of the file to check.",
            
          },
          "qualifier" : {
            "type" : "string",
            "description" : "The 'test' condition to verify.",
            
          }
        },
        "description" : "A files that is checked before the job or job stream is launched.",
        
      },
      "PaginatedResponseV2" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "type" : "object",
              
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "ObjectFolderCountFilterV2" : {
        "required" : [ "objectType", "oql" ],
        "type" : "object",
        "properties" : {
          "planId" : {
            "type" : "string",
            "description" : "Plan ID.",
            
          },
          "oql" : {
            "type" : "string",
            "description" : "Define the oql filter to match the folders. Allowed fields are: parent, parentId, folder, folderId",
            
          },
          "objectType" : {
            "$ref" : "#/components/schemas/ActionObjectType"
          }
        },
        
      },
      "JobStreamStatsV2" : {
        "type" : "object",
        "properties" : {
          "numberOfJob" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfCurrentNodes" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfSuccessfullJob" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfDeltaJob" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfDeltaSuccJob" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfNotRunningJob" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfExecutingJob" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfAbendedJob" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfFailedJob" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfUndecidedJob" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        },
        
      },
      "JobStreamInPlanOptions" : {
        "type" : "object",
        "properties" : {
          "monitored" : {
            "type" : "boolean",
            "description" : "Flag to monitor a flow node.",
            
          },
          "carryForward" : {
            "type" : "boolean",
            "description" : "Job stream is to be carried forward . On this attribute it exists the filter <i>JobStreamInPlanFilters.CARRY_FORWARD</i>",
            
          }
        },
        "description" : "Flags for a job stream in a plan that can be set by the user.",
        
      },
      "CommonObjectV21" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          },
          "engineId" : {
            "type" : "string",
            "description" : "The identifier of the engine.",
            "readOnly" : true,
            
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object.",
            "readOnly" : true,
            
          },
          "persistentId" : {
            "type" : "string",
            "description" : "The persistent unique identifier of the object.",
            "readOnly" : true,
            
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the key",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
            
          },
          "folderId" : {
            "type" : "string",
            "description" : "The identifier of the referenced folder.",
            
          },
          "archived" : {
            "type" : "boolean",
            "description" : "The flag to indicate if the object is archived.",
            
          }
        },
        
      },
      "InternalDependencyInPlanV2" : {
        "required" : [ "dependencyType", "jobId" ],
        "type" : "object",
        "properties" : {
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object. It must be provided to release or remove a set of dependencies",
            
          },
          "dependencyStatus" : {
            "$ref" : "#/components/schemas/Status"
          },
          "satisfied" : {
            "type" : "boolean",
            "description" : "A boolean that shows if the dependency is satisfied or not",
            "readOnly" : true,
            
          },
          "depSequence" : {
            "type" : "integer",
            "description" : "The sequence number of the dependency.",
            "format" : "int32",
            "readOnly" : true,
            
          },
          "mandatory" : {
            "type" : "boolean",
            
          },
          "conditional" : {
            "type" : "boolean",
            "description" : "Flag indicating whether the Dependency is Conditional or not.",
            
          },
          "critical" : {
            "type" : "boolean",
            "description" : "Flag indicating whether the Dependency is on critical path or not.",
            
          },
          "statusConditions" : {
            "type" : "array",
            "description" : "The list of the output conditions.",
            
            "items" : {
              "$ref" : "#/components/schemas/ConditionStatus"
            }
          },
          "outputConditions" : {
            "type" : "array",
            
            "items" : {
              "type" : "string",
              
            }
          },
          "jobId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The Identifier of the JobInPlan pointed by this dependency.",
            
          },
          "jobName" : {
            "type" : "string",
            "description" : "Name of the key of the pointed job.",
            
          },
          "predecessorStatus" : {
            "$ref" : "#/components/schemas/JobInPlanCompositeStatusV2"
          },
          "folderOriginalName" : {
            "type" : "string",
            "description" : "The original name of the workstation (the one without the folder) referenced by the job",
            
          },
          "jobStreamWorkstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "A reference to the Workstation of the jobstream where the job in plan is contained",
            
          },
          "jobStreamFolder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the jobstream where the job in plan is contained",
            
          },
          "jobStreamName" : {
            "type" : "string",
            "description" : "The name of the jobstream where the job in plan is contained",
            
          },
          "jobStreamSchedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "jobSuccId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The Identifier of the JobInPlan that points to this dependency.",
            
          }
        },
        "description" : "represents an internal dependency in plan",
        
      },
      "JobStreamInTemplate" : {
        "type" : "object",
        "properties" : {
          "jobStreamId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of jobstream in workload application template.",
            
          },
          "jobStream" : {
            "type" : "string",
            "description" : "The name of jobstream in workload application template.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Specify the path of the workstation where this item is defined.",
            
          },
          "validFrom" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          }
        },
        "description" : "A job stream in a workload application template.",
        
      },
      "ObjectInfo" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ActionMetadataV2"
            }
          },
          "status" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ObjectInfoMetadata"
            }
          },
          "substatus" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ObjectInfoMetadata"
            }
          },
          "commonStatus" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ObjectInfoMetadata"
            }
          },
          "activeStates" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ObjectInfoMetadata"
            }
          },
          "activeFlags" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ObjectInfoMetadata"
            }
          },
          "workstationType" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ObjectInfoMetadata"
            }
          },
          "expectedStatus" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ObjectInfoMetadata"
            }
          }
        },
        
      },
      "WorkstationInPlanAvailabilityIntervals" : {
        "type" : "object",
        "properties" : { },
        
      },
      "HostType" : {
        "type" : "string",
        "description" : "Hosting Option Enum",
        
        "enum" : [ "BY_WORKSTATION", "BY_MANAGER", "BY_MASTER" ]
      },
      "WorkloadApplicationTemplate" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "vendor" : {
            "type" : "string",
            "description" : "Specifies the creator of the workload application template.",
            
          },
          "jobStreams" : {
            "type" : "array",
            "description" : "Specify the list of job streams that you want to add to the workload application template.",
            
            "items" : {
              "$ref" : "#/components/schemas/JobStreamInTemplate"
            }
          }
        },
        "description" : "Workload applications standardize a workload automation solution so that the solution can be reused in one or more HCL Workload Automation environments.",
        
      },
      "ExternalJobStreamDependencyInPlanV2" : {
        "required" : [ "dependencyType" ],
        "type" : "object",
        "properties" : {
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object. It must be provided to release or remove a set of dependencies",
            
          },
          "dependencyStatus" : {
            "$ref" : "#/components/schemas/Status"
          },
          "satisfied" : {
            "type" : "boolean",
            "description" : "A boolean that shows if the dependency is satisfied or not",
            "readOnly" : true,
            
          },
          "depSequence" : {
            "type" : "integer",
            "description" : "The sequence number of the dependency.",
            "format" : "int32",
            "readOnly" : true,
            
          },
          "mandatory" : {
            "type" : "boolean",
            
          },
          "conditional" : {
            "type" : "boolean",
            "description" : "Flag indicating whether the Dependency is Conditional or not.",
            
          },
          "critical" : {
            "type" : "boolean",
            "description" : "Flag indicating whether the Dependency is on critical path or not.",
            
          },
          "statusConditions" : {
            "type" : "array",
            "description" : "The list of the output conditions.",
            
            "items" : {
              "$ref" : "#/components/schemas/ConditionStatus"
            }
          },
          "outputConditions" : {
            "type" : "array",
            
            "items" : {
              "type" : "string",
              
            }
          },
          "jobStreamId" : {
            "type" : "string",
            "description" : "The plan Identifier of the pointer JobStreamInPlan instance",
            
          },
          "jobStreamName" : {
            "type" : "string",
            "description" : "Name of the key of the jobstream.",
            
          },
          "jobStreamWorkstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "A reference to the Workstation to which the Job Stream refers",
            
          },
          "jobStreamSchedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "jobStreamFolder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the JobStream In Plan",
            
          },
          "folderOriginalName" : {
            "type" : "string",
            "description" : "The original name of the workstation (the one without the folder) referenced by the jobstream",
            
          },
          "jobStreamSuccId" : {
            "type" : "string",
            "description" : "The Identifier of the JobStreamInPlan that points to this dependency.",
            
          },
          "jobSuccId" : {
            "type" : "string",
            "description" : "The Identifier of the JobInPlan that points to this dependency.",
            
          },
          "pending" : {
            "type" : "boolean",
            "description" : "A boolean representing if the pointed object is pending or not.",
            "readOnly" : true,
            
          },
          "zombie" : {
            "type" : "boolean",
            "description" : "A boolean indicating if the dependency is a zombie (i.e. cannot be resolved) or not.",
            "readOnly" : true,
            
          },
          "predecessorStatus" : {
            "$ref" : "#/components/schemas/JobStreamInPlanCompositeStatusV2"
          }
        },
        
      },
      "ValueChoice" : {
        "required" : [ "displayName", "value" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Display value of the choice. When submitting the service it is shown to the user in the SSC Catalog section.",
            
          },
          "value" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Actual value of the choice. When submitting the service it is used in the SSC submit as value for the defined SSC variable.",
            
          },
          "selected" : {
            "type" : "boolean",
            "description" : "Whether the choice is pre-selected in the generated form of the SSC catalog section.",
            
          }
        },
        
      },
      "ModelObjectDomain" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/Domain"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "ActionObjectType" : {
        "type" : "string",
        
        "enum" : [ "JOB_IN_PLAN", "JOBSTREAM_IN_PLAN", "WORKSTATION_IN_PLAN", "EVENTSOURCE", "RESOURCE_IN_PLAN", "PROMPT_IN_PLAN" ]
      },
      "JobInPlanDefinitionFlags" : {
        "type" : "object",
        "properties" : {
          "monitored" : {
            "type" : "boolean",
            "description" : "Flag to monitor a job in plan.",
            
          },
          "aliased" : {
            "type" : "boolean",
            "description" : "The job has been aliased.",
            
          },
          "interactive" : {
            "type" : "boolean",
            
          }
        },
        "description" : "Read-only flags for a job in a plan that have been inherited by the job definition.",
        
      },
      "ModelObjectSecurityRole" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/SecurityRole"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "WorkstationType" : {
        "type" : "string",
        
        "enum" : [ "AGENT", "POOL", "D-POOL", "REM-ENG", "MANAGER", "FTA", "X-AGENT", "S-AGENT", "WORKLOAD_BROKER", "DOMAIN_MANAGER" ]
      },
      "ListResponseV2" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "type" : "object",
              
            }
          }
        },
        
      },
      "YesNoDefaultOption" : {
        "type" : "string",
        
        "enum" : [ "YES", "NO", "DEFAULT" ]
      },
      "CheckboxVariable" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the ServiceVariable.",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the self-service variable",
            
            "allOf" : [ {
              "type" : "string",
              "description" : "Type of the specific service variable.",
              
              "enum" : [ "string", "integer", "double", "checkbox", "select", "multiSelect", "radioGroup", "checkboxGroup" ]
            } ],
            "default" : "checkbox"
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the self-service variable",
            
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the self-service variable",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the self-service variable",
            
          },
          "placeholder" : {
            "type" : "string",
            "description" : "The placeholder of the self-service variable",
            
          },
          "required" : {
            "type" : "boolean",
            "description" : "Specifies if the self-service variable is required",
            
          },
          "defaultValue" : {
            "type" : "boolean",
            "description" : "Specifies if the checkbox is selected by default.",
            
          }
        },
        
      },
      "ACLGrant" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          },
          "identityType" : {
            "$ref" : "#/components/schemas/IdentityType"
          },
          "identity" : {
            "type" : "string",
            
          },
          "roles" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/RoleIdentifier"
            }
          }
        },
        
      },
      "Workstation" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "type" : {
            "$ref" : "#/components/schemas/WorkstationType"
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "domainId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For FTAs, the id of the domain.",
            
          },
          "timeZone" : {
            "type" : "string",
            "description" : "Select the time zone of the system. This is the default time zone for the job streams that are defined on this workstation.",
            
          },
          "variableTableId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of a variable table associated with the workstation. In input at least one between variableTableId and variableTable must be specified.",
            
          },
          "variableTable" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of a variable table associated with the workstation. In input at least one between variableTableId and variableTable must be specified, variableTable is ignored when variableTableId is specified.",
            
          },
          "licenseType" : {
            "$ref" : "#/components/schemas/LicenseType"
          },
          "os" : {
            "$ref" : "#/components/schemas/OperatingSystemV2"
          },
          "agentId" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The unique identifier of the agent.",
            "readOnly" : true,
            
          },
          "members" : {
            "type" : "array",
            "description" : "For pools, the list of the agents that are part of the pool.",
            
            "items" : {
              "$ref" : "#/components/schemas/MemberWorkstation"
            }
          },
          "requirements" : {
            "$ref" : "#/components/schemas/Requirements"
          },
          "orderedWorkstations" : {
            "type" : "array",
            "description" : "For the Dynamic pool, the list of ordered workstation",
            
            "items" : {
              "$ref" : "#/components/schemas/OrderedWorkstation"
            }
          },
          "fileSystems" : {
            "$ref" : "#/components/schemas/FileSystem"
          },
          "nodeName" : {
            "type" : "string",
            "description" : "The system hostname or IP address.",
            
          },
          "protocol" : {
            "$ref" : "#/components/schemas/ProtocolType"
          },
          "tcpPort" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The agent TCP port for unencrypted communication.",
            "format" : "int32",
            
          },
          "securePort" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The agent TCP port for TLS communication.",
            "format" : "int32",
            
          },
          "securityLevel" : {
            "$ref" : "#/components/schemas/SecurityLevel"
          },
          "options" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of options of the workstation.",
            
            "items" : {
              "$ref" : "#/components/schemas/WorkstationOption"
            }
          },
          "hostType" : {
            "$ref" : "#/components/schemas/HostType"
          },
          "hostWorkstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For XAs, the id of workstation hosting the XA. For dynamic agents the id of broker workstation.",
            
          },
          "hostWorkstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For XAs, the workstation hosting the XA. For dynamic agents the broker workstation. Ignored if hostWorkstationId is specified.",
            
          },
          "domain" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For FTAs, the name of the domain. Ignored if domainId is specified.",
            
          },
          "accessMethod" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For XAs, the access method file name.",
            
          },
          "server" : {
            "$ref" : "#/components/schemas/ServerType"
          }
        },
        "description" : "A workstation is a logical system where jobs are run, e.g. it could be an agent on a server, a pool of agents, a cloud task launcher.",
        
      },
      "JobStreamInPlanStatus" : {
        "type" : "string",
        
        "enum" : [ "READY", "HOLD", "EXEC", "ABEND", "CANCL", "CANCLP", "SUCC", "UNKNOWN", "ADD", "FAIL", "WAIT", "INTRO", "ABENP", "SUCCP", "SUSP", "STUCK", "PEND", "BOUND", "SUPPR", "EXTRN", "COMPLETE", "DELETED", "ERROR", "PENDINGPRED", "STARTED", "UNDECIDED", "WAITFORINPUT", "INTERRUPTED", "NONREPORTINGPRED", "SUPPRBYCOND" ]
      },
      "ObjectInfoMetadata" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            
          },
          "label" : {
            "type" : "string",
            
          }
        },
        
      },
      "JobStreamInPlanDefinitionFlags" : {
        "type" : "object",
        "properties" : {
          "aliased" : {
            "type" : "boolean",
            "description" : "Job stream is aliased. Specify this flag to alias this job stream",
            "readOnly" : true,
            
          },
          "carriedForward" : {
            "type" : "boolean",
            "description" : "The job stream has been carried forward.",
            
          },
          "isService" : {
            "type" : "boolean",
            "description" : "The job stream is a service.",
            
          },
          "service" : {
            "type" : "boolean",
            
          }
        },
        "description" : "Read-only flags for a job stream in a plan that have been inherited by the job stream definition.",
        
      },
      "JoinCriteria" : {
        "type" : "string",
        
        "enum" : [ "ALL", "AT_LEAST" ]
      },
      "UsersV2" : {
        "type" : "object",
        "properties" : {
          "users" : {
            "uniqueItems" : true,
            "type" : "array",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        
      },
      "FreeDaysRule" : {
        "type" : "string",
        "description" : "Rule to follow when an instance is generated on a free day.",
        
        "enum" : [ "none", "nearestBefore", "nearestAfter", "doNotSelect" ]
      },
      "JobInPlanOptions" : {
        "type" : "object",
        "properties" : {
          "noOperation" : {
            "type" : "boolean",
            
          },
          "critical" : {
            "type" : "boolean",
            
          },
          "requiresConfirmation" : {
            "type" : "boolean",
            "description" : "The job requires confirmation",
            
          },
          "every" : {
            "type" : "boolean",
            "description" : "The job is a every job. If true the job will be re-run every repeatInterval milliseconds.",
            
          }
        },
        "description" : "Flags for a job in a plan that can be set by the user.",
        
      },
      "ConditionStatus" : {
        "type" : "string",
        
        "enum" : [ "STARTED", "EXEC", "COMPLETED", "DUMMY_COMPLETED", "ERROR", "SUCC", "FAIL", "SUPPR", "SUPPRESS", "ABEND" ]
      },
      "ConditionCheckType" : {
        "type" : "string",
        
        "enum" : [ "RETURN_CODE", "STATUS" ]
      },
      "ApiKeyResponse" : {
        "required" : [ "label", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of this API Key.",
            "readOnly" : true,
            
          },
          "user" : {
            "type" : "string",
            "description" : "The authentication user ID for this API Key.",
            "readOnly" : true,
            
          },
          "label" : {
            "type" : "string",
            "description" : "The name that uniquely identifies the API Key.",
            
          },
          "type" : {
            "$ref" : "#/components/schemas/ApiKeyType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ApiKeyStatus"
          },
          "expirationTimestamp" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "lastUsage" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "The user who created the API Key.",
            "readOnly" : true,
            
          },
          "createdTimestamp" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "groups" : {
            "type" : "array",
            "description" : "The list of groups mapped to this SERVICE API Key.",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        
      },
      "ExternalPredecessor" : {
        "type" : "object",
        "properties" : {
          "jobStreamAbstractId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The abstract id of the preceding job stream.",
            
          },
          "jobAbstractId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The abstract id of the preceding job. Only if the predecessor is a job.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of the workstation where the preceding job stream is defined.",
            
          },
          "jobStream" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path and the name of the preceding job stream.",
            
          },
          "jobName" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the preceding job.",
            
          },
          "matchingCriteria" : {
            "$ref" : "#/components/schemas/MatchingCriteriaInterval"
          },
          "outputConditions" : {
            "type" : "array",
            "description" : "The list of output conditions of the predecessor that satisfy the dependency. The output conditions list can only be specified if the predecessor is a job. It is not possible to specify both outputConditions and statusConditions.",
            
            "items" : {
              "type" : "string",
              
            }
          },
          "statusConditions" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of statuses of the predecessor that satisfy the dependency. If the STARTED status is specified, it is not possible to specify any other status. It is not possible to specify both outputConditions and statusConditions.",
            
            "items" : {
              "$ref" : "#/components/schemas/TargetStatus"
            }
          }
        },
        "description" : "A dependency on another job stream, or on a job in another job stream.",
        
      },
      "ResourceHolderInPlan" : {
        "type" : "object",
        "properties" : {
          "jobStreamId" : {
            "type" : "string",
            "description" : "The Job Stream Identifier of the holder job stream.",
            
          },
          "jobStream" : {
            "type" : "string",
            "description" : "The Job Stream key of the holder job stream.",
            
          },
          "jobId" : {
            "type" : "string",
            "description" : "The Job Stream Identifier of the holder job.",
            
          },
          "job" : {
            "type" : "string",
            "description" : "The Job name of the holder job.",
            
          },
          "jobKey" : {
            "type" : "string",
            "description" : "The Job key of the holder job.",
            
          },
          "quantity" : {
            "type" : "integer",
            "description" : "The quantity of resource this job or job stream holds.",
            "format" : "int32",
            
          },
          "shared" : {
            "type" : "boolean",
            "description" : "Type of resource usage.",
            
          }
        },
        
      },
      "JsonNode" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean",
            
          },
          "valueNode" : {
            "type" : "boolean",
            
          },
          "containerNode" : {
            "type" : "boolean",
            
          },
          "missingNode" : {
            "type" : "boolean",
            
          },
          "array" : {
            "type" : "boolean",
            
          },
          "object" : {
            "type" : "boolean",
            
          },
          "nodeType" : {
            "$ref" : "#/components/schemas/JsonNodeType"
          },
          "pojo" : {
            "type" : "boolean",
            
          },
          "number" : {
            "type" : "boolean",
            
          },
          "integralNumber" : {
            "type" : "boolean",
            
          },
          "floatingPointNumber" : {
            "type" : "boolean",
            
          },
          "short" : {
            "type" : "boolean",
            
          },
          "int" : {
            "type" : "boolean",
            
          },
          "long" : {
            "type" : "boolean",
            
          },
          "float" : {
            "type" : "boolean",
            
          },
          "double" : {
            "type" : "boolean",
            
          },
          "bigDecimal" : {
            "type" : "boolean",
            
          },
          "bigInteger" : {
            "type" : "boolean",
            
          },
          "textual" : {
            "type" : "boolean",
            
          },
          "boolean" : {
            "type" : "boolean",
            
          },
          "null" : {
            "type" : "boolean",
            
          },
          "binary" : {
            "type" : "boolean",
            
          }
        },
        
      },
      "Count" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number of completed job runs.",
            "format" : "int64",
            
          },
          "successful" : {
            "type" : "integer",
            "description" : "Number of successful job runs.",
            "format" : "int64",
            
          },
          "unique" : {
            "type" : "integer",
            "description" : "Number of unique successful job runs.",
            "format" : "int64",
            
          }
        },
        
      },
      "OutputProperty" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          }
        },
        
      },
      "AuthenticationTokenV2" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "The JWT token for authenticated user.",
            
          }
        },
        
      },
      "JobStreamInPlanV2" : {
        "required" : [ "originalJobStreamName" ],
        "type" : "object",
        "properties" : {
          "flowNodeType" : {
            "$ref" : "#/components/schemas/FlowNodeType"
          },
          "engineId" : {
            "type" : "string",
            "description" : "The identifier of the engine.",
            "readOnly" : true,
            
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object.",
            "readOnly" : true,
            
          },
          "persistentId" : {
            "type" : "string",
            "description" : "The persistent unique identifier of the object.",
            "readOnly" : true,
            
          },
          "planId" : {
            "type" : "string",
            "description" : "The database identifier of the plan.",
            
          },
          "folderId" : {
            "type" : "string",
            "description" : "The identifier of the referenced folder.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
            
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the key",
            
          },
          "originalJobStreamName" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The original job stream name. Before it was aliased. Read-only attribute.",
            "readOnly" : true,
            
          },
          "aliasJobStreamName" : {
            "type" : "string",
            "description" : "The aliased job stream name.",
            
          },
          "workstationId" : {
            "type" : "string",
            "description" : "The identifier of the referenced workstation.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "A reference to the Workstation where the flow node in plan is contained",
            
          },
          "cpuFolderId" : {
            "type" : "string",
            "description" : "The identifier of the referenced folder.",
            
          },
          "jobStreamModelId" : {
            "type" : "string",
            "description" : "The identifier of the job stream in the model.",
            
          },
          "key" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The actual key value.",
            
          },
          "schedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "cpuTime" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "timeZone" : {
            "type" : "string",
            "description" : "The time zone of the flow node.",
            
          },
          "variableTableId" : {
            "type" : "string",
            "description" : "The identifier of the referenced VariableTable.",
            
          },
          "jsDefinitionFlags" : {
            "$ref" : "#/components/schemas/JobStreamInPlanDefinitionFlags"
          },
          "jsStatusFlags" : {
            "$ref" : "#/components/schemas/JobStreamInPlanStatusFlags"
          },
          "jsOptions" : {
            "$ref" : "#/components/schemas/JobStreamInPlanOptions"
          },
          "compositeStatus" : {
            "$ref" : "#/components/schemas/JobStreamInPlanCompositeStatusV2"
          },
          "commonStatus" : {
            "$ref" : "#/components/schemas/CommonStatusV2"
          },
          "priority" : {
            "type" : "integer",
            "description" : "The priority of the flow node.",
            "format" : "int32",
            
          },
          "origPriority" : {
            "type" : "integer",
            "description" : "The original priority of the flow node.",
            "format" : "int32",
            
          },
          "timeInfo" : {
            "$ref" : "#/components/schemas/TimeInfoV2"
          },
          "scheduledDate" : {
            "type" : "string",
            "description" : "The Scheduled Date of the job stream instance.",
            "format" : "date-time",
            
          },
          "jobStreamStats" : {
            "$ref" : "#/components/schemas/JobStreamStatsV2"
          },
          "dependencies" : {
            "type" : "array",
            "description" : "The list of DependencyInPlan of the flow node. If this object is the result of a query, this list is not filled.",
            
            "items" : {
              "$ref" : "#/components/schemas/DependencyInPlanV2"
            }
          },
          "dependenciesStats" : {
            "$ref" : "#/components/schemas/DependenciesStatsV2"
          },
          "timeRestrictions" : {
            "$ref" : "#/components/schemas/TimeRestrictionsInPlanV2"
          },
          "limit" : {
            "type" : "integer",
            "description" : "The job stream limit. Valid values between -1 (NO_LIMIT) and 1024. Default value NO_LIMIT.",
            "format" : "int32",
            
          },
          "jobs" : {
            "type" : "array",
            "description" : "The list of JobInPlan that are part of the job stream in plan.",
            
            "items" : {
              "$ref" : "#/components/schemas/JobInPlanV2"
            }
          },
          "serviceName" : {
            "type" : "string",
            
          },
          "serviceContact" : {
            "type" : "string",
            
          },
          "submitter" : {
            "type" : "string",
            
          },
          "internalIdentifier" : {
            "type" : "string",
            
          },
          "approvalInfo" : {
            "type" : "array",
            "description" : "Info regarding human tasks jobs of this job stream instance.",
            
            "items" : {
              "$ref" : "#/components/schemas/ApprovalInfo"
            }
          },
          "followsDepSequenceNum" : {
            "type" : "integer",
            "description" : "The sequence number of the predecessors dependency.",
            "format" : "int32",
            
          },
          "workstationClass" : {
            "type" : "string",
            "description" : "The id of the workstation class which represents a group of workstations.",
            
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          },
          "archived" : {
            "type" : "boolean",
            "description" : "The flag to indicate if the object is archived.",
            
          },
          "outputProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            
          }
        },
        
      },
      "OptimizationOptions" : {
        "type" : "string",
        "description" : "Optimization options for the Dynamic Pool.",
        
        "enum" : [ "HIGHQUANTITY", "LOWQUANTITY", "HIGHUTILIZATION", "LOWUTILIZATION" ]
      },
      "OutputConditionInPlanV2" : {
        "type" : "object",
        "properties" : {
          "conditionId" : {
            "type" : "string",
            
          },
          "jobInPlanId" : {
            "type" : "string",
            
          },
          "jobInPlanKey" : {
            "type" : "string",
            
          },
          "jobDefinitionInPlanId" : {
            "type" : "string",
            
          },
          "jobDefinitionName" : {
            "type" : "string",
            
          },
          "jobDefinitionWorkstation" : {
            "type" : "string",
            
          },
          "jobDefinitionWorkstationId" : {
            "type" : "string",
            
          },
          "planId" : {
            "type" : "string",
            
          },
          "conditionName" : {
            "type" : "string",
            
          },
          "mappingExpression" : {
            "type" : "string",
            
          },
          "isSuccCondition" : {
            "type" : "boolean",
            
          },
          "isSatisfied" : {
            "type" : "boolean",
            
          },
          "succCondition" : {
            "type" : "boolean",
            
          },
          "satisfied" : {
            "type" : "boolean",
            
          }
        },
        
      },
      "DependencyInPlanV2" : {
        "required" : [ "dependencyType" ],
        "type" : "object",
        "properties" : {
          "dependencyType" : {
            "$ref" : "#/components/schemas/DependencyType"
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object. It must be provided to release or remove a set of dependencies",
            
          },
          "dependencyStatus" : {
            "$ref" : "#/components/schemas/Status"
          },
          "satisfied" : {
            "type" : "boolean",
            "description" : "A boolean that shows if the dependency is satisfied or not",
            "readOnly" : true,
            
          },
          "depSequence" : {
            "type" : "integer",
            "description" : "The sequence number of the dependency.",
            "format" : "int32",
            "readOnly" : true,
            
          },
          "mandatory" : {
            "type" : "boolean",
            
          }
        },
        "description" : "It represents a generic dependency in plan",
        
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ExternalJobDependencyInPlanV2"
        }, {
          "$ref" : "#/components/schemas/ExternalJobStreamDependencyInPlanV2"
        }, {
          "$ref" : "#/components/schemas/InternalDependencyInPlanV2"
        }, {
          "$ref" : "#/components/schemas/JoinDependencyInPlanV2"
        }, {
          "$ref" : "#/components/schemas/FileDependencyInPlanV2"
        }, {
          "$ref" : "#/components/schemas/InternetworkDependencyInPlanV2"
        }, {
          "$ref" : "#/components/schemas/ResourceDependencyInPlanV2"
        }, {
          "$ref" : "#/components/schemas/PromptDependencyInPlanV2"
        } ]
      },
      "TaskType" : {
        "type" : "string",
        "description" : "Type of native task",
        
        "enum" : [ "UNIX", "WINDOWS", "BROKER", "OTHER" ]
      },
      "CommonObjectV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the item.",
            "readOnly" : true,
            
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the key",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the folder referenced by the workstation, job or job stream in plan",
            
          }
        },
        
      },
      "JobDefinition" : {
        "required" : [ "name", "task", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the workstation where this job definition is defined. In input at least one between workstationId and workstation must be specified.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "JOBDEFINITION_PROP_WORKSTATION_DESCRIPTION. In input at least one between workstationId and workstation must be specified, workstation is ignored when workstationId is specified.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the task. This is a readonly field extracted from the task.",
            
          },
          "subType" : {
            "type" : "string",
            "description" : "The subtype of the task. This is a readonly field extracted from the task.",
            "readOnly" : true,
            
          },
          "userLogins" : {
            "type" : "array",
            "description" : "The users used to execute the job.",
            "readOnly" : true,
            
            "items" : {
              "type" : "string",
              
            }
          },
          "task" : {
            "type" : "object",
            "description" : "The definition of task run by the job, the content varies depending on the type of task.",
            
          },
          "affinity" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Specify the name of the affinity job.",
            
          },
          "successfulOutputConditions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "The map of successful output conditions, that are verified after the job instance completes. If any of these condition is true, the job instance status is set to successful. If you do not specify either successfulOutputConditions nor otherOutputConditions, the job instance is considered successful when RC=0.",
            
          },
          "otherOutputConditions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "A map of other output conditions that are verified after the job instance completes. These conditions do not influence the final status of the job instance.",
            
          },
          "recovery" : {
            "$ref" : "#/components/schemas/RecoveryInfo"
          }
        },
        "description" : "A job definition is the smallest execution unit. It contains the task to run together with eventual output conditions and recovery options.",
        
      },
      "EventTrigger" : {
        "required" : [ "eventConditions", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the trigger.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the trigger.",
            
          },
          "triggerOnTimeout" : {
            "type" : "boolean",
            "description" : "If selected, this option determines that the job stream is launched if the events in the event triggers are not satisfied within the specified timeout.",
            
          },
          "timeout" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "correlationAttributes" : {
            "type" : "array",
            "description" : "For SET/SEQUENCE triggers, specifies the list of field names that must match between the events.",
            
            "items" : {
              "type" : "string",
              
            }
          },
          "inOrder" : {
            "type" : "boolean",
            "description" : "If selected, the event conditions are treated as an ordered sequence of events.",
            
          },
          "eventConditions" : {
            "type" : "array",
            "description" : "The event conditions that must be met to trigger the submission of the job stream.",
            
            "items" : {
              "$ref" : "#/components/schemas/EventCondition"
            }
          }
        },
        "description" : "An event trigger defines a set of event conditions that, when satisfied, automatically submits a job stream instance.",
        
      },
      "JobDefinitionInPlanV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the job definition.",
            
          },
          "jobDefinitionModelId" : {
            "type" : "string",
            "description" : "The identifier of the job definition in the model.",
            
          },
          "folderId" : {
            "type" : "string",
            
          },
          "folder" : {
            "type" : "string",
            
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the job definition.",
            
          },
          "workstationId" : {
            "type" : "string",
            "description" : "The identifier of the referenced workstation.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the referenced workstation.",
            
          },
          "cpuFolderId" : {
            "type" : "string",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the job definition.",
            
          },
          "task" : {
            "type" : "object",
            "description" : "The task run by the job.",
            
          },
          "isCommand" : {
            "type" : "boolean",
            "description" : "A boolean representing if this job definition is for a command or for a script file.",
            
          },
          "estimatedDuration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "recoveryJobId" : {
            "type" : "string",
            "description" : "The identifier of the referenced recovery job.",
            
          },
          "recoveryJob" : {
            "type" : "string",
            "description" : "A reference to a recovery job. For internal use only.",
            
          },
          "recoveryJobName" : {
            "type" : "string",
            "description" : "Name of the recovery job",
            
          },
          "recoveryJobWorkstationId" : {
            "type" : "string",
            "description" : "The identifier of the referenced workstation of the recovery job.",
            
          },
          "recoveryJobWorkstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the referenced workstation of the recovery job.",
            
          },
          "recoveryCpuFolderId" : {
            "type" : "string",
            
          },
          "abendPromptId" : {
            "type" : "string",
            "description" : "A reference to the abend prompt identifier.",
            
          },
          "abendPromptFolder" : {
            "type" : "string",
            "description" : "The key of the folder referenced by the prompt in plan",
            
          },
          "abendPromptOriginalName" : {
            "type" : "string",
            "description" : "The original name of the abend prompt.",
            
          },
          "abendPromptName" : {
            "type" : "string",
            "description" : "The name of the abend prompt.",
            
          },
          "abendPromptText" : {
            "type" : "string",
            "description" : "The abend prompt text.",
            
          },
          "planId" : {
            "type" : "string",
            "description" : "The database identifier of the plan.",
            
          },
          "userLogins" : {
            "type" : "array",
            "description" : "The users used to execute the job.",
            "readOnly" : true,
            
            "items" : {
              "type" : "string",
              
            }
          },
          "recoveryOption" : {
            "$ref" : "#/components/schemas/RecoveryOptionV2"
          },
          "recoveryRepeatInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "recoveryRepeatOccurrences" : {
            "type" : "integer",
            "description" : "The recovery reruns occurrences.",
            "format" : "int32",
            
          },
          "recoveryRepeatAffinity" : {
            "type" : "boolean",
            "description" : "The recovery reruns affinity.",
            
          },
          "affinity" : {
            "type" : "string",
            
          },
          "command" : {
            "type" : "boolean",
            
          }
        },
        
      },
      "OffsetUnit" : {
        "type" : "string",
        
        "enum" : [ "DAYS", "WORKDAYS", "WEEKDAYS" ]
      },
      "LocalTime" : {
        "type" : "string",
        "format" : "local-time",
        
        "externalDocs" : {
          "description" : "As defined by 'partial-time' in RFC3339",
          "url" : "https://www.rfc-editor.org/rfc/rfc3339.html#section-5.6"
        }
      },
      "EmbeddedJobDefinition" : {
        "required" : [ "task", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            "writeOnly" : true,
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the task. This is a readonly field extracted from the task.",
            
          },
          "subType" : {
            "type" : "string",
            "description" : "The subtype of the task. This is a readonly field extracted from the task.",
            "readOnly" : true,
            
          },
          "userLogins" : {
            "type" : "array",
            "description" : "The users used to execute the job.",
            "readOnly" : true,
            
            "items" : {
              "type" : "string",
              
            }
          },
          "task" : {
            "type" : "object",
            "description" : "The definition of task run by the job, the content varies depending on the type of task.",
            
          },
          "affinity" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Specify the name of the affinity job.",
            
          },
          "successfulOutputConditions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "The map of successful output conditions, that are verified after the job instance completes. If any of these condition is true, the job instance status is set to successful. If you do not specify either successfulOutputConditions nor otherOutputConditions, the job instance is considered successful when RC=0.",
            
          },
          "otherOutputConditions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "A map of other output conditions that are verified after the job instance completes. These conditions do not influence the final status of the job instance.",
            
          },
          "recovery" : {
            "$ref" : "#/components/schemas/RecoveryInfo"
          }
        },
        
      },
      "JobStreamInPlanStatusFlags" : {
        "type" : "object",
        "properties" : {
          "released" : {
            "type" : "boolean",
            "description" : "Job stream has been released. Read-only attribute.",
            "readOnly" : true,
            
          },
          "lateJobStream" : {
            "type" : "boolean",
            "description" : "Job stream is a late job stream. Read-only attribute.",
            "readOnly" : true,
            
          },
          "pendingPredecessor" : {
            "type" : "boolean",
            "description" : "Job stream is pending predecessor. Read-only attribute.",
            "readOnly" : true,
            
          },
          "hasEveryJobs" : {
            "type" : "boolean",
            
          },
          "inOrder" : {
            "type" : "boolean",
            
          },
          "dontTouch" : {
            "type" : "boolean",
            
          }
        },
        "description" : "Read-only status flags for a job stream in a plan",
        
      },
      "StartCondition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/StartConditionType"
          },
          "jobDefinitionId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For job start conditions, the id of the job definition to run.",
            
          },
          "jobDefinition" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For job start conditions, the path of the job definition to run. It's ignored when jobDefinitionId is specified.",
            
          },
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the workstation where this file is monitored or the job is run. It's ignored for job start condition if jobDefinitionId is specified.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of a workstation where this file is monitored or the job is run. It's ignored when either workstationId or jobDefinitionId are specified.",
            
          },
          "outputCondition" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For job start conditions, the output condition that need to be satisfied.",
            
          },
          "userId" : {
            "type" : "string",
            "description" : "For file start conditions, the user used locally on the workstation to monitor the file.",
            
          },
          "fileName" : {
            "type" : "string",
            "description" : "For file start conditions, the file pattern to monitor.",
            
          },
          "processInBatch" : {
            "type" : "boolean",
            "description" : "For file start conditions, true if all file satisfied files are processed together.",
            
          },
          "pollingInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "outputFile" : {
            "type" : "string",
            "description" : "For file start conditions, a file local to to the workstation where the list of matched files is written.",
            
          },
          "advancedParameters" : {
            "type" : "string",
            "description" : "For file start conditions, optional filemonitor additional parameters.",
            
          },
          "alias" : {
            "type" : "string",
            "description" : "The name of the job when monitored in the plan. If not specified, a default one will be used.",
            
          },
          "resubmit" : {
            "type" : "boolean",
            "description" : "Automatically resubmit a new instance of the job stream after the condition is satisfied.",
            
          }
        },
        "description" : "Start conditions are used to check for specific conditions before starting the jobs, and to optionally automatically resubmit the job stream to check for next reoccurrences.",
        
      },
      "ActionResourceResponseV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the resource.",
            
          },
          "url" : {
            "type" : "string",
            "description" : "The URL to get the resource.",
            
          },
          "message" : {
            "type" : "string",
            
          },
          "isError" : {
            "type" : "boolean",
            
          },
          "lockData" : {
            "$ref" : "#/components/schemas/LockDataV2"
          },
          "error" : {
            "type" : "boolean",
            
          }
        },
        
      },
      "JobInPlanV2" : {
        "type" : "object",
        "properties" : {
          "flowNodeType" : {
            "$ref" : "#/components/schemas/FlowNodeType"
          },
          "engineId" : {
            "type" : "string",
            "description" : "The identifier of the engine.",
            "readOnly" : true,
            
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object.",
            "readOnly" : true,
            
          },
          "persistentId" : {
            "type" : "string",
            "description" : "The persistent unique identifier of the object.",
            "readOnly" : true,
            
          },
          "planId" : {
            "type" : "string",
            "description" : "The database identifier of the plan.",
            
          },
          "folderId" : {
            "type" : "string",
            "description" : "The identifier of the referenced folder.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
            
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the key",
            
          },
          "workstationId" : {
            "type" : "string",
            "description" : "The identifier of the referenced workstation.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "A reference to the Workstation where the flow node in plan is contained",
            
          },
          "cpuFolderId" : {
            "type" : "string",
            "description" : "The identifier of the referenced folder.",
            
          },
          "jobStreamId" : {
            "type" : "string",
            "description" : "The identifier of the job stream to which the job belongs.",
            
          },
          "jobStreamName" : {
            "type" : "string",
            "description" : "The name of the jobstream where the job in plan is contained",
            
          },
          "jobStreamWorkstationId" : {
            "type" : "string",
            "description" : "The identifier of the workstation of the job stream in plan where this job in plan is contained.",
            
          },
          "jobStreamWorkstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "A reference to the workstation of the job stream in plan where this job in plan is contained.",
            
          },
          "position" : {
            "type" : "integer",
            "description" : "The position of the job in the job stream.",
            "format" : "int32",
            
          },
          "key" : {
            "type" : "string",
            "description" : "The actual key value.",
            
          },
          "jobDefinitionFlags" : {
            "$ref" : "#/components/schemas/JobInPlanDefinitionFlags"
          },
          "jobStatusFlags" : {
            "$ref" : "#/components/schemas/JobInPlanStatusFlags"
          },
          "jobOptions" : {
            "$ref" : "#/components/schemas/JobInPlanOptions"
          },
          "lastRunCompositeStatus" : {
            "$ref" : "#/components/schemas/JobInPlanCompositeStatusV2"
          },
          "lastRunCommonStatus" : {
            "$ref" : "#/components/schemas/CommonStatusV2"
          },
          "jobDefinitionRefId" : {
            "type" : "string",
            "description" : "The identifier of the job definition.",
            
          },
          "jobDefinition" : {
            "$ref" : "#/components/schemas/JobDefinitionInPlanV2"
          },
          "priority" : {
            "type" : "integer",
            "description" : "The priority of the flow node.",
            "format" : "int32",
            
          },
          "origPriority" : {
            "type" : "integer",
            "description" : "The original priority of the flow node.",
            "format" : "int32",
            
          },
          "jobruns" : {
            "type" : "array",
            "description" : "All the run instances of the job.",
            
            "items" : {
              "$ref" : "#/components/schemas/JobRunInstanceV2"
            }
          },
          "schedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "cpuTime" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "timeZone" : {
            "type" : "string",
            "description" : "The time zone of the flow node.",
            
          },
          "timeRestrictions" : {
            "$ref" : "#/components/schemas/TimeRestrictionsInPlanV2"
          },
          "dependencies" : {
            "type" : "array",
            "description" : "The list of DependencyInPlan of the flow node. If this object is the result of a query, this list is not filled.",
            
            "items" : {
              "$ref" : "#/components/schemas/DependencyInPlanV2"
            }
          },
          "dependenciesStats" : {
            "$ref" : "#/components/schemas/DependenciesStatsV2"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "confidenceInterval" : {
            "type" : "string",
            
          },
          "criticalStart" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "repeatInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "skipLateAction" : {
            "$ref" : "#/components/schemas/SkipLateAction"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          },
          "archived" : {
            "type" : "boolean",
            "description" : "The flag to indicate if the object is archived.",
            
          }
        },
        
      },
      "RecoveryInfo" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/RecoveryOptionV2"
          },
          "repeatInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "repeatOccurrences" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Specify the maximum number of times the job can be rerun.",
            "format" : "int32",
            
            "default" : 1
          },
          "repeatAffinity" : {
            "type" : "boolean",
            "description" : "If selected, when the workstation is a pool, the job reruns on the same agent.",
            
          },
          "recoveryJobDefinitionId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The path of the job definition to run before attempting the recovery action. Ignored if recoveryJobDefinitionId is specified. Ignored if recoveryJobDefinitionId is specified.",
            
          },
          "recoveryJobDefinitionRef" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Specify the path of the job definition to run before attempting the recovery action.",
            
          },
          "abendPrompt" : {
            "type" : "string",
            "description" : "A prompt message that need to be replied before taking the recovery action.",
            
          }
        },
        
      },
      "LateInfo" : {
        "type" : "object",
        "properties" : { },
        
      },
      "SelectVariable" : {
        "required" : [ "choices", "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the ServiceVariable.",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the self-service variable",
            
            "allOf" : [ {
              "type" : "string",
              "description" : "Type of the specific service variable.",
              
              "enum" : [ "string", "integer", "double", "checkbox", "select", "multiSelect", "radioGroup", "checkboxGroup" ]
            } ],
            "default" : "select"
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the self-service variable",
            
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the self-service variable",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the self-service variable",
            
          },
          "placeholder" : {
            "type" : "string",
            "description" : "The placeholder of the self-service variable",
            
          },
          "required" : {
            "type" : "boolean",
            "description" : "Specifies if the self-service variable is required",
            
          },
          "choices" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ValueChoice"
            }
          }
        },
        
      },
      "PromptDependency" : {
        "type" : "object",
        "properties" : {
          "globalPromptId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of a prompt definition.",
            
          },
          "globalPrompt" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of the prompt definition.",
            
          },
          "message" : {
            "type" : "string",
            "description" : "The message of a local prompt. Cannot be specified if globalPromptId or globalPrompt are present.",
            
          }
        },
        "description" : "A prompt that need to be replied before the job stream or job is launched.",
        
      },
      "AdminRolesV2" : {
        "type" : "object",
        "properties" : {
          "admin" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/RolePrivilegeV2"
            }
          }
        },
        
      },
      "ModifyDataV2" : {
        "type" : "object",
        "properties" : {
          "modifiedBy" : {
            "type" : "string",
            "description" : "The name of the last user who modified the object.",
            "readOnly" : true,
            
          },
          "modifiedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "version" : {
            "type" : "integer",
            "description" : "The last version of the object.",
            "format" : "int32",
            "readOnly" : true,
            
          }
        },
        
      },
      "ObjectFolderCountV2" : {
        "type" : "object",
        "properties" : {
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            
          },
          "folderId" : {
            "type" : "string",
            
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "commonStatus" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              
            },
            
          },
          "activeStates" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              
            },
            
          }
        },
        
      },
      "MatchingCriteriaType" : {
        "type" : "string",
        "description" : "Criteria used to find potential predecessor instances.",
        
        "enum" : [ "useDefault", "previous", "sameDay", "relative", "absolute" ]
      },
      "ApiKey" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "user" : {
            "type" : "string",
            "description" : "The authentication user ID for this API Key.",
            "readOnly" : true,
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "createdBy" : {
            "type" : "string",
            "description" : "The user who created the API Key.",
            "readOnly" : true,
            
          },
          "expirationTimestamp" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "lastUsage" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "type" : {
            "$ref" : "#/components/schemas/ApiKeyType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ApiKeyStatus"
          },
          "groups" : {
            "type" : "array",
            "description" : "The list of groups mapped to this SERVICE API Key.",
            
            "items" : {
              "type" : "string",
              
            }
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            "writeOnly" : true,
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            "writeOnly" : true,
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            "writeOnly" : true,
            
          }
        },
        "description" : "An API Key is a token used for authentication",
        
      },
      "ServiceVariable" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the ServiceVariable.",
            
          },
          "type" : {
            "$ref" : "#/components/schemas/ServiceVariableType"
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the self-service variable",
            
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the self-service variable",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the self-service variable",
            
          },
          "placeholder" : {
            "type" : "string",
            "description" : "The placeholder of the self-service variable",
            
          },
          "required" : {
            "type" : "boolean",
            "description" : "Specifies if the self-service variable is required",
            
          }
        },
        "description" : "Represents a generic service variable",
        
        "oneOf" : [ {
          "$ref" : "#/components/schemas/StringVariable"
        }, {
          "$ref" : "#/components/schemas/IntegerVariable"
        }, {
          "$ref" : "#/components/schemas/DoubleVariable"
        }, {
          "$ref" : "#/components/schemas/SelectVariable"
        }, {
          "$ref" : "#/components/schemas/MultipleSelectVariable"
        }, {
          "$ref" : "#/components/schemas/CheckboxVariable"
        }, {
          "$ref" : "#/components/schemas/CheckboxGroupVariable"
        }, {
          "$ref" : "#/components/schemas/RadioGroupVariable"
        } ]
      },
      "OnOverlap" : {
        "type" : "string",
        "description" : "How the next instance behaves when the previous instance is still running.",
        
        "enum" : [ "parallel", "enqueue", "donotstart" ]
      },
      "ResourceResponseV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the resource.",
            
          },
          "url" : {
            "type" : "string",
            "description" : "The URL to get the resource.",
            
          }
        },
        
      },
      "ApiKeyCreationResponse" : {
        "required" : [ "label", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of this API Key.",
            "readOnly" : true,
            
          },
          "user" : {
            "type" : "string",
            "description" : "The authentication user ID for this API Key.",
            "readOnly" : true,
            
          },
          "label" : {
            "type" : "string",
            "description" : "The name that uniquely identifies the API Key.",
            
          },
          "type" : {
            "$ref" : "#/components/schemas/ApiKeyType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ApiKeyStatus"
          },
          "expirationTimestamp" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "lastUsage" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "The user who created the API Key.",
            "readOnly" : true,
            
          },
          "createdTimestamp" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "groups" : {
            "type" : "array",
            "description" : "The list of groups mapped to this SERVICE API Key.",
            
            "items" : {
              "type" : "string",
              
            }
          },
          "token" : {
            "type" : "string",
            "description" : "The API Key authentication token",
            "readOnly" : true,
            
          }
        },
        
      },
      "Folder" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "parentId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the parent Folder.",
            "readOnly" : true,
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "parent" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the parent Folder.",
            "readOnly" : true,
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            "writeOnly" : true,
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            "writeOnly" : true,
            
          }
        },
        "description" : "A folder is a container to organize other definitions in a hierarchical way, like a directory on a file system. ACLs can be used to specify who can access objects in that folder and its subtree.",
        
      },
      "MatchedEventV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of this event.",
            
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this event.",
            
          },
          "eventPlugin" : {
            "type" : "string",
            "description" : "The event plugin of this event.",
            
          },
          "eventType" : {
            "type" : "string",
            "description" : "The event type of this event.",
            
          },
          "eventSourceId" : {
            "type" : "string",
            "description" : "The id of the event source of this event.",
            
          },
          "eventSource" : {
            "type" : "string",
            "description" : "The event source of this event.",
            
          },
          "receivedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope of this event.",
            
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "Received event data.",
            
          }
        },
        
      },
      "WorkstationStateEnum" : {
        "type" : "string",
        
        "enum" : [ "MASTER", "MANAGER", "LINKED", "FULLY_LINKED", "DIRECTLY_LINKED", "HOST_LINKED", "EXTENDED_LINKED", "BROKER", "START", "RUNNING", "TCP_IP_LINKED", "MONMAN", "INSTALLED_AND_RUNNING", "INSTALLED", "UPDATE", "SERVER_STARTED", "SERVER_RESTARTING", "ONLINE", "WRITER_RUNNING", "JOBMAN_UP", "WRITER_UP", "EVT_PROC_RUNNING", "SSM_RUNNING", "CONFIG_UPDATED", "BEHIND_FIREWALL", "IS_INITED" ]
      },
      "OrderedWorkstation" : {
        "type" : "object",
        "properties" : {
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of workstation.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of workstation.",
            
          }
        },
        "description" : "A dependency on another job stream, or on a job in another job stream.",
        
      },
      "EventSourceActualStatus" : {
        "type" : "string",
        
        "enum" : [ "CONNECTED", "DISCONNECTED", "LISTENING", "ERROR" ]
      },
      "ModelObjectJobStream" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/JobStream"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "DoubleVariable" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the ServiceVariable.",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the self-service variable",
            
            "allOf" : [ {
              "type" : "string",
              "description" : "Type of the specific service variable.",
              
              "enum" : [ "string", "integer", "double", "checkbox", "select", "multiSelect", "radioGroup", "checkboxGroup" ]
            } ],
            "default" : "double"
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the self-service variable",
            
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the self-service variable",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the self-service variable",
            
          },
          "placeholder" : {
            "type" : "string",
            "description" : "The placeholder of the self-service variable",
            
          },
          "required" : {
            "type" : "boolean",
            "description" : "Specifies if the self-service variable is required",
            
          },
          "defaultValue" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "number",
            "description" : "Specifies the default value for the double variable.",
            "format" : "double",
            
          },
          "minimum" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "number",
            "description" : "Specifies the minimum value for the double variable.",
            "format" : "double",
            
          },
          "maximum" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "number",
            "description" : "Specifies the maximum value for the double variable.",
            "format" : "double",
            
          }
        },
        
      },
      "ModelObjectObject" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "type" : "object",
            "description" : "The object definition.",
            
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "ScopeType" : {
        "type" : "string",
        
        "enum" : [ "WHOLE", "WHOLE_NO_JOB_DEFINITIONS_AND_NO_DEPENDENCIES", "WHOLE_NO_JOB_DEFINITIONS", "WHOLE_NO_DEPENDENCIES", "SELF_SERVICE_CATALOG" ]
      },
      "OptimizationMode" : {
        "type" : "string",
        "description" : "Optimization mode for the Dynamic Pool.",
        
        "enum" : [ "WorkloadBalance", "CPUUtilization", "LogicalResources" ]
      },
      "PromptType" : {
        "type" : "string",
        
        "enum" : [ "Ad Hoc Prompt", "Predefined Prompt", "Restart Prompt" ]
      },
      "RunCycleSubset" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The run cycle identifier.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The run cycle name.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "validFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "validTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "type" : {
            "$ref" : "#/components/schemas/RunCycleType"
          },
          "freeDaysRule" : {
            "$ref" : "#/components/schemas/FreeDaysRule"
          },
          "dates" : {
            "type" : "array",
            "description" : "For SIMPLE run cycles, a list of dates.",
            
            "items" : {
              "type" : "string",
              "format" : "date",
              
            }
          },
          "expression" : {
            "type" : "string",
            "description" : "For RRULE run cycles, an iCalendar RRule expression. For CRON run cycles, a UNIX or Quartz cron expression. For SIMPLE run cycles, a comma separated list of dates.",
            
          },
          "calendarId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For CALENDAR run cycles, the ID of the calendar that contains the list of days.",
            
          },
          "calendar" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For CALENDAR run cycles, the folder path of the calendar that contains the list of days. In input, calendar is ignored when calendarId is specified.",
            
          },
          "runCycleGroupId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For GROUP run cycles, the ID of the run cycle group generating the job stream instances.",
            
          },
          "runCycleGroup" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For GROUP run cycles, the folder path of the run cycle group generating the job stream instances. In input, calendar is ignored when runCycleGroupId is specified.",
            
          },
          "offset" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "For GROUP and CALENDAR run cycles, the number of days before or after a defined day in the specified run cycle group or calendar.",
            "format" : "int32",
            
          },
          "offsetUnit" : {
            "$ref" : "#/components/schemas/OffsetUnit"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "startDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the start time.",
            "format" : "int32",
            
          },
          "repeatInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "repeatEndTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "repeatEndDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the repeat end time.",
            "format" : "int32",
            
          },
          "variableTableId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of a variable table used by the scheduled instances generated by this run cycle. Only for inclusive run cycles.",
            
          },
          "variableTable" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of a variable table used by the scheduled instances generated by this run cycle. Only for inclusive run cycles. In input variableTable is ignored when variableTableId is specified.",
            
          },
          "asap" : {
            "type" : "boolean",
            "description" : "True if the job stream has to start as soon as dependencies are resolved, without waiting for start time. Only for inclusive run cycles.",
            
          },
          "latestStartTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "latestStartDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the latest start time of the job stream.",
            "format" : "int32",
            
          },
          "perJobLatestStart" : {
            "type" : "boolean",
            "description" : "If true, the latest start time is checked for each job in the job stream, if false no further check is done after the first job is submitted. Only for inclusive run cycles.",
            
          },
          "lateStartAction" : {
            "$ref" : "#/components/schemas/LateStartAction"
          },
          "deadlineTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "deadlineDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the deadline time.",
            "format" : "int32",
            
          },
          "logicalAnd" : {
            "type" : "boolean",
            "description" : "The operator of the subset.",
            
          }
        },
        "description" : "A RunCycle defines the rules to generate (or suppress) scheduled instances of a Job Stream.",
        
      },
      "ModelObjectJobDefinition" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/JobDefinition"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "ResourceUsage" : {
        "type" : "string",
        
        "enum" : [ "PLANNING", "CONTROL", "PLANNING_AND_CONTROL", "NEITHER_PLANNING_NOR_CONTROL" ]
      },
      "ApiKeyStatus" : {
        "type" : "string",
        
        "enum" : [ "VALID", "EXPIRING", "EXPIRED" ]
      },
      "ModelObjectVariable" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/Variable"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "ConditionsV2" : {
        "type" : "object",
        "properties" : {
          "conditions" : {
            "type" : "array",
            "description" : "The list of output conditions",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        
      },
      "JobInPlanStatusFlags" : {
        "type" : "object",
        "properties" : {
          "jobStreamCancelled" : {
            "type" : "boolean",
            
          },
          "promotedToUrgentQueue" : {
            "type" : "boolean",
            
          },
          "jobLate" : {
            "type" : "boolean",
            
          },
          "userRerunAgain" : {
            "type" : "boolean",
            
          },
          "restarted" : {
            "type" : "boolean",
            
          },
          "untilGone" : {
            "type" : "boolean",
            
          },
          "buckujob" : {
            "type" : "boolean",
            
          },
          "needMessage" : {
            "type" : "boolean",
            
          },
          "deadlineHasPassed" : {
            "type" : "boolean",
            
          },
          "altJobIssue" : {
            "type" : "boolean",
            
          }
        },
        "description" : "Read-only status flags for a job in a plan",
        
      },
      "MinDurationActionV2" : {
        "type" : "string",
        
        "enum" : [ "continue", "abend", "confirmed" ]
      },
      "onErrorOption" : {
        "type" : "string",
        
        "enum" : [ "DEFAULT", "KEEP", "RELEASE" ]
      },
      "ProtocolType" : {
        "type" : "string",
        
        "enum" : [ "HTTP", "HTTPS" ]
      },
      "Prompt" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "text" : {
            "type" : "string",
            "description" : "The text of the prompt.",
            
          },
          "dbaId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the dba containing this prompt.",
            
          }
        },
        "description" : "A prompt identifies a textual message that is displayed to the operator and halts processing of the job or job stream until an answer is received.",
        
      },
      "CriticalInfo" : {
        "type" : "object",
        "properties" : { },
        
      },
      "EventStatsV2" : {
        "type" : "object",
        "properties" : {
          "numOfEvents" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numOfPendingEvents" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numOfTriggeringEvents" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        },
        
      },
      "ExclusiveRunCycleSubset" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The run cycle identifier.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The run cycle name.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "validFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "validTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "type" : {
            "$ref" : "#/components/schemas/RunCycleType"
          },
          "freeDaysRule" : {
            "$ref" : "#/components/schemas/FreeDaysRule"
          },
          "dates" : {
            "type" : "array",
            "description" : "For SIMPLE run cycles, a list of dates.",
            
            "items" : {
              "type" : "string",
              "format" : "date",
              
            }
          },
          "expression" : {
            "type" : "string",
            "description" : "For RRULE run cycles, an iCalendar RRule expression. For CRON run cycles, a UNIX or Quartz cron expression. For SIMPLE run cycles, a comma separated list of dates.",
            
          },
          "calendarId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For CALENDAR run cycles, the ID of the calendar that contains the list of days.",
            
          },
          "calendar" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For CALENDAR run cycles, the folder path of the calendar that contains the list of days. In input, calendar is ignored when calendarId is specified.",
            
          },
          "runCycleGroupId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For GROUP run cycles, the ID of the run cycle group generating the job stream instances.",
            
          },
          "runCycleGroup" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For GROUP run cycles, the folder path of the run cycle group generating the job stream instances. In input, calendar is ignored when runCycleGroupId is specified.",
            
          },
          "offset" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "For GROUP and CALENDAR run cycles, the number of days before or after a defined day in the specified run cycle group or calendar.",
            "format" : "int32",
            
          },
          "offsetUnit" : {
            "$ref" : "#/components/schemas/OffsetUnit"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "startDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the start time.",
            "format" : "int32",
            
          },
          "repeatInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "repeatEndTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "repeatEndDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the repeat end time.",
            "format" : "int32",
            
          },
          "logicalAnd" : {
            "type" : "boolean",
            "description" : "The operator of the subset.",
            
          }
        },
        "description" : "A RunCycle defines the rules to generate (or suppress) scheduled instances of a Job Stream.",
        
      },
      "JobStreamInPlanCompositeStatusV2" : {
        "type" : "object",
        "properties" : {
          "cancelPending" : {
            "type" : "boolean",
            
          },
          "canceled" : {
            "type" : "boolean",
            
          },
          "started" : {
            "type" : "boolean",
            
          },
          "error" : {
            "type" : "boolean",
            
          },
          "dontRun" : {
            "type" : "boolean",
            
          },
          "status" : {
            "$ref" : "#/components/schemas/JobStreamInPlanStatus"
          },
          "substatus" : {
            "$ref" : "#/components/schemas/JobStreamInPlanSubStatus"
          }
        },
        
      },
      "DependenciesStatsV2" : {
        "type" : "object",
        "properties" : {
          "numberOfDependencies" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfJobDependencies" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfJobStreamDependencies" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfInternetworkDependencies" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfPromptDependencies" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfResourceDependencies" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfFileDependencies" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfUnresolvedDependencies" : {
            "type" : "integer",
            "format" : "int32",
            
          },
          "numberOfNonResourceUnresolvedDependencies" : {
            "type" : "integer",
            "format" : "int32",
            
          }
        },
        
      },
      "Requirements" : {
        "type" : "object",
        "properties" : {
          "requirementsOS" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The operating systems that the workstation must support.",
            
            "items" : {
              "$ref" : "#/components/schemas/RequirementOS"
            }
          },
          "optimizationMode" : {
            "$ref" : "#/components/schemas/OptimizationMode"
          },
          "cpuUtilization" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Maximum value percentage of CPU utilization.",
            "format" : "int32",
            
          },
          "optimizationOption" : {
            "$ref" : "#/components/schemas/OptimizationOptions"
          },
          "logicalResources" : {
            "type" : "array",
            "description" : "The logical resources for the workstation.",
            
            "items" : {
              "$ref" : "#/components/schemas/LogicalResource"
            }
          },
          "xml" : {
            "type" : "string",
            "description" : "The logical resources for the workstation.",
            
          }
        },
        "description" : "Requirements for the workstation to join the Dynamic Pool.",
        
      },
      "IntegerVariable" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the ServiceVariable.",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the self-service variable",
            
            "allOf" : [ {
              "type" : "string",
              "description" : "Type of the specific service variable.",
              
              "enum" : [ "string", "integer", "double", "checkbox", "select", "multiSelect", "radioGroup", "checkboxGroup" ]
            } ],
            "default" : "integer"
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the self-service variable",
            
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the self-service variable",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the self-service variable",
            
          },
          "placeholder" : {
            "type" : "string",
            "description" : "The placeholder of the self-service variable",
            
          },
          "required" : {
            "type" : "boolean",
            "description" : "Specifies if the self-service variable is required",
            
          },
          "defaultValue" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Specifies the default value for the integer variable.",
            "format" : "int32",
            
          },
          "minimum" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Specifies the minimum value for the integer variable.",
            "format" : "int32",
            
          },
          "maximum" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Specifies the maximum value for the integer variable.",
            "format" : "int32",
            
          }
        },
        
      },
      "AccessToken" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            
          },
          "accessTokenExpirationTime" : {
            "$ref" : "#/components/schemas/Instant"
          }
        },
        
      },
      "JobDescriptionInfo" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "object",
          
        },
        
      },
      "GenericResponseV2" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "object",
          
        },
        
      },
      "GroupsV2" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "uniqueItems" : true,
            "type" : "array",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        
      },
      "AlertLevel" : {
        "type" : "string",
        
        "enum" : [ "HIGH_RISK", "POTENTIAL_RISK", "ON_TRACK" ]
      },
      "PaginatedResponseV221" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectSecurityRole"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "PaginatedResponseV220" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectAccessControlList"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "Job" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the job.",
            
          },
          "abstractId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id representing all versions of this object, regardless the validity range.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the job. Optional, if not specified the name is the same of the job definition.",
            
          },
          "jobDefinitionRefId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the job definition used by the job. At least one of jobDefinitionRefId, jobDefinitionRef, jobDefinition must be specified.",
            
          },
          "jobDefinitionRef" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Specify the path and the name of the job definition used by the job. At least one of jobDefinitionRefId, jobDefinitionRef, jobDefinition must be specified.",
            
          },
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the workstation where this object is defined. For not embedded scenarios it's read-only, inherited from the job definition used by this job.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of a workstation where this object is defined. For not embedded scenarios it's read-only, inherited from the job definition used by this job.",
            
          },
          "jobDefinition" : {
            "$ref" : "#/components/schemas/EmbeddedJobDefinition"
          },
          "documentation" : {
            "type" : "string",
            "description" : "You can use this space to write comprehensive information about the item, such as its function, expected outcomes, and troubleshooting details. You can toggle \"Preview\" to see the formatted version of your documentation.",
            
          },
          "options" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Select job options.",
            
            "items" : {
              "$ref" : "#/components/schemas/JobOption"
            }
          },
          "priority" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Specify the priority value that defines the job instance submission order.",
            "format" : "int32",
            
          },
          "timeZone" : {
            "type" : "string",
            "description" : "Select the time zone for the job. If no time zone is specified, the job uses the time zone set on the workstation where the job is defined.",
            
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "startDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the start time of the job.",
            "format" : "int32",
            
          },
          "asap" : {
            "type" : "boolean",
            "description" : "If selected, the job instance has to start as soon as its dependencies are resolved, without waiting for the defined start time.",
            
          },
          "latestStartTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "latestStartDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the latest start time of the job.",
            "format" : "int32",
            
          },
          "lateStartAction" : {
            "$ref" : "#/components/schemas/LateStartAction"
          },
          "deadlineTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "deadlineDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the deadline time of the job.",
            "format" : "int32",
            
          },
          "lateAction" : {
            "$ref" : "#/components/schemas/LateAction"
          },
          "externalPredecessors" : {
            "type" : "array",
            "description" : "Dependencies on other job streams, or on jobs in other job streams.",
            
            "items" : {
              "$ref" : "#/components/schemas/ExternalPredecessor"
            }
          },
          "internalPredecessors" : {
            "type" : "array",
            "description" : "Dependencies on other jobs in the same job stream.",
            
            "items" : {
              "$ref" : "#/components/schemas/InternalPredecessor"
            }
          },
          "joinConditions" : {
            "type" : "array",
            "description" : "Dependencies on sets of predecessors that could be only partially satisfied.",
            
            "items" : {
              "$ref" : "#/components/schemas/JoinConditionForJob"
            }
          },
          "interNetworkDependencies" : {
            "type" : "array",
            "description" : "Dependencies on remote systems via an X-AGENT.",
            
            "items" : {
              "$ref" : "#/components/schemas/InterNetworkDependency"
            }
          },
          "promptDependencies" : {
            "type" : "array",
            "description" : "Prompts that need to be replied before the job stream is launched.",
            
            "items" : {
              "$ref" : "#/components/schemas/PromptDependency"
            }
          },
          "fileDependencies" : {
            "type" : "array",
            "description" : "Files that are checked before the job stream is launched.",
            
            "items" : {
              "$ref" : "#/components/schemas/FileDependency"
            }
          },
          "resourceDependencies" : {
            "type" : "array",
            "description" : "Resources allocated while the job stream is running.",
            
            "items" : {
              "$ref" : "#/components/schemas/ResourceDependency"
            }
          },
          "minDuration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "minDurationPercentage" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The minimum expected duration of the job, as percentage of the estimated duration. minDuration and minDurationPercentage cannot be specified at the same time.",
            "format" : "int32",
            
          },
          "minDurationAction" : {
            "$ref" : "#/components/schemas/MinDurationActionV2"
          },
          "maxDuration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "maxDurationPercentage" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The maximum duration of the job, as percentage of the estimated duration. maxDuration and maxDurationPercentage cannot be specified at the same time.",
            "format" : "int32",
            
          },
          "maxDurationAction" : {
            "$ref" : "#/components/schemas/MaxDurationActionV2"
          },
          "repeatInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "pollingCondition" : {
            "type" : "string",
            "description" : "An output condition that is used to automatically rerun a job until a specified condition is satisfied.",
            
          },
          "pollingInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "noOperation" : {
            "type" : "boolean",
            "description" : "The noOperation flag value",
            
          },
          "perJobLatestStart" : {
            "type" : "boolean",
            "writeOnly" : true,
            
          }
        },
        
      },
      "JobInPlanCompositeStatusV2" : {
        "type" : "object",
        "properties" : {
          "canceled" : {
            "type" : "boolean",
            
          },
          "status" : {
            "$ref" : "#/components/schemas/JobInPlanStatus"
          },
          "substatus" : {
            "$ref" : "#/components/schemas/JobInPlanSubStatus"
          },
          "error" : {
            "type" : "boolean",
            
          },
          "started" : {
            "type" : "boolean",
            
          },
          "cancelPending" : {
            "type" : "boolean",
            
          },
          "dontRun" : {
            "type" : "boolean",
            
          }
        },
        
      },
      "WorkstationFlagEnum" : {
        "type" : "string",
        
        "enum" : [ "AUTO_LINK", "DISABLED_DEACTIVE_JOB_LAUNCHING_FLAG", "FULL_STATUS", "MAILMAN", "BEHIND_FIREWALL", "TCP_IP_LINK" ]
      },
      "PlanFilterCountV2" : {
        "type" : "object",
        "properties" : {
          "groupingFilters" : {
            "type" : "string",
            "description" : "(optional) Ordered comma-separated fields (one or more between workstation, status, folder) to count for each group.",
            
          }
        },
        
      },
      "IdentityType" : {
        "type" : "string",
        
        "enum" : [ "USER", "GROUP" ]
      },
      "PaginatedResponseV219" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/WorkstationInPlanV2"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "QueryResponseV2" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "type" : "object",
              
            }
          }
        },
        
      },
      "PaginatedResponseV218" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ResourceInPlanV2"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "PaginatedResponseV217" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/JobStreamInPlanV2"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "ConditionsStats" : {
        "type" : "object",
        "properties" : { },
        
      },
      "JsonNodeType" : {
        "type" : "string",
        
        "enum" : [ "ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING" ]
      },
      "TimeInfoV2" : {
        "type" : "object",
        "properties" : {
          "estimatedDuration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "actualStartTime" : {
            "type" : "string",
            "description" : "The time the flow node started. This is the Real Start Time. This Time plus the Real Duration (elapsedTime) gives the finish time.",
            "format" : "date-time",
            
          },
          "elapsedTime" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "actualEndTime" : {
            "type" : "string",
            "description" : "The Time this Flow Node Ended. This is the Real End Time.",
            "format" : "date-time",
            
          }
        },
        
      },
      "DeleteResponseV2" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items deleted.",
            "format" : "int64",
            
          }
        },
        
      },
      "Resource" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the workstation where this resource is defined. In input at least one between workstationId and workstation must be specified.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "In input at least one between workstationId and workstation must be specified, workstation is ignored when workstationId is specified.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "dbaId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the dba containing this resource.",
            
          },
          "quantity" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The quantity of the Resource.",
            "format" : "int32",
            
          }
        },
        "description" : "A resource identifies a textual message that is displayed to the operator and halts processing of the job or job stream until an answer is received.",
        
      },
      "AuthenticationProviderConfig" : {
        "type" : "object",
        "properties" : {
          "authenticationInfo" : {
            "$ref" : "#/components/schemas/AuthenticationInfoV2"
          },
          "authenticationProviderEnabled" : {
            "type" : "boolean",
            "description" : "The status of the authentication provider configuration.",
            
          },
          "cliTimeout" : {
            "type" : "integer",
            "description" : "The OCLI timeout in seconds.",
            "format" : "int64",
            
          },
          "apiKeyManualCreationUrl" : {
            "type" : "string",
            "description" : "The URL to manually create a new API Key.",
            
          },
          "externalNginxUrl" : {
            "type" : "string",
            "description" : "The URL to list and download executables",
            
          }
        },
        
      },
      "EventSourceStatus" : {
        "type" : "string",
        
        "enum" : [ "ONLINE", "OFFLINE" ]
      },
      "JobDefInfo" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The job definition description",
            
          }
        },
        "description" : "The JobDefInfo payload response",
        
      },
      "ExecutorCommandV2" : {
        "required" : [ "command", "executorId", "workstation" ],
        "type" : "object",
        "properties" : {
          "executorId" : {
            "type" : "string",
            "description" : "The id of the plugin that will handle the command.",
            
          },
          "command" : {
            "type" : "string",
            "description" : "The command to be executed on the executor.",
            
          },
          "workstation" : {
            "type" : "string",
            "description" : "The workstation where the command will be executed.",
            
          },
          "parameters" : {
            "type" : "string",
            "description" : "Json string containing the key-value pairs coming from the task. One between parameters and task must be provided.",
            
          },
          "task" : {
            "type" : "object",
            "description" : "Json containing the task. If parameters are not directly provided, they are extracted from the task. One between parameters and task must be provided.",
            
          }
        },
        
      },
      "LockDataV2" : {
        "type" : "object",
        "properties" : {
          "lockedBy" : {
            "type" : "string",
            "description" : "The name of the user who holds the lock.",
            "readOnly" : true,
            
          },
          "lockedSession" : {
            "type" : "string",
            "description" : "The session of the user who holds the lock.",
            "readOnly" : true,
            
          },
          "lockedTime" : {
            "$ref" : "#/components/schemas/Instant"
          }
        },
        
      },
      "JoinCondition" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the object.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Specify the name of the join condition.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the join condition.",
            
          },
          "howMany" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Specify the the number of the predecessor dependencies that must be satisfied to fulfill the join dependency. If no value is specified, all the predecessor dependencies must be satisfied.",
            "format" : "int32",
            
          },
          "externalPredecessors" : {
            "type" : "array",
            "description" : "Dependencies on other job streams, or on jobs in other job streams.",
            
            "items" : {
              "$ref" : "#/components/schemas/ExternalPredecessor"
            }
          },
          "internalPredecessors" : {
            "type" : "array",
            "writeOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/InternalPredecessor"
            }
          }
        },
        "description" : "A dependencies on a set of predecessors that could be only partially satisfied.",
        
      },
      "RunCycleGroup" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the run cycle group.",
            
          },
          "subsets" : {
            "type" : "array",
            "description" : "List of run cycle subsets.",
            
            "items" : {
              "$ref" : "#/components/schemas/Subset"
            }
          },
          "freeDaysCalendar" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of a calendar used to specify non-working days.",
            
          },
          "saturdayIsFree" : {
            "type" : "boolean",
            "description" : "True is Saturdays are non-working days. By default, Saturdays are considered as non-working days.",
            
          },
          "sundayIsFree" : {
            "type" : "boolean",
            "description" : "True is Sundays are non-working days. By default, Sundays are considered as non-working days.",
            
          },
          "calendarId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of a calendar.",
            
          },
          "variableTableId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of a variable table containing this variable. In input at least one between variableTableId and variableTable must be specified.",
            
          },
          "variableTable" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of a variable table containing this variable. In input at least one between variableTableId and variableTable must be specified, variableTable is ignored when variableTableId is specified.",
            
          },
          "timeZone" : {
            "type" : "string",
            
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "startDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days from the specified start time of the run cycle group.",
            "format" : "int32",
            
          },
          "asap" : {
            "type" : "boolean",
            "description" : "Select a variable table. For job stream instance variable resolution, the system checks variable tables in this order: run cycle, run cycle group, job stream, workstation, default.",
            
          },
          "latestStartTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "latestStartDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the latest start time of the run cycle group.",
            "format" : "int32",
            
          },
          "perJobLatestStart" : {
            "type" : "boolean",
            "description" : "If true, the latest start time is checked for each job in the job stream, if false no further check is done after the first job is submitted. Only for inclusive run cycles.",
            
          },
          "lateStartAction" : {
            "$ref" : "#/components/schemas/LateStartAction"
          },
          "deadlineTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "deadlineDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the deadline time of the run cycle group.",
            "format" : "int32",
            
          }
        },
        "description" : "A run cycle group is a database object within which one or more run cycles are defined.",
        
      },
      "SubmitOptionsV2" : {
        "type" : "object",
        "properties" : {
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "The variables used by the object.",
            
          },
          "inputArrivalTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "variableTableId" : {
            "type" : "string",
            "description" : "The identifier of the variable table referenced by the object.",
            
          },
          "variableTableKey" : {
            "type" : "string",
            "description" : "The key of the variable table referenced by the object. Used as an alternative of the identifier.",
            
          },
          "alias" : {
            "type" : "string",
            "description" : "The alias of the object.",
            
          },
          "priority" : {
            "type" : "integer",
            "description" : "The priority of the flow node.",
            "format" : "int32",
            
          },
          "monitored" : {
            "type" : "boolean",
            "description" : "Flag to monitor a flow node.",
            
          },
          "earliestDate" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "latestStart" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "lateStartAction" : {
            "$ref" : "#/components/schemas/LateStartAction"
          },
          "deadlineTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "dependencies" : {
            "type" : "array",
            "description" : "The list of dependencies in plan of the flow node. If the object is the result of a query, the list is not filled.",
            
            "items" : {
              "$ref" : "#/components/schemas/DependencyInPlanV2"
            }
          }
        },
        
      },
      "LateAction" : {
        "type" : "string",
        "description" : "Action to take on the job when the deadline is expired.",
        
        "enum" : [ "continue", "kill" ]
      },
      "AuthenticationInfoV2" : {
        "type" : "object",
        "properties" : {
          "authenticationUrl" : {
            "type" : "string",
            "description" : "The URL where the user can be authenticated.",
            
          },
          "message" : {
            "type" : "string",
            "description" : "The message that explains how to get authentication.",
            
          }
        },
        
      },
      "JobInPlanSubStatus" : {
        "type" : "string",
        
        "enum" : [ "HOLD_WAITING_FOR_PREDECESSOR", "HOLD_UNEXPECTED_PREDECESSOR_CONDITION", "HOLD_WAITING_FOR_TIME", "HOLD_WAITING_FOR_PROMPT", "HOLD_WAITING_FOR_FILE", "HOLD_WAITING_FOR_INPUT", "HOLD_PRIORITY_ZERO", "READY_WAITING_FOR_RESOURCES", "READY_SUPPRESSED", "SUPPR_UNSATISFIED_DEPENDENCY", "SUPPR_WORKSTATION_IGNORED", "READY_SUBMITTED", "READY_WAITING_FOR_LIMIT", "READY_WAITING_FOR_AGENT", "READY_WAITING_FOR_USER_INTERVENTION", "SUCC_DO_NOT_RUN", "SUCC_COMPLETED" ]
      },
      "RadioGroupVariable" : {
        "required" : [ "choices", "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The identifier of the ServiceVariable.",
            
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the self-service variable",
            
            "allOf" : [ {
              "type" : "string",
              "description" : "Type of the specific service variable.",
              
              "enum" : [ "string", "integer", "double", "checkbox", "select", "multiSelect", "radioGroup", "checkboxGroup" ]
            } ],
            "default" : "radioGroup"
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the self-service variable",
            
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the self-service variable",
            
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the self-service variable",
            
          },
          "placeholder" : {
            "type" : "string",
            "description" : "The placeholder of the self-service variable",
            
          },
          "required" : {
            "type" : "boolean",
            "description" : "Specifies if the self-service variable is required",
            
          },
          "choices" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ValueChoice"
            }
          }
        },
        
      },
      "LateStartAction" : {
        "type" : "string",
        "description" : "Action to take when the latestStartTime is expired.",
        
        "enum" : [ "doNotRun", "continue", "cancel" ]
      },
      "PaginatedResponseV212" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectWorkloadApplicationTemplate"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "PaginatedResponseV211" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectVariableTable"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "EventV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of this event.",
            
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this event.",
            
          },
          "eventPlugin" : {
            "type" : "string",
            "description" : "The event plugin of this event.",
            
          },
          "eventType" : {
            "type" : "string",
            "description" : "The event type of this event.",
            
          },
          "eventSourceId" : {
            "type" : "string",
            "description" : "The id of the event source of this event.",
            
          },
          "eventSource" : {
            "type" : "string",
            "description" : "The event source of this event.",
            
          },
          "receivedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope of this event.",
            
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "Received event data.",
            
          },
          "jobStreamsInPlan" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "Lists pairings of job streams in plan and their respective IDs that have been submitted by the reception of this event.",
            
          },
          "triggering" : {
            "type" : "boolean",
            "description" : "Specifies if the event caused the submission of one or more job streams.",
            
          }
        },
        
      },
      "JobStream" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "abstractId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id representing all versions of this object, regardless the validity range.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "workstationId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the workstation where this object is defined. In input at least one between workstationId and workstation must be specified.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Specify the path of the workstation where this item is defined. In input at least one between workstationId and workstation must be specified, workstation is ignored when workstationId is specified.",
            
          },
          "validFrom" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "validTo" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "timeZone" : {
            "type" : "string",
            "description" : "Select the time zone for the job stream. If no time zone is specified, the job stream uses the time zone set on the workstation where the job stream is defined.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "documentation" : {
            "type" : "string",
            "description" : "You can use this space to write comprehensive information about the item, such as its function, expected outcomes, and troubleshooting details. You can toggle \"Preview\" to see the formatted version of your documentation.",
            
          },
          "options" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Select options for the job stream definition. Draft job streams are excluded from dependency checks and the production plan. Carry forward job streams continue to the next plan if they do not complete before the end of the current production plan.",
            
            "items" : {
              "$ref" : "#/components/schemas/JobStreamOption"
            }
          },
          "service" : {
            "$ref" : "#/components/schemas/ServiceInfo"
          },
          "variableTableId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of a variable table used by default by the job stream.",
            
          },
          "variableTable" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Select a variable table. When resolving variables for a job stream instance generated by a run cycle, the system checks the following variable tables in this sequence: the variable table defined at run cycle level, the variable table defined at run cycle group level, the variable table defined at job stream level, the variable table defined at workstation level, the default variable table In input variableTable is ignored when variableTableId is specified.",
            
          },
          "freeDaysCalendarId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of a calendar used to specify free days.",
            
          },
          "freeDaysCalendar" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "Specify the path of the calendar within which non-working days are specified. In input freeDaysCalendar is ignored when freeDaysCalendarId is specified.",
            
          },
          "saturdayIsFree" : {
            "type" : "boolean",
            "description" : "Enable this option to treat Saturdays as non-working days in addition to any non-working days already specified in a provided calendar.",
            
          },
          "sundayIsFree" : {
            "type" : "boolean",
            "description" : "Enable this option to treat Sundays as non-working days in addition to any non-working days already specified in a provided calendar.",
            
          },
          "runCycles" : {
            "type" : "array",
            "description" : "List of run cycles, defining the rules to schedule the job stream. Not required if the job stream is only submitted by events, apis, command line, or from UI.",
            
            "items" : {
              "$ref" : "#/components/schemas/RunCycle"
            }
          },
          "exclusiveRunCycles" : {
            "type" : "array",
            "description" : "List of exclusive run cycles, defining exception rules to not schedule the job stream even if selected by a regular run cycle.",
            
            "items" : {
              "$ref" : "#/components/schemas/ExclusiveRunCycle"
            }
          },
          "startCondition" : {
            "$ref" : "#/components/schemas/StartCondition"
          },
          "priority" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Specify the priority value that defines the job stream instance submission order.",
            "format" : "int32",
            
          },
          "limit" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Specify the maximum number of jobs in job stream that can run at the same time.",
            "format" : "int32",
            
          },
          "onOverlap" : {
            "$ref" : "#/components/schemas/OnOverlap"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "startDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days from the specified start time of the job stream.",
            "format" : "int32",
            
          },
          "asap" : {
            "type" : "boolean",
            "description" : "Selecting this option causes job stream instances to start as soon as their dependencies are resolved, regardless of the defined start time.",
            
          },
          "latestStartTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "latestStartDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the latest start time of the job stream.",
            "format" : "int32",
            
          },
          "perJobLatestStart" : {
            "type" : "boolean",
            "description" : "Select this option to apply the job stream latest start time to its job instances. Job instances cannot run after their latest start time, and are put in SUPPRESS.",
            
          },
          "lateStartAction" : {
            "$ref" : "#/components/schemas/LateStartAction"
          },
          "deadlineTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "deadlineDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the deadline time of the job stream.",
            "format" : "int32",
            
          },
          "matchingCriteria" : {
            "$ref" : "#/components/schemas/MatchingCriteriaInterval"
          },
          "externalPredecessors" : {
            "type" : "array",
            "description" : "Dependencies on other job streams, or on jobs in other job streams.",
            
            "items" : {
              "$ref" : "#/components/schemas/ExternalPredecessor"
            }
          },
          "joinConditions" : {
            "type" : "array",
            "description" : "Dependencies on sets of predecessors that could be only partially satisfied.",
            
            "items" : {
              "$ref" : "#/components/schemas/JoinCondition"
            }
          },
          "interNetworkDependencies" : {
            "type" : "array",
            "description" : "Dependencies on remote systems via an X-AGENT.",
            
            "items" : {
              "$ref" : "#/components/schemas/InterNetworkDependency"
            }
          },
          "promptDependencies" : {
            "type" : "array",
            "description" : "Prompts that need to be replied before the job stream is launched.",
            
            "items" : {
              "$ref" : "#/components/schemas/PromptDependency"
            }
          },
          "fileDependencies" : {
            "type" : "array",
            "description" : "Files that are checked before the job stream is launched.",
            
            "items" : {
              "$ref" : "#/components/schemas/FileDependency"
            }
          },
          "resourceDependencies" : {
            "type" : "array",
            "description" : "Resources allocated while the job stream is running.",
            
            "items" : {
              "$ref" : "#/components/schemas/ResourceDependency"
            }
          },
          "jobs" : {
            "type" : "array",
            "description" : "Jobs are the nodes of the steam that are running a task in the workflow.",
            
            "items" : {
              "$ref" : "#/components/schemas/Job"
            }
          },
          "disableSubmission" : {
            "type" : "boolean",
            
          }
        },
        "description" : "A job stream defines the list of jobs to run, together with dependencies and constrains, and if scheduled with a list of run cycles that defines the scheduling rules.",
        
      },
      "PaginatedResponseV210" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectVariable"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "PaginatedResponseV216" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/JobInPlanV2"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "PaginatedResponseV215" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectBasicInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "PaginatedResponseV214" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectWorkstation"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "PaginatedResponseV213" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The total number of items found.",
            "format" : "int64",
            
          },
          "results" : {
            "type" : "array",
            "description" : "The list of items found.",
            
            "items" : {
              "$ref" : "#/components/schemas/ModelObjectWorkstationClass"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URL to next page of results",
            
          },
          "previous" : {
            "type" : "string",
            "description" : "URL to the previous page of results.",
            
          }
        },
        
      },
      "SkipLateAction" : {
        "type" : "string",
        "description" : "Action to take on the job when the scheduled run is delayed.",
        
        "enum" : [ "overlap", "immediate", "none" ]
      },
      "PromptStatusType" : {
        "type" : "string",
        
        "enum" : [ "NOT_ASKED", "ASKED", "ANSWERED_YES", "ANSWERED_NO" ]
      },
      "Variable" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The item identifier.",
            
          },
          "variableTableId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of a variable table containing this variable. In input at least one between variableTableId and variableTable must be specified.",
            
          },
          "variableTable" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of a variable table containing this variable. In input at least one between variableTableId and variableTable must be specified, variableTable is ignored when variableTableId is specified.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the item.",
            
          },
          "value" : {
            "type" : "string",
            "description" : "The variable value.",
            
          },
          "folderId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the folder where a definition is. In input at least one between folderId and folder must be specified.",
            "writeOnly" : true,
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The full path of the folder where this definition is saved. In input at least one between folderId and folder must be specified. Folder is ignored if folderId is specified.",
            "writeOnly" : true,
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            "writeOnly" : true,
            
          }
        },
        "description" : "It's a pseudo object used to retrieve and update variable in variable tables without having to retrieve, edit and update the whole table.",
        
      },
      "JobStreamDescriptionInfo" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "object",
          
        },
        
      },
      "RequirementOS" : {
        "type" : "string",
        "description" : "Operating systems that the workstation must support.",
        
        "enum" : [ "AIX", "HPUX", "LINUX", "SOLARIS", "WINDOWS", "ZOS", "IBMI" ]
      },
      "PromptStatus" : {
        "type" : "string",
        
        "enum" : [ "NOT_ASKED", "ASKED", "ANSWERED_YES", "ANSWERED_NO" ]
      },
      "ApiKeyCreationRequest" : {
        "required" : [ "label", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/ApiKeyType"
          },
          "label" : {
            "maxLength" : 50,
            "minLength" : 3,
            "type" : "string",
            "description" : "The name that uniquely identifies the API Key",
            
          },
          "groups" : {
            "type" : "array",
            "description" : "The list of groups mapped to this API Key - Valid only for service API Keys",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        
      },
      "ModelObjectAccessControlList" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/AccessControlList"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "RunCycle" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The run cycle identifier.",
            
          },
          "name" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The run cycle name.",
            
          },
          "description" : {
            "type" : "string",
            "description" : "You can use this space to add brief context and information about the item.",
            
          },
          "validFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "validTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "type" : {
            "$ref" : "#/components/schemas/RunCycleType"
          },
          "freeDaysRule" : {
            "$ref" : "#/components/schemas/FreeDaysRule"
          },
          "dates" : {
            "type" : "array",
            "description" : "For SIMPLE run cycles, a list of dates.",
            
            "items" : {
              "type" : "string",
              "format" : "date",
              
            }
          },
          "expression" : {
            "type" : "string",
            "description" : "For RRULE run cycles, an iCalendar RRule expression. For CRON run cycles, a UNIX or Quartz cron expression. For SIMPLE run cycles, a comma separated list of dates.",
            
          },
          "calendarId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For CALENDAR run cycles, the ID of the calendar that contains the list of days.",
            
          },
          "calendar" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For CALENDAR run cycles, the folder path of the calendar that contains the list of days. In input, calendar is ignored when calendarId is specified.",
            
          },
          "runCycleGroupId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "For GROUP run cycles, the ID of the run cycle group generating the job stream instances.",
            
          },
          "runCycleGroup" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "For GROUP run cycles, the folder path of the run cycle group generating the job stream instances. In input, calendar is ignored when runCycleGroupId is specified.",
            
          },
          "offset" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "For GROUP and CALENDAR run cycles, the number of days before or after a defined day in the specified run cycle group or calendar.",
            "format" : "int32",
            
          },
          "offsetUnit" : {
            "$ref" : "#/components/schemas/OffsetUnit"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "startDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the start time.",
            "format" : "int32",
            
          },
          "repeatInterval" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "repeatEndTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "repeatEndDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the repeat end time.",
            "format" : "int32",
            
          },
          "variableTableId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of a variable table used by the scheduled instances generated by this run cycle. Only for inclusive run cycles.",
            
          },
          "variableTable" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The path of a variable table used by the scheduled instances generated by this run cycle. Only for inclusive run cycles. In input variableTable is ignored when variableTableId is specified.",
            
          },
          "asap" : {
            "type" : "boolean",
            "description" : "True if the job stream has to start as soon as dependencies are resolved, without waiting for start time. Only for inclusive run cycles.",
            
          },
          "latestStartTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "latestStartDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the latest start time of the job stream.",
            "format" : "int32",
            
          },
          "perJobLatestStart" : {
            "type" : "boolean",
            "description" : "If true, the latest start time is checked for each job in the job stream, if false no further check is done after the first job is submitted. Only for inclusive run cycles.",
            
          },
          "lateStartAction" : {
            "$ref" : "#/components/schemas/LateStartAction"
          },
          "deadlineTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "deadlineDays" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "An offset in days for the deadline time.",
            "format" : "int32",
            
          }
        },
        "description" : "A RunCycle defines the rules to generate (or suppress) scheduled instances of a Job Stream.",
        
      },
      "JobOption" : {
        "type" : "string",
        
        "enum" : [ "nop", "confirmed", "critical", "monitored", "advanced_stats" ]
      },
      "OperatorType" : {
        "type" : "string",
        
        "enum" : [ "GT", "GE", "EQ", "LE", "LT", "NE", "RANGE", "JSONATA", "KEY_VALUE" ]
      },
      "LicenseType" : {
        "type" : "string",
        
        "enum" : [ "perServer", "perJob" ]
      },
      "WorkspaceWorkflowsV2" : {
        "type" : "object",
        "properties" : {
          "workflows" : {
            "type" : "array",
            
            "items" : {
              "required" : [ "def" ],
              "type" : "object",
              "properties" : {
                "kind" : {
                  "$ref" : "#/components/schemas/ModelObjectKind"
                },
                "key" : {
                  "type" : "string",
                  "description" : "Full key of the object",
                  "readOnly" : true,
                  
                },
                "def" : {
                  "$ref" : "#/components/schemas/JobStream"
                },
                "status" : {
                  "$ref" : "#/components/schemas/Status1"
                },
                "actions" : {
                  "type" : "array",
                  "readOnly" : true,
                  
                  "items" : {
                    "$ref" : "#/components/schemas/ActionV2"
                  }
                }
              },
              
            }
          }
        },
        
      },
      "ModelObjectVariableTable" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/VariableTable"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "SubmitJobStreamOptionsV2" : {
        "type" : "object",
        "properties" : {
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              
            },
            "description" : "The variables used by the object.",
            
          },
          "inputArrivalTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "variableTableId" : {
            "type" : "string",
            "description" : "The identifier of the variable table referenced by the object.",
            
          },
          "variableTableKey" : {
            "type" : "string",
            "description" : "The key of the variable table referenced by the object. Used as an alternative of the identifier.",
            
          },
          "alias" : {
            "type" : "string",
            "description" : "The alias of the object.",
            
          },
          "priority" : {
            "type" : "integer",
            "description" : "The priority of the flow node.",
            "format" : "int32",
            
          },
          "monitored" : {
            "type" : "boolean",
            "description" : "Flag to monitor a flow node.",
            
          },
          "earliestDate" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "latestStart" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "lateStartAction" : {
            "$ref" : "#/components/schemas/LateStartAction"
          },
          "deadlineTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "dependencies" : {
            "type" : "array",
            "description" : "The list of dependencies in plan of the flow node. If the object is the result of a query, the list is not filled.",
            
            "items" : {
              "$ref" : "#/components/schemas/DependencyInPlanV2"
            }
          },
          "carryForward" : {
            "type" : "boolean",
            "description" : "If set, the job stream has to be carried forward.",
            
          },
          "limit" : {
            "maximum" : 0,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The limit of the job stream. Valid values between -1 (NO_LIMIT) and 1024. The default value is NO_LIMIT.",
            "format" : "int32",
            
          },
          "applyUntilToEachJob" : {
            "type" : "boolean",
            
          }
        },
        
      },
      "SuccessorsInfo" : {
        "type" : "object",
        "properties" : {
          "depth" : {
            "type" : "integer",
            "description" : "Specifies how many level to consider for successors. Mutually exclusive with successorsIds parameter",
            "format" : "int32",
            
          },
          "successorsIds" : {
            "type" : "array",
            "description" : "Specifies specific successors to rerun. Mutually exclusive with depth parameter",
            
            "items" : {
              "type" : "string",
              
            }
          }
        },
        
      },
      "FlowNodeInPlanV2" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          },
          "engineId" : {
            "type" : "string",
            "description" : "The identifier of the engine.",
            "readOnly" : true,
            
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the object.",
            "readOnly" : true,
            
          },
          "persistentId" : {
            "type" : "string",
            "description" : "The persistent unique identifier of the object.",
            "readOnly" : true,
            
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the key",
            
          },
          "folder" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The key of the Folder referenced by the Workstation, Job or Jobstream In Plan",
            
          },
          "folderId" : {
            "type" : "string",
            "description" : "The identifier of the referenced folder.",
            
          },
          "archived" : {
            "type" : "boolean",
            "description" : "The flag to indicate if the object is archived.",
            
          },
          "workstationId" : {
            "type" : "string",
            "description" : "The identifier of the referenced workstation.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "A reference to the Workstation where the flow node in plan is contained",
            
          },
          "schedTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "flowNodeType" : {
            "$ref" : "#/components/schemas/FlowNodeType"
          },
          "priority" : {
            "type" : "integer",
            "description" : "The priority of the flow node.",
            "format" : "int32",
            
          },
          "origPriority" : {
            "type" : "integer",
            "description" : "The original priority of the flow node.",
            "format" : "int32",
            
          },
          "cpuTime" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "timeZone" : {
            "type" : "string",
            "description" : "The time zone of the flow node.",
            
          },
          "dependencies" : {
            "type" : "array",
            "description" : "The list of DependencyInPlan of the flow node. If this object is the result of a query, this list is not filled.",
            
            "items" : {
              "$ref" : "#/components/schemas/DependencyInPlanV2"
            }
          },
          "timeRestrictions" : {
            "$ref" : "#/components/schemas/TimeRestrictionsInPlanV2"
          },
          "dependenciesStats" : {
            "$ref" : "#/components/schemas/DependenciesStatsV2"
          },
          "planId" : {
            "type" : "string",
            "description" : "The database identifier of the plan.",
            
          },
          "cpuFolderId" : {
            "type" : "string",
            "description" : "The identifier of the referenced folder.",
            
          }
        },
        
        "oneOf" : [ {
          "$ref" : "#/components/schemas/JobInPlanV2"
        }, {
          "$ref" : "#/components/schemas/JobStreamInPlanV2"
        } ]
      },
      "ModelObjectBasicInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            
          },
          "abstractId" : {
            "type" : "string",
            
          },
          "key" : {
            "type" : "string",
            
          },
          "description" : {
            "type" : "string",
            
          },
          "kind" : {
            "type" : "string",
            
          },
          "type" : {
            "type" : "string",
            
          },
          "subType" : {
            "type" : "string",
            
          },
          "permissions" : {
            "uniqueItems" : true,
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/UserPermission"
            }
          }
        },
        
      },
      "JobStreamOperationResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the job stream model",
            
          },
          "key" : {
            "type" : "string",
            "description" : "Key of the created job stream.",
            
          },
          "status" : {
            "$ref" : "#/components/schemas/ResultStatus"
          },
          "messages" : {
            "type" : "array",
            "description" : "Error messages if failed",
            
            "items" : {
              "type" : "string",
              
            }
          },
          "instanceId" : {
            "type" : "string",
            "description" : "In submission scenario, instance id of the job stream in plan",
            
          }
        },
        
      },
      "InternalPredecessor" : {
        "type" : "object",
        "properties" : {
          "jobId" : {
            "pattern" : "(\\w{8,8}-)(\\w{4,4}-){3,3}(\\w{12,12})",
            "type" : "string",
            "description" : "The id of the predecessor.",
            
          },
          "jobName" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The name of the predecessor. This value is mandatory only if you are defining an internal predecessor. In any other case, the value is optional.",
            
          },
          "outputConditions" : {
            "type" : "array",
            "description" : "The list of output conditions of the predecessor that satisfy the dependency. The output conditions list can only be specified if the predecessor is a job. It is not possible to specify both outputConditions and statusConditions.",
            
            "items" : {
              "type" : "string",
              
            }
          },
          "statusConditions" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of statuses of the predecessor that satisfy the dependency. If the STARTED status is specified, it is not possible to specify any other status. It is not possible to specify both outputConditions and statusConditions.",
            
            "items" : {
              "$ref" : "#/components/schemas/TargetStatus"
            }
          }
        },
        "description" : "A dependency on a job in the same job stream.",
        
      },
      "ACLType" : {
        "type" : "string",
        
        "enum" : [ "DOMAIN", "FOLDER", "ADMIN" ]
      },
      "FileInPlanV2" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the file in the plan.",
            
          },
          "id" : {
            "type" : "string",
            "description" : "The identifier of the file.",
            
          },
          "workstation" : {
            "pattern" : ".*",
            "type" : "string",
            "description" : "The Workstation Key",
            
          },
          "workstationId" : {
            "type" : "string",
            "description" : "The identifier of the workstation.",
            
          },
          "planId" : {
            "type" : "string",
            "description" : "The identifier of the plan.",
            
          },
          "resourceModelId" : {
            "type" : "string",
            "description" : "The identifier of the file model.",
            
          },
          "qualifier" : {
            "type" : "string",
            "description" : "The qualifiers of the file.",
            
          },
          "status" : {
            "$ref" : "#/components/schemas/FileStatusType"
          },
          "cpuFolderId" : {
            "type" : "string",
            "description" : "The identifier of the referenced folder.",
            
          },
          "modifyData" : {
            "$ref" : "#/components/schemas/ModifyDataV2"
          }
        },
        
      },
      "EngineInfoV2" : {
        "type" : "object",
        "properties" : {
          "displayVersion" : {
            "type" : "string",
            
          },
          "fullVersion" : {
            "type" : "string",
            
          },
          "capabilities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                
              },
              
            },
            
          },
          "adminRoles" : {
            "$ref" : "#/components/schemas/AdminRolesV2"
          },
          "referenceId" : {
            "type" : "string",
            
          },
          "licenseType" : {
            "type" : "string",
            
          },
          "locale" : {
            "type" : "string",
            
          },
          "timezone" : {
            "type" : "string",
            
          }
        },
        
      },
      "ModelObjectFolder" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/Folder"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "ActionMetadataV2" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            
          },
          "label" : {
            "type" : "string",
            
          },
          "payloadTemplate" : {
            "type" : "object",
            
          },
          "httpMethod" : {
            "$ref" : "#/components/schemas/HttpMethod"
          },
          "parametricUrl" : {
            "type" : "string",
            
          },
          "queryParameters" : {
            "type" : "object",
            
          },
          "subActions" : {
            "type" : "array",
            
            "items" : {
              "$ref" : "#/components/schemas/ActionMetadataV2"
            }
          },
          "parametricQueryParameters" : {
            "type" : "object",
            
          }
        },
        
      },
      "DependenciesInfoV2" : {
        "type" : "object",
        "properties" : {
          "dependencies" : {
            "type" : "array",
            "description" : "The list of <b>FlowNodeDependencyInPlan</b> of the job. If the object is the result of a query, this list is not filled.",
            
            "items" : {
              "$ref" : "#/components/schemas/DependencyInPlanV2"
            }
          }
        },
        
      },
      "ModelObjectCalendar" : {
        "required" : [ "def" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/ModelObjectKind"
          },
          "key" : {
            "type" : "string",
            "description" : "Full key of the object",
            "readOnly" : true,
            
          },
          "def" : {
            "$ref" : "#/components/schemas/Calendar"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status1"
          },
          "actions" : {
            "type" : "array",
            "readOnly" : true,
            
            "items" : {
              "$ref" : "#/components/schemas/ActionV2"
            }
          }
        },
        
      },
      "StartConditionType" : {
        "type" : "string",
        "description" : "Type of start condition for job streams.",
        
        "enum" : [ "notSpecified", "fileCreated", "fileModified", "job" ]
      },
      "Integrity" : {
        "type" : "string",
        
        "enum" : [ "ok", "invalidSignature", "invalidChain" ]
      }
    },
    "securitySchemes" : {
      "JWT" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "Basic" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  }
}