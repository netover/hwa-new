name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-mock

    - name: Run unit tests
      run: |
        pytest tests/ -v --tb=short

    - name: Run integration tests
      run: |
        pytest tests/test_integration.py -v --tb=short

    - name: Run audit lock tests
      run: |
        pytest tests/test_audit_lock.py -v --tb=short

    - name: Run load tests (with 120s timeout)
      run: |
        pytest tests/load/test_audit_load.py::test_audit_load_test --timeout=120 -v --tb=short
      continue-on-error: false

    - name: Run async cache tests
      run: |
        pytest tests/test_async_cache.py -v --tb=short

    - name: Generate coverage report
      run: |
        pip install coverage
        coverage run -m pytest tests/ --tb=short
        coverage report -m

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort mypy

    - name: Run Black formatter check
      run: |
        black --check --diff resync/ tests/ scripts/

    - name: Run Flake8 linting
      run: |
        flake8 resync/ tests/ scripts/ --max-line-length=100 --extend-ignore=E203,W503

    - name: Run isort import sorting check
      run: |
        isort --check-only --diff resync/ tests/ scripts/

    - name: Run MyPy type checking
      run: |
        mypy resync/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit security scan
      run: |
        bandit -r resync/ -f json -o bandit-report.json || true
        bandit -r resync/

    - name: Run Safety dependency check
      run: |
        safety check

    - name: Upload Bandit report
      uses: actions/upload-artifact@v3
      with:
        name: bandit-report
        path: bandit-report.json

  docker:
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t resync-app:latest .

    - name: Test Docker image
      run: |
        docker run --rm resync-app:latest python -c "import resync; print('Docker build successful')"

  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint, security, docker]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here
        # e.g., docker push, kubectl apply, etc.