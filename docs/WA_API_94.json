{
  "swagger": "2.0",
  "info": {
    "description": "IBM Workload Automation REST API\n",
    "version": "1.0.0",
    "title": "IBM Workload Automation API"
  },
  "basePath": "/twsd",
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic",
      "description": "HTTP Basic Authentication. Works over `HTTPS`"
    }
  },
  "paths": {
    "/eventrule/engine/actionrun/header/query": {
      "post": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for ActionRun",
        "description": "Perform a event rule engine query to retrieve ActionRun in their \"header\" shape.",
        "operationId": "queryActionRunHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on ActionRun",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterEventRuleEngine"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "ActionRun Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionRunHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/actionrun/header/query_next": {
      "post": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for ActionRun",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextActionRunHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryEventRuleEngineContext"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "ActionRun Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionRunHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/actionrun/{actionRunId}": {
      "get": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for ActionRun",
        "description": "Perform a model get to retrieve an ActionRun object, by its identifier, in its \"object\" shape.",
        "operationId": "getActionRunById",
        "parameters": [
          {
            "in": "path",
            "name": "actionRunId",
            "description": "ActionRun Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "ActionRun responses",
            "schema": {
              "$ref": "#/definitions/ActionRun"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/actionrun": {
      "get": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for ActionRun in an EventRule",
        "description": "Returns all the ActionRun, inside the model, used by the EventRule identified by the given Identifier",
        "operationId": "makeActionRun",
        "parameters": [
          {
            "in": "query",
            "name": "eventRuleId",
            "description": "EventRule Id that needs to be searched",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "ActionRun Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionRunHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/actionrun/action/run": {
      "post": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "POST operation for run a List of ActionRun",
        "description": "Runs the specified ActionRun(s).",
        "operationId": "runActions",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The List of ActionRun to execute",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionRun"
              }
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/eventrule/engine/audit_record/header/query": {
      "post": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for AuditRecord",
        "description": "Perform a event rule engine query to retrieve AuditRecord in their \"header\" shape.",
        "operationId": "queryAuditRecordHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on AuditRecord",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterEventRuleEngine"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "AuditRecord Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AuditRecordHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/audit_record/header/query_next": {
      "post": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for AuditRecord",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextAuditRecordHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryEventRuleEngineContext"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "AuditRecord Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AuditRecordHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/audit_record/{auditRecordId}": {
      "get": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for AuditRecord",
        "description": "Perform a model get to retrieve an AuditRecord object,  by its identifier, in its \"object\" shape.",
        "operationId": "getAuditRecordById",
        "parameters": [
          {
            "in": "path",
            "name": "auditRecordId",
            "description": "auditrecord Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "AuditRecord responses",
            "schema": {
              "$ref": "#/definitions/AuditRecord"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/deployment/rule_builder/start": {
      "put": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "START operation for the event builder",
        "description": "Perform a start operation for the event builder",
        "operationId": "startEventBuilder",
        "parameters": [
          {
            "$ref": "#/parameters/language"
          }
        ],
        "responses": {
          "204": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/eventrule/deployment/rule_builder/stop": {
      "put": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "STOP operation for the event builder",
        "description": "Perform a stop operation for the event builder",
        "operationId": "stopEventBuilder",
        "parameters": [
          {
            "$ref": "#/parameters/language"
          }
        ],
        "responses": {
          "204": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/eventrule/deployment/active_rules": {
      "get": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for the Active Rules",
        "description": "Retrieve information about the active rules",
        "operationId": "activeRules",
        "parameters": [
          {
            "in": "query",
            "name": "scratch",
            "description": "The option to recreate the xml file",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "WarningMessagesInfo responses",
            "schema": {
              "$ref": "#/definitions/WarningMessagesInfo"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              }
            }
          }
        }
      }
    },
    "/model/eventrule": {
      "post": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Add operation for EventRule",
        "description": "Returns the identifier of the added object.",
        "operationId": "addEventRule",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The EventRule object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventRule"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load Information without using the cache 1=Load Information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for EventRule using a TWSKey",
        "description": "Perform a model get to retrieve, by its name, an EventRule object in its 'object' shape.",
        "operationId": "getEventRuleByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "EventRule responses",
            "schema": {
              "$ref": "#/definitions/EventRule"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load Information without using the cache 1=Load Information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for EventRule using a TWSKey",
        "description": "Remove, by its name, an EventRule object.",
        "operationId": "removeEventRuleByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the EventRule to remove.",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/eventrule/header/query": {
      "post": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for EventRule",
        "description": "Perform a model query to retrieve EventRule in their \"header\" shape.",
        "operationId": "queryEventRuleHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on EventRule",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "EventRule Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventRuleHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/eventrule/header/query_next": {
      "post": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for EventRule",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextEventRuleHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryModelContext"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "EventRule Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventRuleHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/eventrule/action/lock": {
      "put": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for EventRule using a TWSKey",
        "description": "Locks an EventRule by name, checking that the object is not locked by any user.",
        "operationId": "lockEventRuleByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the EventRule to lock",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/eventrule/action/unlock": {
      "put": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for EventRule using a TWSKey",
        "description": "Unlocks an EventRule by name, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockEventRuleByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the EventRule to be unlocked.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/eventrule/{eventruleId}": {
      "get": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for EventRule using a TWSId",
        "description": "Perform a model get to retrieve an EventRule object, by its identifier, in its \"object\" shape.",
        "operationId": "getEventRuleById",
        "parameters": [
          {
            "in": "path",
            "name": "eventruleId",
            "description": "eventrule Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "EventRule responses",
            "schema": {
              "$ref": "#/definitions/EventRule"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load Information without using the cache 1=Load Information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for EventRule using a TWSId",
        "description": "Update an EventRule object.",
        "operationId": "updateEventRule",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "eventruleId",
            "description": "EventRule Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update Calendar Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventRule"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load Information without using the cache 1=Load Information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for EventRule using a TWSId",
        "description": "Remove an EventRule object, by its identifier.",
        "operationId": "removeEventRuleById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "eventruleId",
            "description": "EventRule Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/eventrule/{eventruleId}/action/lock": {
      "put": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for EventRule using a TWSId",
        "description": "Locks an EventRule by identifier, checking that the object is not locked by any user.",
        "operationId": "lockEventRuleById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "eventruleId",
            "description": "EventRule Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/eventrule/{eventruleId}/action/unlock": {
      "put": {
        "tags": [
          "eventrule",
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for EventRule using a TWSId",
        "description": "Unlocks an EventRule by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockEventRuleById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "eventruleId",
            "description": "EventRule Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/eventrule/engine/messagelog/header/query": {
      "post": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for MessageLogRecord",
        "description": "Perform a event rule engine query to retrieve MessageLogRecord in their \"header\" shape.",
        "operationId": "queryMessageLogRecordHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on MessageLogRecord",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterEventRuleEngine"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "MessageLogRecord Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageLogRecordHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/messagelog/header/query_next": {
      "post": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for MessageLogRecord",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextMessageLogRecordHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryEventRuleEngineContext"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "MessageLogRecord Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageLogRecordHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/messagelog/{messageLogRecordId}": {
      "get": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for MessageLogRecord",
        "description": "Perform a model get to retrieve a MessageLogRecord object, by its identifier, in its \"object\" shape.",
        "operationId": "getMessageLogRecordById",
        "parameters": [
          {
            "in": "path",
            "name": "messageLogRecordId",
            "description": "MessageLogRecord Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "MessageLogRecord  responses",
            "schema": {
              "$ref": "#/definitions/MessageLogRecord"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/action_plugin_configuration": {
      "get": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Action Plugin Configuration",
        "description": "Gets the XML file with the possible attributes regarding each Action.",
        "operationId": "getActionPluginConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain responses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/event_plugin_configuration": {
      "get": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Event Plugin Configuration",
        "description": "Gets the XML file with the possible attributes regarding each Event.",
        "operationId": "getEventPluginConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain responses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/rule_instance/header/query": {
      "post": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for RuleInstance",
        "description": "Perform a event rule engine query to retrieve RuleInstance in their \"header\" shape.",
        "operationId": "queryRuleInstanceHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on RuleInstance",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterEventRuleEngine"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "RuleInstance Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleInstanceHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/rule_instance/header/query_next": {
      "post": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for RuleInstance",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextRuleInstanceHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryEventRuleEngineContext"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "RuleInstance Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleInstanceHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/eventrule/engine/rule_instance/{ruleInstanceId}": {
      "get": {
        "tags": [
          "eventrule"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for RuleInstance",
        "description": "Perform a model get to retrieve a RuleInstance object, by its identifier, in its \"object\" shape.",
        "operationId": "getRuleInstanceById",
        "parameters": [
          {
            "in": "path",
            "name": "ruleInstanceId",
            "description": "RuleInstance Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "RuleInstance responses",
            "schema": {
              "$ref": "#/definitions/RuleInstance"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/access_control_list": {
      "post": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for AccessControlList",
        "description": "Returns the identifier of the added object.",
        "operationId": "createAccessControlList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The AccessControlList object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for AccessControlList using a TWSKey",
        "description": "Perform a model get to retrieve, by its name or key, a AccessControlList object in its 'object' shape.",
        "operationId": "loadAccessControlListByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "AccessControlList response",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for AccessControlList using a TWSKey",
        "description": "Remove, by its name or key, a AccessControlList object.",
        "operationId": "deleteAccessControlListByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/access_control_list/header/query": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for AccessControlList",
        "description": "Perform a model query to retrieve AccessControlLists.",
        "operationId": "queryAccessControlList",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "user",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "role",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "domain",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "AccessControlList List responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessControlList"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/access_control_list/key/query": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for AccessControlList keys",
        "description": "Perform a model query to retrieve AccessControlList keys.",
        "operationId": "listKeysAccessControlList",
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "description": "A composer type query string for key (@ can be used as wildcard)",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "AccessControlList List responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityKey"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/access_control_list/header/query_next": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for AccessControlList",
        "description": "Returns a list of objects according to the query params. This method should be used only for subsequent calls not for the first one. For the first call use the method query.",
        "operationId": "querynextAccessControlList",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "user",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "role",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "domain",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "AccessControlList List responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessControlList"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/access_control_list/action/lock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for AccessControlList using a TWSKey",
        "description": "Locks a AccessControlList by name, checking that the object is not locked by any user.",
        "operationId": "lockAccessControlListByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/access_control_list/action/unlock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for AccessControlList using a TWSKey",
        "description": "Unlocks a AccessControlList by name, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockAccessControlListByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/access_control_list/action/rename": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "RENAME operation for AccessControlList using its name",
        "description": "Renames an AccessControlList by its key, checking that it is currently locked by the requesting user and session.",
        "operationId": "renameAccessControlList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "newName",
            "description": "The new name for the AccessControlList.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/access_control_list/{accessControlListId}": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for AccessControlList using a TWSId",
        "description": "Perform a model get to retrieve by its identifier a AccessControlList object in its \"object\" shape.",
        "operationId": "loadAccessControlListById",
        "parameters": [
          {
            "in": "path",
            "name": "accessControlListId",
            "description": "AccessControlList Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "AccessControlList response",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for AccessControlList using a TWSId",
        "description": "Update a AccessControlList object.",
        "operationId": "updateAccessControlList",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accessControlListId",
            "description": "AccessControlList Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update AccessControlList Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for AccessControlList using a TWSId",
        "description": "Remove, by its identifier, a AccessControlList object.",
        "operationId": "deleteAccessControlListById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accessControlListId",
            "description": "AccessControlList Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/access_control_list/{accessControlListId}/action/lock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for AccessControlList using a TWSId",
        "description": "Locks a AccessControlList by identifier, checking that the object is not locked by any user.",
        "operationId": "lockAccessControlListById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accessControlListId",
            "description": "AccessControlList Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/access_control_list/{accessControlListId}/action/unlock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for AccessControlList using a TWSId",
        "description": "Unlocks a AccessControlList by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockAccessControlListById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accessControlListId",
            "description": "AccessControlList Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/calendar": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Calendar",
        "description": "Returns the identifier of the added object.",
        "operationId": "addCalendar",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The Calendar object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Calendar using a TWSKey",
        "description": "Perform a model get to retrieve, by its name, a Calendar object in its 'object' shape.",
        "operationId": "getCalendarByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Calendar"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Calendar using a TWSKey",
        "description": "Remove, by its name, a Calendar object.",
        "operationId": "removeCalendarByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/calendar/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Calendar",
        "description": "Perform a model query to retrieve Calendars in their \"header\" shape.",
        "operationId": "queryCalendarHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Calendar",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CalendarHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/calendar/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Calendar",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextCalendarHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CalendarHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/calendar/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Calendar using a TWSKey",
        "description": "Locks a calendar by name, checking that the object is not locked by any user.",
        "operationId": "lockCalendarByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Calendar to lock",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/calendar/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Calendar using a TWSKey",
        "description": "Unlocks a calendar by name, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockCalendarByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the calendar to be unlocked.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/calendar/{calendarId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Calendar using a TWSId",
        "description": "Perform a model get to retrieve by its identifier a Calendar object in its \"object\" shape.",
        "operationId": "getCalendarById",
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "calendar Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Calendar"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Calendar using a TWSId",
        "description": "Update a Calendar object.",
        "operationId": "updateCalendar",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "calendar Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update Calendar Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Calendar using a TWSId",
        "description": "Remove, by its identifier, a Calendar object.",
        "operationId": "removeCalendarById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "Calendar Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/calendar/{calendarId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Calendar using a TWSId",
        "description": "Locks a calendar by identifier, checking that the object is not locked by any user.",
        "operationId": "lockCalendarById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "calendar Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/calendar/{calendarId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Calendar using a TWSId",
        "description": "Unlocks a calendar by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockCalendarById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "calendar Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/domain": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Domain",
        "description": "Returns the identifier of the added object.",
        "operationId": "addDomain",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The Domain object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Domain using a TWSKey",
        "description": "Perform a model get to retrieve, by its name, a Domain object in its 'object' shape.",
        "operationId": "getDomainByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain responses",
            "schema": {
              "$ref": "#/definitions/Domain"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "summary": "DELETE operation for Domain using a TWSKey",
        "description": "Remove, by its name, a Domain object.",
        "operationId": "removeDomainByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Domain to remove.",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/domain/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Domain",
        "description": "Perform a model query to retrieve Domains in their \"header\" shape.",
        "operationId": "queryDomainHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Domain",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Domain"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/domain/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Domain",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextDomainHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Domain"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/domain/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Domain using a TWSKey",
        "description": "Locks a domain by name, checking that the object is not locked by any user.",
        "operationId": "lockDomainByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Domain to lock",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/domain/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Domain using a TWSKey",
        "description": "Unlocks a Domain by name, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockDomainByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the domain to be unlocked.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/domain/{domainId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Domain using a TWSId",
        "description": "Perform a model get to retrieve ,by its identifier, a Domain object in its 'object' shape.",
        "operationId": "getDomainById",
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "description": "domain Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain responses",
            "schema": {
              "$ref": "#/definitions/Domain"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Domain using a TWSId",
        "description": "Update a Domain object.",
        "operationId": "updateDomain",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "description": "domain Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update Domain Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Domain using a TWSId",
        "description": "Remove, by its identifier, a Domain object.",
        "operationId": "removeDomainById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "description": "Domain Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/domain/{domainId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Domain using a TWSId",
        "description": "Locks a Domain by identifier, checking that the object is not locked by any user.",
        "operationId": "lockDomainById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "description": "domain Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/domain/{domainId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Domain using a TWSId",
        "description": "Unlocks a domain by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockDomainById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "description": "domain Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/folder": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Folders",
        "description": "Adds a new folder in the database",
        "operationId": "addFolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "folder",
            "description": "The Folder object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Folder using a TWSKey",
        "description": "Perform a model get to retrieve, by its TWSKey, a Folder object in its 'object' shape.",
        "operationId": "getFolderByKey",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder responses",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Folder using a TWSKey",
        "description": "Remove, by its TWSKey, a Folder object.",
        "operationId": "removeFolderByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/folder/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Folder",
        "description": "Perform a model query to retrieve Folders in their \"header\" shape.",
        "operationId": "queryFolderHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Folder",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Definition Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Folder"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/folder/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Folder",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextFolderHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Definition Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Folder"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/folder/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Folder using a TWSKey",
        "description": "Locks a Folder object by external key, checking that the object is not locked by any user.",
        "operationId": "lockFolderByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/folder/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Folder using a TWSKey",
        "description": "Unlocks a Folder object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockFolderByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/folder/{folderId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Folder using a TWSId",
        "description": "Perform a model get to retrieve, by its identifier, a Folder object in its 'object' shape.",
        "operationId": "getFolderById",
        "parameters": [
          {
            "in": "path",
            "name": "folderId",
            "description": "folderId Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Folder responses",
            "schema": {
              "$ref": "#/definitions/Folder"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Folder using a TWSId",
        "description": "Update a Folder object.",
        "operationId": "updateFolder",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folderId",
            "description": "folderId Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update Folder Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Folder using a TWSId",
        "description": "Remove, by its identifier, a Folder object.",
        "operationId": "removeFolderById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folderId",
            "description": "Folder Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/folder/{folderId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Folder using a TWSId",
        "description": "Locks a Folder object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockFolderById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folderId",
            "description": "folderId Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/folder/{folderId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Folder using a TWSId",
        "description": "Unlocks a Folder object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockFolderById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folderId",
            "description": "folderId Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobdefinition": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Job Definitions",
        "description": "Adds a new job definition in the database",
        "operationId": "addJobDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "jobDefinition",
            "description": "The JobDefinition objct to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Job Definition using a TWSKey",
        "description": "Perform a model get to retrieve, by its TWSKey, a Job Definition object in its 'object' shape.",
        "operationId": "getJobDefinitionByKey",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "JobDefinition responses",
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Job Definition using a TWSKey",
        "description": "Remove, by its TWSKey, a Job Definition object.",
        "operationId": "removeJobDefinitionByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobdefinition/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Job Definition",
        "description": "Perform a model query to retrieve Job Definitions in their \"header\" shape.",
        "operationId": "queryJobDefinitionHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Job Definition",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Definition Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobDefinitionHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/jobdefinition/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Job Definition",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextJobDefinitionHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Definition Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobDefinitionHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/jobdefinition/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Job Definition using a TWSKey",
        "description": "Locks a JobDefinition object by external key, checking that the object is not locked by any user.",
        "operationId": "lockJobDefinitionByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobdefinition/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Job Definition using a TWSKey",
        "description": "Unlocks a JobDefinition object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockJobDefinitionByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobdefinition/{jobdefinitionId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Job Definition using a TWSId",
        "description": "Perform a model get to retrieve, by its identifier, a Job Definition object in its 'object' shape.",
        "operationId": "getJobDefinitionById",
        "parameters": [
          {
            "in": "path",
            "name": "jobdefinitionId",
            "description": "jobdefinitionId Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "JobDefinition responses",
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Job Definition using a TWSId",
        "description": "Update a Job Definition object.",
        "operationId": "updateJobDefinition",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobdefinitionId",
            "description": "jobdefinitionId Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update Job Definition Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Job Definition using a TWSId",
        "description": "Remove, by its identifier, a Job Definition object.",
        "operationId": "removeJobDefinitionById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobdefinitionId",
            "description": "Job Definition Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobdefinition/{jobdefinitionId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Job Definition using a TWSId",
        "description": "Locks a JobDefinition object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockJobDefinitionById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobdefinitionId",
            "description": "jobdefinitionId Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobdefinition/{jobdefinitionId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Job Definition using a TWSId",
        "description": "Unlocks a JobDefinition object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockJobDefinitionById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobdefinitionId",
            "description": "jobdefinitionId Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobdetailedstatistic": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for JobDetailedStatistic",
        "description": "Returns the identifier of the added object.",
        "operationId": "addJobDetailedStatistic",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The JobDetailedStatistic object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDetailedStatistic"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/jobdetailedstatistic/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for JobDetailedStatistics",
        "description": "Perform a model query to retrieve JobDetailedStatistics in their 'object' shape.",
        "operationId": "queryJobDetailedStatistics",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on JobDetailedStatistics",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "JobDetailedStatistics responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobDetailedStatistic"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/jobdetailedstatistic/{jobdetailedstatisticid}": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for JobDetailedStatistic Object using a TWSId",
        "description": "Update a JobDetailedStatistics object.",
        "operationId": "updateJobDetailedStatistic",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobdetailedstatisticid",
            "description": "jobdetailedstatistic Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The JobDetailedStatistic object to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDetailedStatistic"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/jobhistoryrun/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Job History Run",
        "description": "Perform a model query to retrieve Job History Run.",
        "operationId": "queryJobHistoryRun",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Job History Run",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Job History Run responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobHistoryRun"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/jobstatistics/{jobId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for JobStatistics using a TWSId",
        "description": "Perform a model get to retrieve, by job identifier, a JobStatistics object in its 'object' shape.",
        "operationId": "getJobStatisticsById",
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "JobStatistics responses",
            "schema": {
              "$ref": "#/definitions/JobStatistics"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/jobstatistics": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for JobStatistics using a TWSKey",
        "description": "Perform a model get to retrieve, by Job TWSKey, a JobStatistics object in its 'object' shape.",
        "operationId": "getJobStatisticsByKey",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "JobStatistics responses",
            "schema": {
              "$ref": "#/definitions/JobStatistics"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/jobstream": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for JobStream",
        "description": "Returns the identifier of the added object.",
        "operationId": "addJobStream",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The JobStream object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobStream"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for JobStream using a TWSKey",
        "description": "Perform a model get to retrieve, by its TWSKey, a JobStream object in its 'object' shape.",
        "operationId": "getJobStreamByKey",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Alphanumeric characters. Starting with alphabetic character. '-' and '_' characters allowed. Blank spaces not allowed. Maximum length 16 characters",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "validFrom",
            "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. It must be GMT midnight, but the meaning is 'start of day'. Values stored on the database are truncated to GMT midnight",
            "type": "string",
            "format": "date-time",
            "required": false
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "JobStream responses",
            "schema": {
              "$ref": "#/definitions/JobStream"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for JobStream using a TWSKey",
        "description": "Remove, by its TWSKey, a JobStream object.",
        "operationId": "removeJobStreamByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Alphanumeric characters. Starting with alphabetic character. '-' and '_' characters allowed. Blank spaces not allowed. Maximum length 16 characters",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "validFrom",
            "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. It must be GMT midnight, but the meaning is 'start of day'. Values stored on the database are truncated to GMT midnight",
            "type": "string",
            "format": "date-time",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobstream/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for JobStream",
        "description": "Perform a model query to retrieve JobStreams in their \"header\" shape.",
        "operationId": "queryJobStreamHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on JobStream",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobStreamHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/jobstream/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for JobStream",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextJobStreamHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobStreamHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/jobstream/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for JobStream using a TWSKey",
        "description": "Locks a JobStream object by external key, checking that the object is not locked by any user.",
        "operationId": "lockJobStreamByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Alphanumeric characters. Starting with alphabetic character. '-' and '_' characters allowed. Blank spaces not allowed. Maximum length 16 characters",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "validFrom",
            "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. It must be GMT midnight, but the meaning is 'start of day'. Values stored on the database are truncated to GMT midnight",
            "type": "string",
            "format": "date-time",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobstream/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for JobStream using a TWSKey",
        "description": "Unlocks a JobStream object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockJobStreamByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Alphanumeric characters. Starting with alphabetic character. '-' and '_' characters allowed. Blank spaces not allowed. Maximum length 16 characters",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "validFrom",
            "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. It must be GMT midnight, but the meaning is 'start of day'. Values stored on the database are truncated to GMT midnight",
            "type": "string",
            "format": "date-time",
            "required": false
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobstream/{jobstreamId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for JobStream using a TWSId",
        "description": "Perform a model get to retrieve, by its identifier, a JobStream object in its 'object' shape.",
        "operationId": "getJobStreamById",
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "JobStream responses",
            "schema": {
              "$ref": "#/definitions/JobStream"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE action for JobStream using a TWSId",
        "description": "Update a JobStream object.",
        "operationId": "updateJobStream",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update JobStream Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobStream"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE action for JobStream using a TWSId",
        "description": "Remove, by its identifier, a JobStream object.",
        "operationId": "removeJobStreamById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobstream/{jobstreamId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for JobStream using a TWSId",
        "description": "Locks a JobStream object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockJobStreamById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/jobstream/{jobstreamId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for JobStream using a TWSId",
        "description": "Unlocks a JobStream object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockJobStreamById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id that needs to be unlocked",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/properties": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET all Model property",
        "description": "Returns all Model properties",
        "operationId": "getAllModelProperties",
        "parameters": [
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "list of key value objects",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StringMapObj"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/model/properties/{propertyName}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET Model property",
        "description": "Returns the requested Model property",
        "operationId": "getModelProperty",
        "parameters": [
          {
            "in": "path",
            "name": "propertyName",
            "description": "the property that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Prompt responses",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/prompt": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Prompt",
        "description": "Returns the identifier of the added object.",
        "operationId": "addPrompt",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The Prompt object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Prompt"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Prompt using a TWSKey",
        "description": "Perform a model get to retrieve, by its name, a Prompt object in its 'object' shape.",
        "operationId": "getPromptByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Prompt to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Prompt responses",
            "schema": {
              "$ref": "#/definitions/Prompt"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Prompt using a TWSKey",
        "description": "Remove, by its name, a Prompt object.",
        "operationId": "removePromptByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Prompt to remove.",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/prompt/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Prompt",
        "description": "Perform a model query to retrieve Prompts in their 'header' shape.",
        "operationId": "queryPromptHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Prompt",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Prompt responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Prompt"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/prompt/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Prompt",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextPromptHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Prompt responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Prompt"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/prompt/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Prompt using a TWSKey",
        "description": "Locks a Prompt object by external key, checking that the object is not locked by any user.",
        "operationId": "lockPromptByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Prompt to lock",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/prompt/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Prompt using a TWSKey",
        "description": "Unlocks a Prompt object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockPromptByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Info of the Prompt to retrieve",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/prompt/{promptId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Prompt using a TWSId",
        "description": "Perform a model get to retrieve, by its identifier, a Prompt object in its 'object' shape.",
        "operationId": "getPromptById",
        "parameters": [
          {
            "in": "path",
            "name": "promptId",
            "description": "prompt Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Prompt responses",
            "schema": {
              "$ref": "#/definitions/Prompt"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Prompt Object using a TWSId",
        "description": "Update a Prompt object.",
        "operationId": "updatePrompt",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "promptId",
            "description": "prompt Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Prompt to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Prompt"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Prompt using a TWSId",
        "description": "Remove, by its identifier, a Prompt object.",
        "operationId": "removePromptById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "promptId",
            "description": "Prompt Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/prompt/{promptId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Prompt using a TWSId",
        "description": "Locks a Prompt object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockPromptById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "promptId",
            "description": "prompt Id that needs to be unlocked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/prompt/{promptId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Prompt using a TWSId",
        "description": "Unlocks a Prompt object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockPromptById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "promptId",
            "description": "prompt Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/resource": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Resource",
        "description": "Returns the identifier of the added object.",
        "operationId": "addResource",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The Resource object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Resource using a TWSKey",
        "description": "Perform a model get to retrieve, by its TWSKey, a Resource object in its 'object' shape.",
        "operationId": "getResourceByKey",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Resource to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "The workstationName of the Resource to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Resource using a TWSKey",
        "description": "Remove, by its TWSKey, a Resource object.",
        "operationId": "removeResourceByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Resource to remove",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "The workstationName of the Resource to remove",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/resource/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Resource",
        "description": "Perform a model query to retrieve Resources in their \"header\" shape.",
        "operationId": "queryResourceHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Resource",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/resource/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Resource",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextResourceHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/resource/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Resource using a TWSKey",
        "description": "Locks a Resource object by external key, checking that the object is not locked by any user.",
        "operationId": "lockResourceByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Resource to lock",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "The workstationName of the Resource to lock",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/resource/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Resource using a TWSKey",
        "description": "Unlocks a Resource object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockResourceByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Resource to unlock",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "The workstationName of the Resource to lock",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/resource/{resourceId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Resource using a TWSId",
        "description": "Perform a model get to retrieve, by its identifier, a Resource object in its 'object' shape.",
        "operationId": "getResourceById",
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "description": "resource Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Resource using a TWSId",
        "description": "Update a Resource object.",
        "operationId": "updateResource",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "description": "resource Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Resource using a TWSId",
        "description": "Remove, by its identifier, a Resource object.",
        "operationId": "removeResourceById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "description": "Resource Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/resource/{resourceId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Resource using a TWSId",
        "description": "Locks a Resource object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockResourceById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "description": "resource Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/resource/{resourceId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Resource using a TWSId",
        "description": "Unlocks a Resource object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockResourceById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "description": "resource Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/runcyclegroup": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for RunCycleGroup",
        "description": "Returns the identifier of the added object.",
        "operationId": "addRunCycleGroup",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The RunCycleGroup object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunCycleGroup"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for RunCycleGroup using a TWSKey",
        "description": "Perform a model get to retrieve, by its name, a RunCycleGroup object in its 'object' shape.",
        "operationId": "getRunCycleGroupByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the RunCycleGroup to retrieve.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "RunCycleGroup responses",
            "schema": {
              "$ref": "#/definitions/RunCycleGroup"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for RunCycleGroup using a TWSKey",
        "description": "Remove, by its name, a RunCycleGroup object.",
        "operationId": "removeRunCycleGroupByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the RunCycleGroup to remove.",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/runcyclegroup/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for RunCycleGroup",
        "description": "Perform a model query to retrieve RunCycleGroups in their \"header\" shape.",
        "operationId": "queryRunCycleGroupHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on RunCycleGroup",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "RunCycleGroup Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RunCycleGroupHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/runcyclegroup/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for RunCycleGroup",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextRunCycleGroupHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "RunCycleGroup Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RunCycleGroupHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/runcyclegroup/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for RunCycleGroup using a TWSKey",
        "description": "Locks a RunCycleGroup object by external key, checking that the object is not locked by any user.",
        "operationId": "lockRunCycleGroupByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "name of RunCycleGroup to lock",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/runcyclegroup/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for RunCycleGroup using a TWSKey",
        "description": "Unlocks a RunCycleGroup object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockRunCycleGroupByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the RunCycleGroup to be unlocked.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/runcyclegroup/{runcyclegroupId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for RunCycleGroup using a TWSId",
        "description": "Perform a model get to retrieve, by its identifier, a RunCycleGroup object in its 'object' shape.",
        "operationId": "getRunCycleGroupById",
        "parameters": [
          {
            "in": "path",
            "name": "runcyclegroupId",
            "description": "runcyclegroup Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "RunCycleGroup responses",
            "schema": {
              "$ref": "#/definitions/RunCycleGroup"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for RunCycleGroup using a TWSId",
        "description": "Update a RunCycleGroup object.",
        "operationId": "updateRunCycleGroup",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "runcyclegroupId",
            "description": "runcyclegroup Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "RunCycleGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunCycleGroup"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for RunCycleGroup using a TWSId",
        "description": "Remove, by its identifier, a RunCycleGroup object.",
        "operationId": "removeRunCycleGroupById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "runcyclegroupId",
            "description": "RunCycleGroup Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/runcyclegroup/{runcyclegroupId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for RunCycleGroup using a TWSId",
        "description": "Locks a RunCycleGroup object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockRunCycleGroupById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "runcyclegroupId",
            "description": "runcyclegroup Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/runcyclegroup/{runcyclegroupId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for RunCycleGroup using a TWSId",
        "description": "Unlocks a RunCycleGroup object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockRunCycleGroupById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "runcyclegroupId",
            "description": "runcyclegroup Id that needs to be unlocked",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_domain": {
      "post": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for SecurityDomain",
        "description": "Returns the identifier of the added object.",
        "operationId": "createSecurityDomain",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The SecurityDomain object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityDomain"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for SecurityDomain using a TWSKey",
        "description": "Perform a model get to retrieve, by its name or key, a SecurityDomain object in its 'object' shape.",
        "operationId": "loadSecurityDomainByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "SecurityDomain response",
            "schema": {
              "$ref": "#/definitions/SecurityDomain"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for SecurityDomain using a TWSKey",
        "description": "Remove, by its name or key, a SecurityDomain object.",
        "operationId": "deleteSecurityDomainByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_domain/header/query": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for SecurityDomain",
        "description": "Perform a model query to retrieve SecurityDomains.",
        "operationId": "querySecurityDomain",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "description",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "SecurityDomain List responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityDomain"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/security_domain/key/query": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for SecurityDomain keys",
        "description": "Perform a model query to retrieve SecurityDomain keys.",
        "operationId": "listKeysSecurityDomain",
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "description": "A composer type query string for key (@ can be used as wildcard)",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "AccessControlList List responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityKey"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/security_domain/header/query_next": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for SecurityDomain",
        "description": "Returns a list of objects according to the query params. This method should be used only for subsequent calls not for the first one. For the first call use the method query.",
        "operationId": "querynextSecurityDomain",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "description",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "SecurityDomain List responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityDomain"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/security_domain/action/lock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for SecurityDomain using a TWSKey",
        "description": "Locks a SecurityDomain by name, checking that the object is not locked by any user.",
        "operationId": "lockSecurityDomainByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_domain/action/unlock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for SecurityDomain using a TWSKey",
        "description": "Unlocks a SecurityDomain by name, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockSecurityDomainByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_domain/action/rename": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "RENAME operation for SecurityDomain using its name",
        "description": "Renames an SecurityDomain by its key, checking that it is currently locked by the requesting user and session.",
        "operationId": "renameSecurityDomain",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "newName",
            "description": "The new name for the SecurityDomain.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/security_domain/{securityDomainId}": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for SecurityDomain using a TWSId",
        "description": "Perform a model get to retrieve by its identifier a SecurityDomain object in its \"object\" shape.",
        "operationId": "loadSecurityDomainById",
        "parameters": [
          {
            "in": "path",
            "name": "securityDomainId",
            "description": "SecurityDomain Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "SecurityDomain response",
            "schema": {
              "$ref": "#/definitions/SecurityDomain"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for SecurityDomain using a TWSId",
        "description": "Update a SecurityDomain object.",
        "operationId": "updateSecurityDomain",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "securityDomainId",
            "description": "SecurityDomain Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update SecurityDomain Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityDomain"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for SecurityDomain using a TWSId",
        "description": "Remove, by its identifier, a SecurityDomain object.",
        "operationId": "deleteSecurityDomainById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "securityDomainId",
            "description": "SecurityDomain Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_domain/{securityDomainId}/action/lock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for SecurityDomain using a TWSId",
        "description": "Locks a SecurityDomain by identifier, checking that the object is not locked by any user.",
        "operationId": "lockSecurityDomainById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "securityDomainId",
            "description": "SecurityDomain Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_domain/{securityDomainId}/action/unlock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for SecurityDomain using a TWSId",
        "description": "Unlocks a SecurityDomain by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockSecurityDomainById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "securityDomainId",
            "description": "SecurityDomain Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_role": {
      "post": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for SecurityRole",
        "description": "Returns the identifier of the added object.",
        "operationId": "createSecurityRole",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The SecurityRole object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityRole"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for SecurityRole using a TWSKey",
        "description": "Perform a model get to retrieve, by its name or key, a SecurityRole object in its 'object' shape.",
        "operationId": "loadSecurityRoleByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "SecurityRole response",
            "schema": {
              "$ref": "#/definitions/SecurityRole"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for SecurityRole using a TWSKey",
        "description": "Remove, by its name or key, a SecurityRole object.",
        "operationId": "deleteSecurityRoleByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_role/header/query": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for SecurityRole",
        "description": "Perform a model query to retrieve SecurityRoles.",
        "operationId": "querySecurityRole",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "description",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "SecurityRole List responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityRole"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/security_role/key/query": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for SecurityRole keys",
        "description": "Perform a model query to retrieve SecurityRole keys.",
        "operationId": "listKeysSecurityRole",
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "description": "A composer type query string for key (@ can be used as wildcard)",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "AccessControlList List responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityKey"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/security_role/header/query_next": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for SecurityRole",
        "description": "Returns a list of objects according to the query params. This method should be used only for subsequent calls not for the first one. For the first call use the method query.",
        "operationId": "querynextSecurityRole",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "description",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "SecurityRole List responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityRole"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/security_role/action/lock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for SecurityRole using a TWSKey",
        "description": "Locks a SecurityRole by name, checking that the object is not locked by any user.",
        "operationId": "lockSecurityRoleByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_role/action/unlock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for SecurityRole using a TWSKey",
        "description": "Unlocks a SecurityRole by name, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockSecurityRoleByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_role/action/rename": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "RENAME operation for SecurityRole using its name",
        "description": "Renames an SecurityRole by its key, checking that it is currently locked by the requesting user and session.",
        "operationId": "renameSecurityRole",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Mutual exclusive with the \"key\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Mutual exclusive with the \"name\" query parameter. One of the two is required.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "newName",
            "description": "The new name for the SecurityRole.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/security_role/{securityDomainId}": {
      "get": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for SecurityRole using a TWSId",
        "description": "Perform a model get to retrieve by its identifier a SecurityRole object in its \"object\" shape.",
        "operationId": "loadSecurityRoleById",
        "parameters": [
          {
            "in": "path",
            "name": "securityDomainId",
            "description": "SecurityRole Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "SecurityRole response",
            "schema": {
              "$ref": "#/definitions/SecurityRole"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for SecurityRole using a TWSId",
        "description": "Update a SecurityRole object.",
        "operationId": "updateSecurityRole",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "securityDomainId",
            "description": "SecurityRole Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update SecurityRole Info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityRole"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for SecurityRole using a TWSId",
        "description": "Remove, by its identifier, a SecurityRole object.",
        "operationId": "deleteSecurityRoleById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "securityDomainId",
            "description": "SecurityRole Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_role/{securityDomainId}/action/lock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for SecurityRole using a TWSId",
        "description": "Locks a SecurityRole by identifier, checking that the object is not locked by any user.",
        "operationId": "lockSecurityRoleById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "securityDomainId",
            "description": "SecurityRole Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/security_role/{securityDomainId}/action/unlock": {
      "put": {
        "tags": [
          "model",
          "security"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for SecurityRole using a TWSId",
        "description": "Unlocks a SecurityRole by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockSecurityRoleById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "securityDomainId",
            "description": "SecurityRole Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variabletable": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Variable Table",
        "description": "Returns the identifier of the added object.",
        "operationId": "addVariableTable",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The VariableTable object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VariableTable"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Variable Table using a TWSKey",
        "description": "Perform a model get to retrieve, by its name, a Variable Table object in its 'object' shape.",
        "operationId": "getVariableTableByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Variable Table to retrieve.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Variable Table responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariableTable"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Variable Table using a TWSKey",
        "description": "Remove, by its name, a Variable Table object.",
        "operationId": "removeVariableTableByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Variable Table to remove.",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variabletable/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Variable Table",
        "description": "Perform a model query to retrieve Variable Table in their \"header\" shape.",
        "operationId": "queryVariableTableHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Variable Table",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Variable Table Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariableTableHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/variabletable/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Variable Table",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextVariableTableHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Variable Table Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariableTableHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/variabletable/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Variable Table using a TWSKey",
        "description": "Locks a VariableTable object by external key, checking that the object is not locked by any user.",
        "operationId": "lockVariableTableByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Variable Table to lock",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variabletable/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Variable Table using a TWSKey",
        "description": "Unlocks a VariableTable object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockVariableTableByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Variable Table to unlock",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variabletable/{variableTableId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Variable Table using a TWSId",
        "description": "Perform a model get to retrieve by its identifier a Variable Table object in its \"object\" shape.",
        "operationId": "getVariableTableById",
        "parameters": [
          {
            "in": "path",
            "name": "variableTableId",
            "description": "variable Table Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Variable Table responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariableTable"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Variable Table using a TWSId",
        "description": "Update a Variable Table object.",
        "operationId": "updateVariableTable",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "variableTableId",
            "description": "variable Table Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Variable Table to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VariableTable"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Variable Table using a TWSId",
        "description": "Remove, by its identifier, a Variable Table object.",
        "operationId": "removeVariableTableById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "variableTableId",
            "description": "variable Table Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variabletable/{variableTableId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Variable Table using a TWSId",
        "description": "Locks a VariableTable object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockVariableTableById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "variableTableId",
            "description": "variable Table Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variabletable/{variableTableId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Variable Table using a TWSId",
        "description": "Unlocks a VariableTable object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockVariableTableById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "variableTableId",
            "description": "variable Table Id that needs to be unlocked",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variable": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Variable",
        "description": "Returns the identifier of the added object.",
        "operationId": "addVariable",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The Variable object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Variable"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Variable using a TWSKey",
        "description": "Perform a model get to retrieve, by its TWSKey, a Variable object in its 'object' shape.",
        "operationId": "getVariableByKey",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Variable to retrieve.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "variableTableName",
            "description": "Name of the VariableTable that contains the Variable to retrieve.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Variable responses",
            "schema": {
              "$ref": "#/definitions/Variable"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Variable using a TWSKey",
        "description": "Remove, by its TWSKey, a Variable object.",
        "operationId": "removeVariableByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Variable to remove",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "variableTableName",
            "description": "The name of the VariableTable that contains the Variable to delete",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variable/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Variable",
        "description": "Perform a model query to retrieve Variable in their \"header\" shape.",
        "operationId": "queryVariableHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Variable",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Variable responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/variable/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Variable",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextVariableHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Variable responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/variable/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Variable using a TWSKey",
        "description": "Locks a Variable object by external key, checking that the object is not locked by any user.",
        "operationId": "lockVariableByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Variable to lock",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "variableTableName",
            "description": "The name of the VariableTable that contains the Variable to lock",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variable/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Variable using a TWSKey",
        "description": "Unlocks a Variable object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockVariableByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Variable to unlock",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "variableTableName",
            "description": "The name of the VariableTable that contains the Variable to lock",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variable/{variableId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Variable using a TWSId",
        "description": "Perform a model get to retrieve, by its identifier, a Variable object in its 'object' shape.",
        "operationId": "getVariableById",
        "parameters": [
          {
            "in": "path",
            "name": "variableId",
            "description": "variable Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Variable responses",
            "schema": {
              "$ref": "#/definitions/Variable"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Variable using a TWSId",
        "description": "Update a Variable object.",
        "operationId": "updateVariable",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "variableId",
            "description": "variable Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The variable to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Variable"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Variable using a TWSId",
        "description": "Remove, by its identifier, a Variable object.",
        "operationId": "removeVariableById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "variableId",
            "description": "Variable Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variable/{variableId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Variable using a TWSId",
        "description": "Locks a Variable object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockVariableById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "variableId",
            "description": "variable Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/variable/{variableId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Variable using a TWSId",
        "description": "Unlocks a Variable object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockVariableById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "variableId",
            "description": "variable Id that needs to be unlocked",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/user": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for WindowsUser",
        "description": "Returns the identifier of the added object.",
        "operationId": "addWindowsUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The WindowsUser object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WindowsUser"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for WindowsUser using a TWSKey",
        "description": "Perform a model get to retrieve, by its TWSKey, a WindowsUser object in its 'object' shape. Note that the password property is not retrieved.",
        "operationId": "getWindowsUserByKey",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the WindowsUser to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Required if the WindowsUser to retrieve has workstation",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Windows User responses",
            "schema": {
              "$ref": "#/definitions/WindowsUser"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for WindowsUser using a TWSKey",
        "description": "Remove, by its TWSKey, a WindowsUser object.",
        "operationId": "removeWindowsUserByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the WindowsUser to remove",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Required if the WindowsUser to delete has workstation",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/user/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for WindowsUser",
        "description": "Perform a model query to retrieve WindowsUsers in their \"header\" shape.",
        "operationId": "queryWindowsUserHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on WindowsUser",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Windows User responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WindowsUser"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/user/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for WindowsUser",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextWindowsUserHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Windows User responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WindowsUser"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/user/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for WindowsUser using a TWSKey",
        "description": "Locks a WindowsUser object by external key, checking that the object is not locked by any user.",
        "operationId": "lockWindowsUserByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the WindowsUser to remove",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/user/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for WindowsUser using a TWSKey",
        "description": "Unlocks a WindowsUser object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockWindowsUserByKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the WindowsUser to remove",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workstationName",
            "description": "Must reference an existing workstation or class",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/user/{userId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for WindowsUser using a TWSId",
        "description": "Perform a model get to retrieve, by its identifier, a WindowsUser object in its 'object' shape. Note that the password property is not retrieved.",
        "operationId": "getWindowsUserById",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "WindowsUser Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Windows User responses",
            "schema": {
              "$ref": "#/definitions/WindowsUser"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for WindowsUser using a TWSId",
        "description": "Update a WindowsUser object.",
        "operationId": "updateWindowsUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "WindowsUser Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The WindowsUser to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WindowsUser"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for WindowsUser using a TWSId",
        "description": "Remove, by its identifier, a WindowsUser object.",
        "operationId": "removeWindowsUserById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "WindowsUser Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/user/{userId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for WindowsUser using a TWSId",
        "description": "Locks a WindowsUser object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockWindowsUserById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "WindowsUser Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/user/{userId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for WindowsUser using a TWSId",
        "description": "Unlocks a WindowsUser object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockWindowsUserById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "WindowsUser Id that needs to be unlocked",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application_template": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Workload Application Template",
        "description": "Returns the identifier of the added object.",
        "operationId": "addWorkloadApplicationTemplate",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The WorkloadApplicationTemplate object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadApplicationTemplate"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Workload Application Template using a TWSKey",
        "description": "Perform a model get to retrieve, using a TWSKey, a WorkloadApplicationTemplate object in its 'object' shape.",
        "operationId": "getWorkloadApplicationTemplateByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Workload Application Template to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workload Application Template responses",
            "schema": {
              "$ref": "#/definitions/WorkloadApplicationTemplate"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Workload Application Template using a TWSKey",
        "description": "Remove, using a TWSKey, a WorkloadApplicationTemplate object.",
        "operationId": "removeWorkloadApplicationTemplateByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Workload Application Template to remove.",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application_template/header/queryheader": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Workload Application Template",
        "description": "Perform a model query to retrieve Workload Application Template in their \"header\" shape.",
        "operationId": "queryWorkloadApplicationTemplateHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on WorkloadApplicationTemplate",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Workload Application Template Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkloadApplicationTemplateHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/workload_application_template/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Workload Application Template",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextWorkloadApplicationTemplateHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workload Application Template Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkloadApplicationTemplateHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/workload_application_template/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Workload Application Template using a TWSKey",
        "description": "Locks a workload application template by name, checking that the object is not locked by any user.",
        "operationId": "lockWorkloadApplicationTemplateByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the WorkloadApplicationTemplate to lock",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application_template/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Workload Application Template using a TWSKey",
        "description": "Unlocks a workload application template by name, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockWorkloadApplicationTemplateByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the workload application template to be unlocked.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application_template/{workloadApplicationTemplateId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Workload Application Template using a TWSId",
        "description": "Perform a model get to retrieve using a TWSIdentifier a WorkloadApplicationTemplate object in its \"object\" shape.",
        "operationId": "getWorkloadApplicationTemplateById",
        "parameters": [
          {
            "in": "path",
            "name": "workloadApplicationTemplateId",
            "description": "workload application template Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workload Application Template responses",
            "schema": {
              "$ref": "#/definitions/WorkloadApplicationTemplate"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Workload Application Template using a TWSId",
        "description": "Update a Workload Application Template object.",
        "operationId": "updateWorkloadApplicationTemplate",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadApplicationTemplateId",
            "description": "workload application template Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The WorkloadApplicationTemplate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadApplicationTemplate"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Workload Application Template using a TWSId",
        "description": "Remove, using a TWSIdentifier, a Workload Application Template object.",
        "operationId": "removeWorkloadApplicationTemplateById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadApplicationTemplateId",
            "description": "WorkloadApplicationTemplate Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application_template/{workloadApplicationTemplateId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Workload Application Template using a TWSId",
        "description": "Locks a workload application template by identifier, checking that the object is not locked by any user.",
        "operationId": "lockWorkloadApplicationTemplateById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadApplicationTemplateId",
            "description": "workloadApplicationTemplate Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application_template/{workloadApplicationTemplateId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Workload Application Template using a TWSId",
        "description": "Unlocks a workload application template by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockWorkloadApplicationTemplateById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadApplicationTemplateId",
            "description": "workload application template Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Deploy a Workload Application Template",
        "description": "Returns the name of the Workload Application.",
        "operationId": "deployWorkloadApplicationTemplate",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The DeployWorkloadApplicationTemplate object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeployWorkloadApplicationTemplate"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Prompt responses",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Workload Application using a TWSKey",
        "description": "Perform a model get to retrieve, using a TWSKey, a Workload Application object in its 'object' shape.",
        "operationId": "getWorkloadApplicationByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Workload Application to retrieve",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "WorkloadApplication responses",
            "schema": {
              "$ref": "#/definitions/WorkloadApplication"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for WorkloadApplication using a TWSKey",
        "description": "Remove, using a TWSKey, a WorkloadApplication object.",
        "operationId": "removeWorkloadApplicationByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Workload Application to remove.",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Workload Application",
        "description": "Perform a model query to retrieve Workload Application in their \"header\" shape.",
        "operationId": "queryWorkloadApplicationHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Workload Application",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Workload Application Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkloadApplicationHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/workload_application/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Workload Application",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextWorkloadApplicationHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workload Application Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkloadApplicationHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/workload_application/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for  Workload Application using a TWSKey",
        "description": "Locks a workload application using a TWSKey, checking that the object is not locked by any user.",
        "operationId": "lockWorkloadApplicationByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Workload Application to lock",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Workload Application using a TWSKey",
        "description": "Unlocks a Workload Application using a TWSKey, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockWorkloadApplicationByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the workload application to be unlocked.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application/{workloadapplicationId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Workload Application using a TWSId",
        "description": "Perform a model get to retrieve by its identifier a WorkloadApplication object in its \"object\" shape.",
        "operationId": "getWorkloadApplicationById",
        "parameters": [
          {
            "in": "path",
            "name": "workloadapplicationId",
            "description": "workload application Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "WorkloadApplication responses",
            "schema": {
              "$ref": "#/definitions/WorkloadApplication"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Workload Application using a TWSId",
        "description": "Update a WorkloadApplication object.",
        "operationId": "updateWorkloadApplication",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadapplicationId",
            "description": "workload application Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Workload Application",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadApplication"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Workload Application using a TWSId",
        "description": "Remove, by its identifier, a Workload Application object.",
        "operationId": "removeWorkloadApplicationById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadapplicationId",
            "description": "Workload Application Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application/{workloadapplicationId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Workload Application using a TWSId",
        "description": "Locks a workload application by identifier, checking that the object is not locked by any user.",
        "operationId": "lockWorkloadApplicationById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadapplicationId",
            "description": "the Workload Application Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workload_application/{workloadapplicationId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Workload Application using a TWSId",
        "description": "Unlocks a workload application by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockWorkloadApplicationById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workloadapplicationId",
            "description": "workload application Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstationclass": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Workstation Class",
        "description": "Returns the identifier of the added object.",
        "operationId": "addWorkstationClass",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The WorkstationClass object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkstationClass"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for WorkstationClass using a TWSKey",
        "description": "Perform a model get to retrieve, by its name, a WorkstationClass object in its 'object' shape.",
        "operationId": "getWorkstationClassByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Workstation Class to retrieve.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "WorkstationClass responses",
            "schema": {
              "$ref": "#/definitions/WorkstationClass"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Workstation Class using a TWSKey",
        "description": "Remove, by its name, a Workstation Class object.",
        "operationId": "removeWorkstationClassByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Workstation Class to remove.",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstationclass/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for WorkstationClass",
        "description": "Perform a model query to retrieve WorkstationClass in their \"header\" shape.",
        "operationId": "queryWorkstationClassHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on WorkstationClass",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "WorkstationClassHeader responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkstationClassHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/workstationclass/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for WorkstationClass",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextWorkstationClassHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "WorkstationClassHeader responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkstationClassHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/workstationclass/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for WorkstationClass using a TWSKey",
        "description": "Locks a WorkstationClass object by external key, checking that the object is not locked by any user.",
        "operationId": "lockWorkstationClassByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the WorkstationClass to lock",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstationclass/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for WorkstationClass using a TWSKey",
        "description": "Unlocks a WorkstationClass object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockWorkstationClassByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Workstation Class to unlock",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstationclass/{workstationClassId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for WorkstationClass using a TWSId",
        "description": "Perform a model get to retrieve, by its identifier, a WorkstationClass object in its 'object' shape.",
        "operationId": "getWorkstationClassById",
        "parameters": [
          {
            "in": "path",
            "name": "workstationClassId",
            "description": "WorkstationClass Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "WorkstationClass responses",
            "schema": {
              "$ref": "#/definitions/WorkstationClass"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for WorkstationClass Object using a TWSId",
        "description": "Update a WorkstationClass object.",
        "operationId": "updateWorkstationClass",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationClassId",
            "description": "WorkstationClass Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The WorkstationClass to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkstationClass"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Workstation Class using a TWSId",
        "description": "Remove, by its identifier, a Workstation Class object.",
        "operationId": "removeWorkstationClassById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationClassId",
            "description": "WorkstationClass Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstationclass/{workstationClassId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for WorkstationClass using a TWSId",
        "description": "Locks a WorkstationClass object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockWorkstationClassById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationClassId",
            "description": "WorkstationClass Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstationclass/{workstationClassId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for WorkstationClass using a TWSId",
        "description": "Unlocks a WorkstationClass object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockWorkstationClassById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationClassId",
            "description": "WorkstationClass Id that needs to be unlocked",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstation": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "ADD operation for Workstation",
        "description": "Returns the identifier of the added object.",
        "operationId": "addWorkstation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The Workstation object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workstation"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Workstation using a TWSKey",
        "description": "Perform a model get to retrieve, using a TWSKey, a Workstation object in its 'object' shape.",
        "operationId": "getWorkstationByName",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the workstation to retrieves",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workstation responses",
            "schema": {
              "$ref": "#/definitions/Workstation"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Workstation using a TWSKey",
        "description": "Remove, using a TWSKey, a Workstation object.",
        "operationId": "removeWorkstationByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the Workstation to remove.",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstation/header/query": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Workstation",
        "description": "Perform a model query to retrieve Workstations in their \"header\" shape.",
        "operationId": "queryWorkstationHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Workstation",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterModel"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Workstation Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkstationHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/workstation/header/query_next": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "QUERY operation for Workstation",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextWorkstationHeader",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersModel"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workstation Header responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkstationHeader"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/model/workstation/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Workstation using a TWSKey",
        "description": "Locks a Workstation object by external key, checking that the object is not locked by any user.",
        "operationId": "lockWorkstationByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Workstation to lock",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstation/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Workstation using a TWSKey",
        "description": "Unlocks a Workstation object by external key, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockWorkstationByName",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "The name of the Workstation to unlock",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstation/{workstationId}": {
      "get": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "GET operation for Workstation using a TWSId",
        "description": "Perform a model get to retrieve, by its identifier, a Workstation object in its 'object' shape.",
        "operationId": "getWorkstationById",
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lock",
            "description": "True if the object must be locked while being retrieved. If missing, default is false",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionForInternalLockHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workstation responses",
            "schema": {
              "$ref": "#/definitions/Workstation"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get the complete job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously."
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UPDATE operation for Workstation using a TWSId",
        "description": "Update a Workstation object.",
        "operationId": "updateWorkstation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isLocked",
            "description": "True if the object is expected to be locked by the user, false if it is expected to be unlocked.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "unlock",
            "description": "True if the lock must be released after applying the requested update.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Workstation to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workstation"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "DELETE operation for Workstation using a TWSId",
        "description": "Remove, by its identifier, a Workstation object.",
        "operationId": "removeWorkstationById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "Workstation Id that needs to be removed",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstation/{workstationId}/action/lock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "LOCK operation for Workstation using a TWSId",
        "description": "Locks a Workstation object by identifier, checking that the object is not locked by any user.",
        "operationId": "lockWorkstationById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that needs to be locked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstation/{workstationId}/action/unlock": {
      "put": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "UNLOCK operation for Workstation using a TWSId",
        "description": "Unlocks a Workstation object by identifier, checking that it is currently locked by the requesting user and session.",
        "operationId": "unlockWorkstationById",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that needs to be unlocked",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "True if the object must be unlocked even if the requesting user is currently holding the lock using another session, or if the lock is held by another user and the requesting user has sufficient rights to unlock it.",
            "type": "boolean",
            "required": false
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/model/workstation/is_workstation": {
      "post": {
        "tags": [
          "model"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Check if the object is a workstation",
        "description": "Returns true if the name belongs to a workstation, false if it belongs to a workstationClass.",
        "operationId": "isWorkstation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Set the key of the StringMapObj to 'id' to check the workstation by id, and set the key of the StringMapObj to 'name' to check the workstation by name.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StringMapObj"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Prompt responses",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/criticaljob/query": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Critical Job in plan",
        "description": "Perform a plan query to retrieve Critical Job in plan",
        "operationId": "queryCriticalJobInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Critical Job in plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan On Critical Network",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobInPlanOnCriticalNetwork"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/criticaljob/query_next": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Critical Job in plan",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextCriticalJobInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersPlan"
            }
          },
          {
            "$ref": "#/parameters/howManyHeader"
          },
          {
            "$ref": "#/parameters/lastObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan On Critical Network",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobInPlanOnCriticalNetwork"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/criticaljob/{criticalJobId}/query_predecessors_chain": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "predecessors for Critical Job in plan",
        "description": "predecessors for Critical Job in plan",
        "operationId": "queryPredecessorsChain",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "criticalJobId",
            "description": "Critical Job Id for critical path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter and chain option on Critical Job in plan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PredecessorsChainInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan On Critical Network",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobInPlanOnCriticalNetwork"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/criticaljob/query_next_predecessors_chain": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Next predecessors for Critical Job in plan",
        "description": "predecessors for Critical Job in plan. This method should be used only for subsequent calls not for the first one. For the first call use the method query_predecessors_chain. Only available for active and all predecessors.",
        "operationId": "queryNextPredecessorsChain",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NextPredecessorsChainInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan On Critical Network",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobInPlanOnCriticalNetwork"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/criticaljob/summary_info": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "summary info for Critical Job in plan",
        "description": "summary info for Critical Job in plan",
        "operationId": "querySummaryInfo",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Critical Job in plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "critical jobs summary info",
            "schema": {
              "properties": {
                "numberOfCriticalJobsNoRisk": {
                  "type": "integer"
                },
                "numberOfCriticalJobsPotentialRisk": {
                  "type": "integer"
                },
                "numberOfCriticalJobsHighRisk": {
                  "type": "integer"
                },
                "lastCritPathRecalculation": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
                }
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/domain/query": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for domain in plan",
        "description": "Perform a plan query to retrieve domains in plan",
        "operationId": "querydomainInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter on domain in plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/queryPageSizeHeader"
          },
          {
            "$ref": "#/parameters/queryPageNumberHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DomainInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/domain/query_next": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Domain in Plan",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextDomainInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersPlan"
            }
          },
          {
            "$ref": "#/parameters/howManyHeader"
          },
          {
            "$ref": "#/parameters/lastObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DomainInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/domain/{domainId}": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get domain In Plan",
        "description": "Retrieve a domain In Plan by its plan id",
        "operationId": "getdomainInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "plain id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "domainId",
            "description": "domain Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain in Plan responses",
            "schema": {
              "$ref": "#/definitions/DomainInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/domain/{domainId}/action/start_domain_workstation": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Starts the domain workstation",
        "description": "Starts the domain workstation",
        "operationId": "startDomainWorkstation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "domainId",
            "description": "domain Id that needs to be started",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/domain/{domainId}/action/stop_domain_workstation": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Stops the domain workstation",
        "description": "Stops the domain workstation",
        "operationId": "stopDomainWorkstation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "domainId",
            "description": "domain Id that needs to be stopped",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/domain/{domainId}/action/link_domain_workstation": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Links the domain workstation",
        "description": "Links the domain workstation",
        "operationId": "linkDomainWorkstation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "domainId",
            "description": "domain Id that needs to be linked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/domain/{domainId}/action/unlink_domain_workstation": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Unlinks the domain workstation",
        "description": "Unlinks the domain workstation",
        "operationId": "unlinkDomainWorkstation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "domainId",
            "description": "domain Id that needs to be unlinked",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/domain/{domainId}/action/switch_domain_manager": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Change the domain manager of the given domain",
        "description": "Change the domain manager of the given domain",
        "operationId": "switchDomainManager",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "domainId",
            "description": "domain Id that needs to be changed",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "managerWorkstationId",
            "description": "The identifier of the new workstation domain manager",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/engine_information": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get Engine Information",
        "description": "Retrieve Engine Information by its plan id",
        "operationId": "getEngineInformation",
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "EngineInformation responses",
            "schema": {
              "$ref": "#/definitions/EngineInformation"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/file/query": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for file in plan",
        "description": "Perform a plan query to retrieve files in plan",
        "operationId": "queryFileInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter on File in plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/queryPageSizeHeader"
          },
          {
            "$ref": "#/parameters/queryPageNumberHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "File in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/file/query_next": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for File in Plan",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextFileInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersPlan"
            }
          },
          {
            "$ref": "#/parameters/howManyHeader"
          },
          {
            "$ref": "#/parameters/lastObject"
          }
        ],
        "responses": {
          "200": {
            "description": "File in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/file/{fileId}": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get File In Plan",
        "description": "Retrieve a File In Plan by its plan id",
        "operationId": "getFileInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "fileId",
            "description": "File Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "File in Plan responses",
            "schema": {
              "$ref": "#/definitions/FileInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/query": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for jobs in plan",
        "description": "Perform a plan query to retrieve Jobs",
        "operationId": "queryJobInPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter on job in plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/queryPageSizeHeader"
          },
          {
            "$ref": "#/parameters/queryPageNumberHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/query_next": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Job in plan",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextJobInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersPlan"
            }
          },
          {
            "$ref": "#/parameters/howManyHeader"
          },
          {
            "$ref": "#/parameters/lastObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/add_dependencies": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Add dependencies to a job in plan",
        "operationId": "addJobInPlanDependencies",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job definition Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dependenciesInPlan",
            "description": "dependencies to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDependenciesInPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/remove_dependencies": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "remove dependencies from job in plan",
        "operationId": "removeJobInPlanDependencies",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dependenciesInPlan",
            "description": "dependencies to remove",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDependenciesInPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/release_dependencies": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "release dependencies from job in plan",
        "operationId": "releaseJobInPlanDependencies",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dependenciesInPlan",
            "description": "dependencies to release",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDependenciesInPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/release_all_dependencies": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "release dependencies from job in plan",
        "operationId": "releaseAllJobInPlanDependencies",
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job in plan Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get Job In Plan",
        "description": "Retrieve a Job In Plan by its plan id",
        "operationId": "getJobInPlan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Update Job In Plan properties",
        "description": "Update  Job In Plan properties",
        "operationId": "updateJobInPlanProps",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "jobInPlan",
            "description": "Job In Plan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobInPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/joblog": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get Job Log",
        "description": "Returns the JobInPlan output. There are different mode to retrieve the output: single step or different bunch of data (for a very big output) \nTo get the entire JobInPlan output in a single step, call the API without any query parameter. \nTo get the first bunch of a JobInPlan output using lines query parameter. In almost every case it should be enough. For next bunch use the other parameters.\n",
        "operationId": "getJobLog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lines",
            "description": "number of lines",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageNum",
            "description": "page number - required for next bunch - if specified, fileId is required",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "fileId",
            "description": "file id - required for next bunch - if specified, pageNum is required",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextDatabasePlanHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan Log",
            "schema": {
              "$ref": "#/definitions/JobInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/count": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Count for Job in plan",
        "description": "Returns the Count for Jobs in plan.\n",
        "operationId": "countPlanObject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "jobInPlan",
            "description": "Job In Plan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PredecessorsChainInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextDatabasePlanHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/cancel": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Cancel Job In Plan",
        "description": "Cancel Job In Plan",
        "operationId": "cancelJobInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id that needs to be canceled",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/cancelpending": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Cancel Pending Job In Plan",
        "description": "Cancel Pending Job In Plan",
        "operationId": "cancelPendingJobInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id that needs to be canceled pending",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/hold": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Hold Job In Plan",
        "description": "Hold Job In Plan",
        "operationId": "holdJobInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/release": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Release Job In Plan",
        "description": "Release Job In Plan",
        "operationId": "releaseJobInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/kill": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Kill Job In Plan",
        "description": "Kill Job In Plan",
        "operationId": "killJobInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/confirm_succ": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Confirm SUCC Job In Plan",
        "description": "Confirm SUCC Job In Plan with specified conditions (optional)\nIf the job is not JobInPlan.externaland not JobInPlan.canceled, this operation will succeed if the job is in one of the following statuses \nFlowNodeInternalStatusType.FLOW_NODE_STATUS_EXEC FlowNodeInternalStatusType.FLOW_NODE_STATUS_MPE_INTRO\nFlowNodeInternalStatusType.FLOW_NODE_STATUS_ABEND_P FlowNodeInternalStatusType.FLOW_NODE_STATUS_SUCC_P\nFlowNodeInternalStatusType.FLOW_NODE_STATUS_END_P FlowNodeInternalStatusType.FLOW_NODE_STATUS_UNKNOWN\nIf the job is in the status FlowNodeInternalStatusType.FLOW_NODE_STATUS_SUCC, this operation will succeed using the conditions and FlowNodeInternalStatusType.FLOW_NODE_STATUS_SUCC as status.\nIf the job is in the status FlowNodeInternalStatusType.FLOW_NODE_STATUS_SUPPRESS, this operation will succeed using FlowNodeInternalStatusType.FLOW_NODE_STATUS_SUCC as status.\n",
        "operationId": "confirmSuccJobInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Conditions",
            "description": "The output conditions to confirm separated by comma",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/confirm_abend": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Confirm ABEND Job In Plan",
        "description": "Confirm ABEND Job In Plan with specified conditions (optional)\nIf the job is not JobInPlan.externaland not JobInPlan.canceled, this operation will succeed if the job is in one of the following statuses \nFlowNodeInternalStatusType.FLOW_NODE_STATUS_EXEC FlowNodeInternalStatusType.FLOW_NODE_STATUS_MPE_INTRO\nFlowNodeInternalStatusType.FLOW_NODE_STATUS_ABEND_P FlowNodeInternalStatusType.FLOW_NODE_STATUS_SUCC_P\nFlowNodeInternalStatusType.FLOW_NODE_STATUS_END_P FlowNodeInternalStatusType.FLOW_NODE_STATUS_UNKNOWN\nIf the job is in the status FlowNodeInternalStatusType.FLOW_NODE_STATUS_SUCC, this operation will succeed using the conditions and FlowNodeInternalStatusType.FLOW_NODE_STATUS_SUCC as status.\nIf the job is in the status FlowNodeInternalStatusType.FLOW_NODE_STATUS_SUPPRESS, this operation will succeed using FlowNodeInternalStatusType.FLOW_NODE_STATUS_SUCC as status.\n",
        "operationId": "confirmAbendJobInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Conditions",
            "description": "The output conditions to confirm separated by comma",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/rerun": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Rerun Job In Plan",
        "description": "Rerun Job In Plan",
        "operationId": "rerunJobInPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "rerunDetails",
            "description": "Details for rerun - The Job definition id must be specified if the Job priority or the start time, or both are changed from Job definition.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RerunDetails"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/jobsuccessors/preview": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get the Preview of the Job In Plan Successors",
        "description": "Get the Preview of the Job In Plan Successors",
        "operationId": "getJobInPlanSuccessorsPreview",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "in": "query",
            "name": "toSkipJobId",
            "description": "The Id of the job successor to skip for status check.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "failOnListSecurity",
            "description": "True to fail the preview in case of list authorizations issue. False otherwise.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "stopOnHold",
            "description": "True to stop the preview job successors in hold status. False otherwise.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "failOnMaxJobs",
            "description": "True to fail the preview in case the maximum number of job successors is reached. False otherwise.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "failOnNotInAction",
            "description": "True to fail the preview in case the job successors are in running status. False otherwise.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobInPlanSuccessorsResult"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/jobsuccessors/preview/action/parse": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Parse the Preview of the Job In Plan Successors",
        "description": "Parse the Preview of the Job In Plan Successors",
        "operationId": "parseJobInPlanSuccessorsPreview",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "jobSuccessors",
            "description": "Job In Plan Successors List to parse.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobInPlanSuccessorsResult"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobInPlanSuccessorsResult"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/jobsuccessors/action/rerun": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Rerun Job In Plan Successors",
        "description": "Rerun Job In Plan Successors",
        "operationId": "rerunJobInPlanSuccessors",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "in": "query",
            "name": "toSkipJobId",
            "description": "The Id of the job successor to skip for status check.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "internalOnly",
            "description": "True if only internal successors must be run. False if all successors must be run.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "202": {
            "description": "Job in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobInPlanSuccessorsResult"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/jobsuccessors/list/action/rerun": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Rerun Job In Plan Successors List",
        "description": "Rerun Job In Plan Successors List",
        "operationId": "rerunJobInPlanSuccessorsByList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "jobSuccessors",
            "description": "Job In Plan Successors List to rerun.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobInPlanSuccessorsResult"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "in": "query",
            "name": "toSkipJobId",
            "description": "The Id of the job successor to skip for status check.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "internalOnly",
            "description": "True if only internal successors must be run. False if all successors must be run.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "202": {
            "description": "Job in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobInPlanSuccessorsResult"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/predecessors": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get Job predecessors",
        "operationId": "getJobInPlanPredecessors",
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "jobId",
            "description": "Job id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "in": "query",
            "name": "How-Many",
            "type": "integer",
            "required": true,
            "description": "How many objects (max 10000)"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan On Critical Network",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobInPlanOnCriticalNetwork"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/{jobId}/action/run_command": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Runs a command on a Job in plan",
        "description": "Runs a command on a Job in plan for distributed engine, can be invoked only on MDM",
        "operationId": "runJobCommand",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "description": "Job Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "jobCommand",
            "description": "The job command",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobCommand"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "A string response",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/action/submit_ad_hoc_job": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "submit ad hoc job",
        "operationId": "addJobInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubmitJobInfo",
            "description": "submit job info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitJobInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/action/make": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Generates a JobInPlan object starting from a JobDefinition taken from the database.",
        "operationId": "makeJobInPlan",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jobDefinitionId",
            "description": "The database JobDefinition Identifier of the definition to submit.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workstationId",
            "description": "The Identifier in the plan of an existing WorkstationInPlan.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "alias",
            "description": "The alias that should be used during the submission.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/job/issues": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "descr",
        "operationId": "getWAObjectIssue",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "jobIds",
            "description": "List of Job identifiers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentifiersListResult"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Data Sets list result responses",
            "schema": {
              "$ref": "#/definitions/WAObjectIssueListResult"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/query": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Job Stream in plan",
        "description": "Perform a plan query to retrieve Job Streams in plan",
        "operationId": "queryJobStreamInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Job Stream in plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/queryPageSizeHeader"
          },
          {
            "$ref": "#/parameters/queryPageNumberHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Stream in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobStreamInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/query_next": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Job Stream in plan",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextJobStreamInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersPlan"
            }
          },
          {
            "$ref": "#/parameters/howManyHeader"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/sequenceNumber"
          },
          {
            "$ref": "#/parameters/restartIndex"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Stream in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobStreamInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get Job Stream In Plan",
        "description": "Retrieve a Job Stream In Plan by its plan id",
        "operationId": "getJobStreamInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "Job Stream Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Stream in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobStreamInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Update Jobstream In Plan properties",
        "description": "Update  JobStream In Plan properties",
        "operationId": "updateJobStreamInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "jobstreamInPlan",
            "description": "JobStream In Plan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobStreamInPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/hold": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Hold JobStream In Plan",
        "description": "Hold JobStream In Plan",
        "operationId": "holdJobStreamInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "Jobstream Id that needs to be held",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/release": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Release JobStream In Plan",
        "description": "Release JobStream In Plan",
        "operationId": "releaseJobStreamInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "Jobstream Id that needs to be released",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/cancel": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "cancel JobStream In Plan",
        "description": "cancel JobStream In Plan",
        "operationId": "cancelJobStreamInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "Jobstream Id that needs to be cancelled",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/cancel_pending": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "cancel pending JobStream In Plan",
        "description": "cancel pending JobStream In Plan",
        "operationId": "cancelPendingJobStreamInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "Jobstream Id that needs to be cancel pending",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/jobstream/action/cancel": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "cancel JobStream In Plan",
        "description": "cancel JobStream In Plan",
        "operationId": "cancelJobStreamInstancesList",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of JobStream identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "list of key value objects",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StringMapObj"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/action/cancel_pending": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "cancel pending JobStream In Plan",
        "description": "cancel pending JobStream In Plan",
        "operationId": "cancelPendingJobStreamInstancesList",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of JobStream identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "list of key value objects",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StringMapObj"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/release_all_dependencies": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "release all Jobstream In Plan dependencies",
        "description": "release all Jobstream In Plan dependencies",
        "operationId": "releaseAllJobStreamInstanceDependencies",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/release_dependencies": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "release dependencies from JobStream in plan",
        "operationId": "releaseJobStreamInstanceDependencies",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dependenciesInPlan",
            "description": "dependencies to release",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DependenciesInPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/add_dependencies": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Add dependencies to a JobStream in plan",
        "operationId": "addJobStreamInstanceDependencies",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dependenciesInPlan",
            "description": "dependencies to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DependenciesInPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/remove_dependencies": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "remove dependencies from JobStream in plan",
        "operationId": "removeJobStreamInstanceDependencies",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dependenciesInPlan",
            "description": "dependencies to remove",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DependenciesInPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/enable_jobs_monitoring": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "enable monitoring of jobs in JobStream by external applications",
        "operationId": "enableMonitorAllJobsInStreamInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/disable_jobs_monitoring": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "disable monitoring of jobs in JobStream by external applications",
        "operationId": "disableMonitorAllJobsInStreamInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/submit_job": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "submit job in JobStream instance",
        "operationId": "makeJobInPlanIntoJobStreamInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubmitJobIntoJobStreamInfo",
            "description": "submit jobstream info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitJobStreamInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/make_jobstream": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "make a jobstream instance",
        "operationId": "makeJobStreamInPlan",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "MakeJobStreamInfo",
            "description": "make jobstream info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MakeJobStreamInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Stream in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobStreamInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/submit_jobstream": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "re submit JobStream instance",
        "operationId": "addJobStreamInstanceWithVariables",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubmitJobStreamInfo",
            "description": "submit jobstream info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitJobStreamInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "List of identifiers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/action/submit_jobstream": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "re submit JobStream instance",
        "operationId": "addJobStreamInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubmitJobStreamInfo",
            "description": "submit jobstream info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitJobStreamInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "List of identifiers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/action/what_if": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "For internal use only",
        "operationId": "getTWSLinkedObjects",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "WhatIfInfo",
            "description": "whatif info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WhatIfInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "What-if results",
            "schema": {
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WhatIfResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/{jobstreamId}/action/first_predecessors": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "get first batch of predecessors",
        "operationId": "queryBlockingLeafPredecessorsForJobStream",
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "jobstreamId",
            "description": "JobStream Id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Stream in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobStreamInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/jobstream/action/next_predecessors": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "get next batches od predecessors",
        "operationId": "queryNextBlockingLeafPredecessorsForJobStream",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryPlanContext"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/sequenceNumber"
          },
          {
            "$ref": "#/parameters/restartIndex"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Job Stream in Plan responses",
            "schema": {
              "$ref": "#/definitions/JobStreamInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/prompt/query": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for prompt in plan",
        "description": "Perform a plan query to retrieve prompts in plan",
        "operationId": "queryPromptInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter on prompt in plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/queryPageSizeHeader"
          },
          {
            "$ref": "#/parameters/queryPageNumberHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Prompt in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromptInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/prompt/query_next": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Prompt in Plan",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextPromptInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersPlan"
            }
          },
          {
            "$ref": "#/parameters/howManyHeader"
          },
          {
            "$ref": "#/parameters/lastObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Prompt in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromptInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/prompt/{promptId}": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get prompt In Plan",
        "description": "Retrieve a prompt In Plan by its plan id",
        "operationId": "getPromptInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "plain id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "promptId",
            "description": "prompt Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Prompt in Plan responses",
            "schema": {
              "$ref": "#/definitions/PromptInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/prompt/{promptId}/action/reply": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Replies \"YES\" (true) or \"NO\" (false) to the specified prompt.",
        "description": "Replies \"YES\" (true) or \"NO\" (false) to the specified prompt.",
        "operationId": "replyPrompt",
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "promptId",
            "description": "prompt Id that needs to be replied",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Answer",
            "description": "The answer to prompt",
            "required": true,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/resource/query": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Resource in plan",
        "description": "Perform a plan query to retrieve Resource in plan",
        "operationId": "queryResourceInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Resource in plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/queryPageSizeHeader"
          },
          {
            "$ref": "#/parameters/queryPageNumberHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/resource/query_next": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Resource in plan",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextResourceInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersPlan"
            }
          },
          {
            "$ref": "#/parameters/howManyHeader"
          },
          {
            "$ref": "#/parameters/lastObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/resource/{resourceId}": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get Resource In Plan",
        "description": "Retrieve a Resource In Plan by its plan id",
        "operationId": "getResourceInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "description": "Resource Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource in Plan responses",
            "schema": {
              "$ref": "#/definitions/ResourceInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Update Resource In Plan properties",
        "description": "Update  Resource In Plan properties",
        "operationId": "updateResourceInstance",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceId",
            "description": "Resource Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resourceInPlan",
            "description": "Resource In Plan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceInPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/query": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Plan",
        "description": "Perform a query to retrieve Plan",
        "operationId": "querySymphonyInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          }
        ],
        "responses": {
          "200": {
            "description": "Plan response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SymphonyInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/query_next": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Plan",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextSymphonyInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersPlan"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/sequenceNumber"
          },
          {
            "$ref": "#/parameters/restartIndex"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Plan response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SymphonyInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/create_plan": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "create forecast or trial plan",
        "description": "create forecast or trial plan",
        "operationId": "createPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "plan info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlanInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/create_trial_plan_extension": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Create plan extension for trial plan",
        "description": "Create plan extension for trial plan",
        "operationId": "createPlanExtension",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "plan info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlanInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Action Result",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              },
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/user/query": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for users in plan",
        "description": "Perform a plan query to retrieve users in plan",
        "operationId": "queryUserInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter on user in plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workstation in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WindowsUserInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/user/query_next": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for User in Plan",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextUserInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersPlan"
            }
          },
          {
            "$ref": "#/parameters/howManyHeaderNotMutual"
          },
          {
            "$ref": "#/parameters/lastObject"
          },
          {
            "$ref": "#/parameters/sequenceNumber"
          },
          {
            "$ref": "#/parameters/restartIndex"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workstation in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WindowsUserInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/user/{userId}": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get user In Plan",
        "description": "Retrieve a user In Plan by its user id",
        "operationId": "getUserInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "plain id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "description": "user Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workstation in Plan responses",
            "schema": {
              "$ref": "#/definitions/WindowsUserInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/user/{userId}/action/set_windows_user_password": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Set the password for the specified user",
        "description": "Set the password for the specified user",
        "operationId": "setWindowsUserPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "description": "user Id which password that needs to be set",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "winUser",
            "description": "The windows user which password needs to be set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WindowsUserInPlan"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextJobStreamScopeHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextBrokerInfoRequestedHeader"
          },
          {
            "$ref": "#/parameters/contextForceCommandHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/query": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Workstation in plan",
        "description": "Perform a plan query to retrieve Workstations in plan",
        "operationId": "queryWorkstationInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter on Workstation in plan",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryFilterPlan"
            }
          },
          {
            "$ref": "#/parameters/queryPageSizeHeader"
          },
          {
            "$ref": "#/parameters/queryPageNumberHeader"
          },
          {
            "$ref": "#/parameters/howManyHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workstation in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkstationInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/workstation/query_next": {
      "post": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Query operation for Workstation in Plan",
        "description": "Returns a list of objects according to the Filter in the context. Use this method only for subsequent calls not for the first call. For the first call, use the method query.",
        "operationId": "queryNextWorkstationInPlan",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query plan context",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiltersPlan"
            }
          },
          {
            "$ref": "#/parameters/howManyHeader"
          },
          {
            "$ref": "#/parameters/lastObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Workstation in Plan responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkstationInPlan"
              }
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get Workstation In Plan",
        "description": "Retrieve a Workstation In Plan by its plan id",
        "operationId": "getWorkstationInPlan",
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workstationId",
            "description": "Workstation Id that needs to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Workstation in Plan responses",
            "schema": {
              "$ref": "#/definitions/WorkstationInPlan"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/start": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "start workstation In Plan",
        "description": "start workstationIn Plan",
        "operationId": "startWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that needs to be started",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "manager",
            "description": "if the Workstation should start as manager",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/stop": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "stop workstation In Plan",
        "description": "stop workstationIn Plan",
        "operationId": "stopWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that needs to be stopped",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/link": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "link workstation In Plan",
        "description": "link workstationIn Plan",
        "operationId": "linkWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that needs to be linked",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/unlink": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "unlink workstation In Plan",
        "description": "unlink workstationIn Plan",
        "operationId": "unlinkWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that needs to be unlinked",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/update_limit": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "update limit workstation In Plan",
        "description": "update limit workstationIn Plan",
        "operationId": "updateLimitWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "limit",
            "description": "limit",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/update_fence": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "update fence workstation In Plan",
        "description": "update fence workstationIn Plan",
        "operationId": "updateFenceWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "fence",
            "description": "fence",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/switch_event_processor": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "switch event processor workstation In Plan",
        "description": "switch event processor  workstationIn Plan",
        "operationId": "switchEventProcessorWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id that will become event processor",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/start_event_processor": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "start event processor workstation In Plan",
        "description": "start event processor  workstationIn Plan",
        "operationId": "startEventProcessorWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id where to start event processor",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/stop_event_processor": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "stop event processor workstation In Plan",
        "description": "stop event processor  workstationIn Plan",
        "operationId": "stopEventProcessorWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id where to stop event processor",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/start_event_monitoring": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "start event monitoring workstation In Plan",
        "description": "start event monitoring  workstationIn Plan",
        "operationId": "startEventMonitoringWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id where to start event monitoring",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/stop_event_monitoring": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "stop event monitoring workstation In Plan",
        "description": "stop event monitoring  workstationIn Plan",
        "operationId": "stopEventMonitoringWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id where to stop event monitoring",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/monitoring_configuration": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "return monitoring configuration of workstation In Plan",
        "description": "return monitoring configuration of workstation In Plan",
        "operationId": "getMonitoringConfigurationWorkstation",
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id from which monitoring configuration will be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "StringMessage response",
            "schema": {
              "$ref": "#/definitions/StringMessage"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/health_status": {
      "get": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "return health status of workstation In Plan",
        "description": "return health status of workstation In Plan",
        "operationId": "getHealthStatusWorkstation",
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id from which health status will be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "StringMessage response",
            "schema": {
              "$ref": "#/definitions/StringMessage"
            },
            "headers": {
              "Context-Locale": {
                "type": "string"
              },
              "Context-PlanId": {
                "type": "string"
              },
              "Context-JobStreamScope": {
                "type": "integer",
                "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
              },
              "Context-PlanDependenciesScope": {
                "type": "integer",
                "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
              },
              "Context-TransferMode": {
                "type": "integer",
                "description": "Defines how data is retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
              },
              "Context-ObjectCount": {
                "type": "integer",
                "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
              },
              "Context-StatusScope": {
                "type": "integer",
                "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
              },
              "Context-UseCache": {
                "type": "integer",
                "description": "0=Load information without using the cache 1=Load information using the cache"
              },
              "Context-HasMoreObjects": {
                "type": "integer",
                "description": "0=The integer used to specify that no objects exist except for those returned by the plan view queries  1=The integer used to specify that objects exist other than those returned by the plan view queries"
              },
              "Context-BrokerInfoRequested": {
                "type": "integer",
                "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
              },
              "Context-ForceCommand": {
                "type": "integer",
                "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
              },
              "Context-DatabasePlan": {
                "type": "integer",
                "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
              },
              "Context-CheckResync": {
                "type": "integer",
                "description": "0=Disables force resync check 1=Enables force resync check"
              },
              "Context-JobHistoryScope": {
                "type": "integer",
                "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the last status of the job history while running queries"
              },
              "Restart-Index": {
                "type": "integer",
                "format": "int64",
                "description": "Plan Restart Index - used for query next API"
              },
              "Sequence-Number": {
                "type": "integer",
                "description": "Plan Sequence Number - used for query next API"
              },
              "Object-Count": {
                "type": "integer",
                "description": "The total number of remaining items to return - used for query next API"
              },
              "How-Many-Returned": {
                "type": "integer",
                "description": "The total number of returned items - used for query next API. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
              },
              "Last-Object": {
                "type": "string",
                "description": "The latest object identifier - used for query next API"
              }
            }
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/connect_to_host_cpu": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "connect to host cpu",
        "description": "connect to host cpu",
        "operationId": "connectToHostCpu",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id for connect to host cpu",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "connection info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkstationConnectInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "result",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      }
    },
    "/plan/{planId}/workstation/{workstationId}/action/upgrade_workstation": {
      "put": {
        "tags": [
          "plan"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "upgrade workstation",
        "description": "upgrade workstation",
        "operationId": "upgradeWorkstation",
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workstationId",
            "description": "workstation Id to upgrade",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "Plan id - 'current' for current plan",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextPlanIdHeader"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          },
          {
            "$ref": "#/parameters/contextPlanDependenciesScopeHeader"
          },
          {
            "$ref": "#/parameters/contextTransferModeHeader"
          },
          {
            "$ref": "#/parameters/contextObjectCountHeader"
          },
          {
            "$ref": "#/parameters/contextStatusScopeHeader"
          },
          {
            "$ref": "#/parameters/contextUseCacheHeader"
          },
          {
            "$ref": "#/parameters/contextHasMoreObjectsHeader"
          },
          {
            "$ref": "#/parameters/contextJobHistoryScopeHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "No response body is supplied for this operation."
          }
        }
      }
    },
    "/engine/info": {
      "get": {
        "tags": [
          "engine"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "get engine info",
        "description": "get engine info",
        "operationId": "getEngineInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/language"
          }
        ],
        "responses": {
          "200": {
            "description": "Engine info",
            "schema": {
              "$ref": "#/definitions/EngineInfo"
            }
          }
        }
      }
    },
    "/engine/realm": {
      "get": {
        "tags": [
          "engine"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "This method return realm",
        "description": "This method return realm",
        "operationId": "getRealm",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Realm",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/engine/run_component_command": {
      "put": {
        "tags": [
          "engine"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "This method run component command",
        "description": "This method run component command",
        "operationId": "runComponentCommand",
        "produces": [
          "text/plain"
        ],
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "componentCommandInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentCommandInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "Component",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/engine/run_executor_command": {
      "put": {
        "tags": [
          "engine"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "This method runs executor command",
        "description": "This method runs executor command",
        "operationId": "runExecutorCommand",
        "produces": [
          "text/plain"
        ],
        "consumes": [
          "application/json",
          "text/html",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "componentCommandInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentCommandInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "202": {
            "description": "Component",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/engine/parameters_to_jsdl": {
      "post": {
        "tags": [
          "engine"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Converts a list of parameters into JSDL representation. For distributed engine, can be invoked only on MDM.",
        "description": "Converts a list of parameters into JSDL representation. For distributed engine, can be invoked only on MDM.",
        "operationId": "parametersToJsdl",
        "produces": [
          "text/plain"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parametersInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParametersInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Jsdl",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/engine/jsdl_to_parameters": {
      "post": {
        "tags": [
          "engine"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Converts a JSDL into a list of parameters. For distributed engine, can be invoked only on MDM.",
        "description": "Converts a JSDL into a list of parameters. For distributed engine, can be invoked only on MDM.",
        "operationId": "jsdlToParameters",
        "produces": [
          "text/plain"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "jsdlInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsdlInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Parameters",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/engine/validate_jsdl": {
      "post": {
        "tags": [
          "engine"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Validates a jsdl on a particular executor. For distributed engine, can be invoked only on MDM.",
        "description": "Validates a jsdl on a particular executor. For distributed engine, can be invoked only on MDM.",
        "operationId": "validateJsdl",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "jsdlInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsdlInfo"
            }
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/contextSessionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Validated"
          }
        }
      }
    },
    "/engine/lob_authorization": {
      "get": {
        "tags": [
          "engine"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "This method checks if the user is enabled for the line of business",
        "description": "This method return true if the user is enabled for the line of business",
        "operationId": "checkLineOfBusinessAuthorization",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "lineOfBusiness",
            "description": "Line of business",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "result",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/engine/report_authorization": {
      "get": {
        "tags": [
          "engine"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "This method return true if the report type is authorized by engine",
        "description": "This method return true if the report type is authorized by engine",
        "operationId": "checkReportAuthorization",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "reportType",
            "description": "Report Type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "result",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/engine/executor": {
      "get": {
        "tags": [
          "engine"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "This method returns an XML representing the executor's graphical interface. For distributed engine can be invoked only on MDM.",
        "description": "This method returns an XML representing the executor's graphical interface. For distributed engine can be invoked only on MDM.",
        "operationId": "getExecutor",
        "produces": [
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "executor",
            "description": "The Executor Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Executor",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActionRunHeader": {
      "properties": {
        "id": {
          "type": "string"
        },
        "actionScope": {
          "type": "string"
        },
        "actionType": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "ruleType": {
          "type": "string"
        },
        "pluginName": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "actionStatus": {
          "type": "string"
        },
        "actionResult": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ActionRun": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/ActionRunHeader"
        },
        "actionId": {
          "type": "string"
        },
        "ruleId": {
          "type": "string"
        },
        "ruleInstanceId": {
          "type": "string"
        },
        "parameterMap": {
          "$ref": "#/definitions/StringMap"
        }
      }
    },
    "ActionRunFilter": {
      "properties": {
        "actionScope": {
          "type": "string",
          "description": "The action scope filter. String parameter"
        },
        "actionTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actionStatusList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ruleName": {
          "type": "string",
          "description": "The rule name filter. String parameter"
        },
        "ruleTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The rule type list filter. List of EventRuleType parameters"
        },
        "timeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "actionId": {
          "type": "string",
          "description": "The action ID filter. Identifier parameter"
        },
        "ruleId": {
          "type": "string",
          "description": "The rule ID filter. Identifier parameter"
        },
        "ruleInstanceId": {
          "type": "string",
          "description": "The rule instance ID filter. Identifier parameter."
        }
      }
    },
    "AuditRecordHeader": {
      "properties": {
        "id": {
          "type": "string"
        },
        "auditType": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        },
        "actionType": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "wksNameRelatedObject": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "relatedObjName": {
          "type": "string"
        },
        "objName": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        },
        "actionData": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "labelVersion": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "objectId": {
          "type": "string"
        },
        "justificationData": {
          "$ref": "#/definitions/JustificationData"
        }
      }
    },
    "AuditRecord": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/AuditRecordHeader"
        },
        "objectId": {
          "type": "string"
        },
        "definitionList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AuditRecordFilter": {
      "properties": {
        "objectType": {
          "type": "string",
          "description": "The object type filter. String parameter."
        },
        "actionType": {
          "type": "string",
          "description": "The action type filter. String parameter."
        },
        "workstationName": {
          "type": "string",
          "description": "The workstation name filter. String parameter"
        },
        "wksNameRelatedObject": {
          "type": "string",
          "description": "The workstation name of the related object filter. String parameter"
        },
        "userName": {
          "type": "string",
          "description": "The user name filter. String parameter."
        },
        "relatedObjName": {
          "type": "string",
          "description": "The related object name filter. String parameter."
        },
        "objName": {
          "type": "string",
          "description": "The object name filter. String parameter."
        },
        "objectName": {
          "type": "string",
          "description": "The qualified object name filter. String parameter."
        },
        "objectId": {
          "type": "string",
          "description": "The object id filter. String parameter"
        },
        "objectNameForVersion": {
          "type": "string",
          "description": "The object name filter for version. String parameter."
        },
        "objectIdForVersion": {
          "type": "string",
          "description": "The object id filter for version. String parameter."
        },
        "version": {
          "type": "string",
          "description": "The version filter. String parameter."
        },
        "timeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "auditId": {
          "type": "string",
          "description": "The audit ID filter. Identifier parameter. "
        },
        "justificationCategory": {
          "type": "string",
          "description": "The category of the justification filter. String parameter."
        },
        "justificationTicketNum": {
          "type": "string",
          "description": "The ticket number associated to the justification filter. String parameter."
        },
        "justificationDescription": {
          "type": "string",
          "description": "The description of the justification filter. String parameter."
        },
        "planObjectId": {
          "type": "string",
          "description": "The object id filter on plan. String parameter."
        },
        "auditRecordTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The audit record type list filter. List of AuditRecordType parameters"
        }
      }
    },
    "EventRuleHeader": {
      "required": [
        "name",
        "ruleType"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "ruleType": {
          "type": "string",
          "description": "The rule type. Valid values are: COLLECTION, DUPLICATE, FILTER, SEQUENCE, SET, THRESHOLD. If the value specified is not valid, the null value is automatically used"
        },
        "isDraft": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "processStatus": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "validTo": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "startOffset": {
          "type": "integer",
          "format": "int64"
        },
        "endOffset": {
          "type": "integer",
          "format": "int64"
        },
        "timeZone": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "EventCondition": {
      "required": [
        "pluginName",
        "eventType"
      ],
      "properties": {
        "pluginName": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "filteringPredicate": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "EventRule": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/EventRuleHeader"
        },
        "thresholdCount": {
          "type": "integer",
          "format": "int32"
        },
        "timeInterval": {
          "type": "integer",
          "format": "int64"
        },
        "timeIntervalMode": {
          "type": "string",
          "description": "The time interval mode. Valid values are: FIXED, SLIDING"
        },
        "groupAttributeNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleAction"
          }
        },
        "triggerEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventCondition"
          }
        }
      }
    },
    "EventRuleFilter": {
      "properties": {
        "eventRuleName": {
          "type": "string",
          "description": "The rule name filter. String parameter."
        },
        "eventRuleTypeList": {
          "description": "The rule type list filter. List of EventRuleType parameters. Valid values are COLLECTION, DUPLICATE, FILTER, SEQUENCE, SET, THRESHOLD",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "eventRuleStatusList": {
          "description": "The rule status list filter. List of EventRuleStatus parameters.Valid values are ACTIVE, INACTIVE",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "draft": {
          "type": "boolean",
          "description": "The rule draft filter"
        },
        "validRange": {
          "description": "Selects the event rules whose validity period overlaps with the time interval specified by the parameter.",
          "$ref": "#/definitions/TimeRange"
        },
        "notStillValidOnDate": {
          "type": "string",
          "format": "date-time",
          "description": "Selects the event rules whose validity period comes after the specified date parameter. Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss."
        },
        "noLongerValidOnDate": {
          "type": "string",
          "format": "date-time",
          "description": "Selects the event rules whose validity period has expired before the specified date parameter. Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss."
        },
        "eventTypeList": {
          "description": "The event type list filter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "eventScope": {
          "type": "string",
          "description": "The event scope filter."
        },
        "actionTypeList": {
          "description": "The action type list filter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actionScope": {
          "type": "string",
          "description": "The action scope filter."
        },
        "jobDefinitionName": {
          "type": "string",
          "description": "The job definition name filter."
        },
        "jobDefinitionFlowTargetName": {
          "type": "string",
          "description": "The job definition flow target name filter."
        },
        "jobStreamName": {
          "type": "string",
          "description": "The job stream name filter."
        },
        "jobStreamNameFlowTargetName": {
          "type": "string",
          "description": "The job stream flow target name filter."
        },
        "variableTableName": {
          "type": "string",
          "description": "The variable table name filter."
        }
      }
    },
    "JustificationData": {
      "properties": {
        "category": {
          "type": "string"
        },
        "ticketNumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "MessageLogRecordHeader": {
      "properties": {
        "id": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "ruleType": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "informationType": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "lineOfBusiness": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        }
      }
    },
    "MessageLogRecord": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/MessageLogRecordHeader"
        },
        "ruleId": {
          "type": "string"
        },
        "ruleInstanceId": {
          "type": "string"
        }
      }
    },
    "MessageLogRecordFilter": {
      "properties": {
        "scope": {
          "type": "string",
          "description": "The scope filter. String parameter"
        },
        "eventTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The event type list filter. List of String parameters"
        },
        "ruleName": {
          "type": "string",
          "description": "The rule name filter. String parameter"
        },
        "ruleTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The rule type list filter. List of EventRuleType parameters"
        },
        "timeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "informationTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The information type list filter. List of InformationType parameters"
        },
        "ruleId": {
          "type": "string",
          "description": "The rule ID filter. Identifier parameter"
        },
        "ruleInstanceId": {
          "type": "string",
          "description": "The rule instance ID filter. Identifier parameter"
        }
      }
    },
    "QueryFilterEventRuleEngine": {
      "properties": {
        "filters": {
          "$ref": "#/definitions/FiltersEventRuleEngine"
        }
      }
    },
    "FiltersEventRuleEngine": {
      "properties": {
        "auditRecordFilter": {
          "$ref": "#/definitions/AuditRecordFilter"
        },
        "messageLogRecordFilter": {
          "$ref": "#/definitions/MessageLogRecordFilter"
        },
        "ruleInstanceFilter": {
          "$ref": "#/definitions/RuleInstanceFilter"
        },
        "actionRunFilter": {
          "$ref": "#/definitions/ActionRunFilter"
        }
      }
    },
    "QueryEventRuleEngineContext": {
      "properties": {
        "filters": {
          "$ref": "#/definitions/FiltersEventRuleEngine"
        },
        "objectsKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of keys of the last objects retrieved"
        },
        "howMany": {
          "type": "integer",
          "description": "The total number of the items to be returned - used for query next API"
        }
      }
    },
    "RuleAction": {
      "required": [
        "responseType",
        "pluginName"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "eventRuleId": {
          "type": "string",
          "description": "The identifier of the event rule to which this rule action belongs"
        },
        "description": {
          "type": "string"
        },
        "actionType": {
          "type": "string",
          "description": "The rule action type"
        },
        "responseType": {
          "type": "string",
          "description": "Valid values are ON_DETECTION, ON_NEXT_EVENT, ON_TIME_OUT, ON_TIME_WINDOW_COMPLETE"
        },
        "pluginName": {
          "type": "string",
          "description": "The name of the plug-in that is able to handle the rule action"
        },
        "parameterMap": {
          "description": "The map of parameters defined for this rule action",
          "$ref": "#/definitions/StringMap"
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "The position of this action in the action list of the event rule"
        },
        "scope": {
          "type": "string",
          "description": "The scope of the action"
        },
        "type": {
          "type": "string"
        },
        "jobDefinitionId": {
          "type": "string",
          "description": "For tws type ONLY"
        },
        "jobDefinitionKey": {
          "$ref": "#/definitions/JobDefinitionKey",
          "description": "For tws type ONLY, This is a read-only field"
        },
        "abstractJobStreamId": {
          "type": "string",
          "description": "For tws type ONLY"
        },
        "abstractJobStreamKey": {
          "$ref": "#/definitions/JobStreamKey",
          "description": "For tws type ONLY, This is a read-only field"
        },
        "variableTableId": {
          "type": "string",
          "description": "For tws type ONLY"
        },
        "variableTableKey": {
          "type": "string",
          "description": "For tws type ONLY, This is a read-only field"
        }
      }
    },
    "RuleInstanceHeader": {
      "properties": {
        "id": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "ruleType": {
          "type": "string"
        },
        "ruleStatus": {
          "type": "string"
        },
        "isTimeoutExpired": {
          "type": "boolean"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "RuleInstance": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/RuleInstanceHeader"
        },
        "ruleId": {
          "type": "string"
        }
      }
    },
    "RuleInstanceFilter": {
      "properties": {
        "ruleName": {
          "type": "string",
          "description": "The rule name filter. String parameter"
        },
        "ruleTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The rule type list filter. List of EventRuleType parameters"
        },
        "ruleStatusList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The rule status list filter. List of RuleInstanceStatus parameters."
        },
        "timeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "ruleId": {
          "type": "string",
          "description": "The scope filter. String parameter"
        }
      }
    },
    "WarningMessagesInfo": {
      "properties": {
        "warning": {
          "type": "boolean"
        },
        "listMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isWarning": {
          "type": "boolean"
        }
      }
    },
    "AccessControlList": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        },
        "acls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ACLProperties"
          }
        }
      }
    },
    "ACLProperties": {
      "properties": {
        "user": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "cpus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleProperties"
          }
        }
      }
    },
    "CalendarHeader": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "Calendar": {
      "required": [
        "header",
        "iCalendar"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/CalendarHeader"
        },
        "iCalendar": {
          "type": "string",
          "description": "A list of dates in the following format: yyyymmdd{,yyyymmdd}"
        },
        "iCalendarFreeDates": {
          "type": "string",
          "description": "A list of free dates in the following format: yyyymmdd{,yyyymmdd}"
        },
        "iCalendarWorkDates": {
          "type": "string",
          "description": "A list of working dates in the following format: yyyymmdd{,yyyymmdd}"
        },
        "iCalendarWeekDays": {
          "type": "string",
          "description": "A list of week days in the following format: yyyymmdd{,yyyymmdd}"
        },
        "iCalendarFreeWeekdays": {
          "type": "string",
          "description": "A list of free week days in the following format: yyyymmdd{,yyyymmdd}"
        },
        "iCalendarWorkWeekdays": {
          "type": "string",
          "description": "A list of working week days in the following format: yyyymmdd{,yyyymmdd}"
        },
        "shiftEndTime": {
          "type": "integer",
          "format": "int64",
          "description": "Shift end time in the following format: yyyymmdd{,yyyymmdd}"
        },
        "daysDescription": {
          "$ref": "#/definitions/StringMap"
        },
        "workloadApplicationId": {
          "type": "string",
          "description": "The identifier of the workload application that includes this calendar"
        }
      }
    },
    "CalendarFilter": {
      "properties": {
        "workloadApplicationName": {
          "type": "string",
          "description": "Selects calendars referencing the specified workload application directly."
        },
        "calendarName": {
          "type": "string"
        }
      }
    },
    "Destination": {
      "properties": {
        "destinationName": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "parallelServersUsage": {
          "type": "string",
          "description": "The ResourceUsage Type. Valid values are:  PLANNING, CONTROL, PLANNING_AND_CONTROL, NEITHER_PLANNING_NOR_CONTROL"
        },
        "server1Name": {
          "type": "string"
        },
        "server2Name": {
          "type": "string"
        },
        "server1Usage": {
          "type": "string",
          "description": "The ResourceUsage Type. Valid values are:  PLANNING, CONTROL, PLANNING_AND_CONTROL, NEITHER_PLANNING_NOR_CONTROL"
        },
        "server2Usage": {
          "type": "string",
          "description": "The ResourceUsage Type. Valid values are:  PLANNING, CONTROL, PLANNING_AND_CONTROL, NEITHER_PLANNING_NOR_CONTROL"
        },
        "routingMethod": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "workstationAvailabilityIntervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkstationAvailabilityInterval"
          }
        }
      }
    },
    "ZDestinationFilter": {
      "properties": {
        "destinationName": {
          "type": "string"
        },
        "destinationRoutingMethod": {
          "type": "string"
        },
        "destinationType": {
          "type": "string"
        }
      }
    },
    "Domain": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "parentId": {
          "type": "string",
          "description": "If specified, must reference an existing domain. Must be null for the master domain."
        },
        "parentName": {
          "type": "string",
          "description": "In ADD operations, if specified, must reference an existing domain. If not, the Master Domain will be used as default."
        },
        "isMaster": {
          "type": "boolean"
        },
        "managerWorkstationName": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "DomainFilter": {
      "properties": {
        "domainName": {
          "type": "string"
        },
        "parentDomainName": {
          "type": "string"
        }
      }
    },
    "EventTriggeredTrackingKey": {
      "properties": {
        "eventName": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        }
      }
    },
    "EventTriggeredTracking": {
      "properties": {
        "id": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        },
        "key": {
          "$ref": "#/definitions/EventTriggeredTrackingKey"
        },
        "jobStreamName": {
          "type": "string"
        },
        "jobReplace": {
          "type": "boolean"
        },
        "availabilityStatus": {
          "type": "boolean"
        },
        "dependenciesResolution": {
          "type": "string",
          "description": "The DependenciesResolution Type. Valid values are: RESOLUTION_NONE, RESOLUTION_PREDECESSORS, RESOLUTION_SUCCESSORS, RESOLUTION_ALL"
        }
      }
    },
    "EventTriggeredTrackingFilter": {
      "properties": {
        "eventName": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "jobStreamName": {
          "type": "string"
        }
      }
    },
    "FileStartCondition": {
      "required": [
        "type",
        "workstationName",
        "userLogin",
        "fileName",
        "interval"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "jobStreamId": {
          "type": "string",
          "description": "Must reference an existing jobstream"
        },
        "jobStreamKey": {
          "$ref": "#/definitions/JobStreamKey",
          "description": "Must reference an existing jobstream"
        },
        "type": {
          "type": "string",
          "description": "Valid values are: FileCreated and FileModified"
        },
        "alias": {
          "type": "string"
        },
        "interval": {
          "type": "integer",
          "format": "int64"
        },
        "workstationId": {
          "type": "string",
          "description": "Must reference an existing workstation or class"
        },
        "workstationName": {
          "type": "string",
          "description": "Must reference an existing workstation or class"
        },
        "userLogin": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "isProcessInBatch": {
          "type": "boolean",
          "description": "Default value is false"
        },
        "outputFile": {
          "type": "string"
        },
        "advancedParameters": {
          "type": "string"
        }
      }
    },
    "Folder": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        },
        "depth": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "string"
        },
        "attributes": {
          "type": "string"
        },
        "userFields": {
          "$ref": "#/definitions/StringMap"
        }
      }
    },
    "FolderFilter": {
      "properties": {
        "folderName": {
          "type": "string"
        },
        "parentFolderName": {
          "type": "string"
        },
        "parentFolderId": {
          "type": "string"
        },
        "depth": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "JCLKey": {
      "required": [
        "datasetName",
        "jclMemberName"
      ],
      "properties": {
        "datasetName": {
          "type": "string"
        },
        "jclMemberName": {
          "type": "string"
        }
      }
    },
    "JCLFilter": {
      "properties": {
        "datasetName": {
          "type": "string"
        },
        "memberName": {
          "type": "string"
        }
      }
    },
    "JCLHeader": {
      "properties": {
        "id": {
          "type": "string"
        },
        "JCLKey": {
          "$ref": "#/definitions/JCLKey"
        }
      }
    },
    "JCL": {
      "properties": {
        "JCLHeader": {
          "$ref": "#/definitions/JCLHeader"
        },
        "txtBody": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "textLines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "JobDefinitionHeader": {
      "required": [
        "jobDefinitionKey"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "jobDefinitionKey": {
          "$ref": "#/definitions/JobDefinitionKey"
        },
        "description": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "isCommand": {
          "type": "boolean"
        },
        "userLogin": {
          "type": "string"
        },
        "lastRunTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - Date when the Job Stream was selected. Read-Only attribute."
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "JobDefinition": {
      "required": [
        "header",
        "taskString",
        "recoveryOption"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/JobDefinitionHeader"
        },
        "workstationId": {
          "type": "string"
        },
        "normalElapsedTime": {
          "type": "integer",
          "format": "int64"
        },
        "workloadApplicationId": {
          "type": "string"
        },
        "taskString": {
          "type": "string",
          "description": "If it is defined through a jsdl, definedByJsdl must be set to true. Affinity value (Define an affinity relationship to have the current job run on the same workstation) of the JobDefinition must be set after the jsdl with the following syntax: -twsAffinity jobname=<name of the affinity job>. To set 'Variable resolution at runtime' the following 2 properties must be added to the jsdl:jobDefinition tag:  1) xmlns:XMLSchema='http://www.w3.org/2001/XMLSchema' 2) XMLSchema:text='resolveVariableTable'."
        },
        "isInteractive": {
          "type": "boolean"
        },
        "recoveryJobId": {
          "type": "string"
        },
        "recoveryJobKey": {
          "$ref": "#/definitions/JobDefinitionKey"
        },
        "recoveryOption": {
          "type": "string",
          "description": "Valid values are: STOP, CONTINUE, RERUN"
        },
        "abendPromptId": {
          "type": "string"
        },
        "abendPrompt": {
          "$ref": "#/definitions/Prompt"
        },
        "definedByJsdl": {
          "type": "boolean",
          "description": "True if the job definition task is defined through a jsdl"
        },
        "outputConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputCondition"
          }
        }
      }
    },
    "JobDefinitionKey": {
      "required": [
        "name",
        "workstationName"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        }
      }
    },
    "JobDefinitionFilter": {
      "properties": {
        "jobDefinitionName": {
          "type": "string"
        },
        "userLogin": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "recoveryJobDefinitionName": {
          "type": "string"
        },
        "recoveryworkstationName": {
          "type": "string"
        },
        "workloadApplicationName": {
          "type": "string",
          "description": "Selects the job definitions referencing the specified workload application directly."
        }
      }
    },
    "JobDetailedStatistic": {
      "properties": {
        "jobDefinitionId": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "runcycleId": {
          "type": "string"
        },
        "jobStreamId": {
          "type": "string"
        },
        "detailedStatsType": {
          "type": "string",
          "description": "Detailed Statistics Type. Valid values are: GLOBAL, WEEKLY, MONTHLY, MONTHLY_INVERTED, RUNCYCLE"
        },
        "jobStreamKey": {
          "$ref": "#/definitions/JobStreamKey"
        },
        "estimatedDuration": {
          "type": "integer",
          "format": "int64"
        },
        "detailedStatsData": {
          "type": "integer",
          "format": "int32"
        },
        "sigma": {
          "type": "integer",
          "format": "int64"
        },
        "numberOfSamples": {
          "type": "integer",
          "format": "int32"
        },
        "deadlineOffset": {
          "type": "integer",
          "format": "int64"
        },
        "rcName": {
          "type": "string"
        },
        "nop": {
          "type": "string",
          "description": "Yes or No Type. Valid values are: YES, NO. For z/OS only"
        },
        "manualHold": {
          "type": "string",
          "description": "Yes or No Type. Valid values are: YES, NO. For z/OS only"
        },
        "criticalType": {
          "type": "string",
          "description": "Critical Job Type. Valid values are: NO, PATH, WLM. For z/OS only"
        },
        "deadlineAction": {
          "type": "string",
          "description": "JobDeadlineAction Type. Valid values are: ALERT, COMPLETE, NOP, ERROR, BLANK. For z/OS only"
        },
        "variableNotStartedAlertTime": {
          "type": "integer",
          "format": "int64",
          "description": "For z/OS only"
        },
        "variableNotStartedActionTime": {
          "type": "integer",
          "format": "int64",
          "description": "For z/OS only"
        },
        "variableNotStartedAction": {
          "type": "string",
          "description": "JobDeadlineAction Type. Valid values are: ALERT, COMPLETE, NOP, ERROR, BLANK. For z/OS only"
        }
      }
    },
    "JobDetailedStatisticFilter": {
      "properties": {
        "jobDetailedStaticId": {
          "type": "string",
          "description": "The job detailed statistics identifier filter."
        },
        "jobDefinitionId": {
          "type": "string",
          "description": "The job definition identifier filter."
        },
        "runcycleId": {
          "type": "string",
          "description": "The run cycle identifier filter."
        },
        "jobStatisticsData": {
          "type": "integer",
          "format": "int32",
          "description": "The job operation number filter."
        },
        "jobStatisticsType": {
          "type": "string",
          "description": "The job detailed statistics type filter. Valid values are: GLOBAL, WEEKLY, MONTHLY, MONTHLY_INVERTED, RUNCYCLE"
        }
      }
    },
    "JobHistoryRun": {
      "properties": {
        "jobStreamName": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "jobStreamWorkstationName": {
          "type": "string"
        },
        "scheduledStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "runDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "lateStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "lateEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "plannedDuration": {
          "type": "integer",
          "format": "int64"
        },
        "totalCPUTime": {
          "type": "integer",
          "format": "int64"
        },
        "totalElapsedTime": {
          "type": "integer",
          "format": "int64"
        },
        "isLongDuration": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "rerunType": {
          "type": "string"
        },
        "rerunNumber": {
          "type": "integer",
          "format": "int32"
        },
        "returnCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorCode": {
          "type": "string"
        },
        "jobNumber": {
          "type": "integer",
          "format": "int32"
        },
        "jobId": {
          "type": "string"
        },
        "jobStreamInstanceId": {
          "type": "string"
        },
        "jobDefinitionId": {
          "type": "string"
        },
        "runCycleId": {
          "type": "string"
        },
        "userLogin": {
          "type": "string"
        },
        "jobStatistics": {
          "$ref": "#/definitions/JobStatistics"
        },
        "executionDestination": {
          "type": "string"
        },
        "submissionDestination": {
          "type": "string"
        },
        "criticalLatestStart": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "isCritical": {
          "type": "boolean"
        },
        "isPromoted": {
          "type": "boolean"
        },
        "isAutogenerated": {
          "type": "boolean"
        },
        "realWorkstationName": {
          "type": "string"
        },
        "licenseType": {
          "type": "string",
          "description": "Valid values are: PER_SERVER, PER_JOB"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        }
      }
    },
    "JobHistoryRunFilter": {
      "properties": {
        "name": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "jobstreamName": {
          "type": "string"
        },
        "jobstreamWorkstationName": {
          "type": "string"
        },
        "runDateRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "runInRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "isLateStart": {
          "type": "boolean"
        },
        "isLateEnd": {
          "type": "boolean"
        },
        "isLongDuration": {
          "type": "boolean"
        },
        "isDelayed": {
          "type": "boolean"
        },
        "statusList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The Job Run Status List. Valid values are: ABEND, ERROR, SUCCESSFUL, UNKNOWN, CANCELED"
        },
        "rerunTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The Job Rerun Type List. Valid values are: RERUN, RERUN_EVERY, RERUN_FROM, RECOVERY, REGULAR"
        },
        "status": {
          "type": "string",
          "description": "The Job Run Status List. Valid values are: ABEND, ERROR, SUCCESSFUL, UNKNOWN, CANCELED"
        },
        "jobstreamId": {
          "type": "string"
        },
        "runCycleId": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        }
      }
    },
    "JobStartCondition": {
      "required": [
        "type",
        "interval",
        "jobDefinitionKey",
        "mappingExpression"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "jobStreamId": {
          "type": "string",
          "description": "Must reference an existing jobstream"
        },
        "jobStreamKey": {
          "$ref": "#/definitions/JobStreamKey",
          "description": "Must reference an existing jobstream"
        },
        "type": {
          "type": "string",
          "description": "Valid value is Job"
        },
        "alias": {
          "type": "string"
        },
        "interval": {
          "type": "integer",
          "format": "int64"
        },
        "jobDefinitionId": {
          "type": "string",
          "description": "Must reference an existing job definition"
        },
        "jobDefinitionKey": {
          "$ref": "#/definitions/JobDefinitionKey",
          "description": "Must reference an existing job definition"
        },
        "mappingExpression": {
          "type": "string"
        }
      }
    },
    "JobStatistics": {
      "properties": {
        "id": {
          "type": "string"
        },
        "jobDefinitionKey": {
          "$ref": "#/definitions/JobDefinitionKey"
        },
        "jobDefinition": {
          "$ref": "#/definitions/JobDefinition"
        },
        "runCycleId": {
          "type": "string"
        },
        "abortedRuns": {
          "type": "integer",
          "format": "int32"
        },
        "longDurationRuns": {
          "type": "integer",
          "format": "int32"
        },
        "successfulRuns": {
          "type": "integer",
          "format": "int32"
        },
        "suppressedRuns": {
          "type": "integer",
          "format": "int32"
        },
        "lateStarts": {
          "type": "integer",
          "format": "int32"
        },
        "lateEnds": {
          "type": "integer",
          "format": "int32"
        },
        "totalReruns": {
          "type": "integer",
          "format": "int32"
        },
        "lastRunDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - Date of the latest job run."
        },
        "lastCPUTime": {
          "type": "integer",
          "format": "int64"
        },
        "lastElapsedTime": {
          "type": "integer",
          "format": "int64"
        },
        "minRunDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - Returns the minimum job run date and time."
        },
        "minCPUTime": {
          "type": "integer",
          "format": "int64"
        },
        "minElapsedTime": {
          "type": "integer",
          "format": "int64"
        },
        "maxRunDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - Returns the maximum job run date and time."
        },
        "maxCPUTime": {
          "type": "integer",
          "format": "int64"
        },
        "maxElapsedTime": {
          "type": "integer",
          "format": "int64"
        },
        "averageCPUTime": {
          "type": "integer",
          "format": "int64"
        },
        "averageElapsedTime": {
          "type": "integer",
          "format": "int64"
        },
        "totalCPUTime": {
          "type": "integer",
          "format": "int64"
        },
        "totalElapsedTime": {
          "type": "integer",
          "format": "int64"
        },
        "variance": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "JobStreamKey": {
      "required": [
        "name",
        "workstationName"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Alphanumeric characters. Starting with alphabetic character. '-' and '_' characters allowed. Blank spaces not allowed. Maximum length 16 characters."
        },
        "workstationName": {
          "type": "string",
          "description": "Must reference an existing workstation or class"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. It must be GMT midnight, but the meaning is 'start of day'. Values stored in the database are truncated to GMT midnight."
        },
        "isDraft": {
          "type": "boolean"
        },
        "isGroup": {
          "type": "boolean"
        },
        "folderName": {
          "type": "string",
          "description": "Must reference an existing folder. The value is null if it belongs to '/' folder."
        }
      }
    },
    "JobStreamHeader": {
      "required": [
        "key"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/JobStreamKey"
        },
        "description": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "timeZone": {
          "type": "string"
        },
        "validTo": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. Default is the validFrom value of the next version. This is a read-only field."
        },
        "nextTimeZone": {
          "type": "string",
          "description": "Default is the timeZone value of the next version. This is a read-only field."
        },
        "carryForward": {
          "type": "boolean",
          "description": "Default value is false. Default value is -1 (reserved as an unlimited value)."
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Allowed range is from -1 to 1024"
        },
        "groupName": {
          "type": "string"
        },
        "ownerName": {
          "type": "string"
        },
        "ownerDescription": {
          "type": "string"
        },
        "authorityGroup": {
          "type": "string"
        },
        "freeDaysCalendarName": {
          "type": "string"
        },
        "deadlineSmoothingFactor": {
          "type": "integer",
          "format": "int32"
        },
        "deadlineLimitFeedback": {
          "type": "integer",
          "format": "int32"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "JobStream": {
      "required": [
        "header"
      ],
      "properties": {
        "abstractId": {
          "type": "string"
        },
        "isMonitored": {
          "type": "boolean",
          "description": "Default value is false"
        },
        "timeRestrictions": {
          "$ref": "#/definitions/TimeRestrictions"
        },
        "comment": {
          "type": "string"
        },
        "externalDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependency"
          }
        },
        "externalConditionalDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependency"
          }
        },
        "interNetworkDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InterNetworkDependency"
          }
        },
        "fileDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDependency"
          }
        },
        "promptDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromptDependency"
          }
        },
        "resourceDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDependency"
          }
        },
        "conditionalJoins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionalJoin"
          }
        },
        "header": {
          "$ref": "#/definitions/JobStreamHeader"
        },
        "workstationId": {
          "type": "string"
        },
        "folderId": {
          "type": "string"
        },
        "onRequest": {
          "type": "boolean",
          "description": "Default value is false"
        },
        "hasMonitoredJob": {
          "type": "boolean",
          "description": "Default value is false"
        },
        "isSaturdayFree": {
          "type": "boolean",
          "description": "Default value is true"
        },
        "isSundayFree": {
          "type": "boolean",
          "description": "Default value is true"
        },
        "resolutionData": {
          "$ref": "#/definitions/ResolutionData"
        },
        "freeDaysCalendarId": {
          "type": "string",
          "description": "If specified, must reference an existing calendar"
        },
        "runningRuleAction": {
          "type": "string",
          "description": "Valid values are: DO_NOT_START, PARALLEL, ENQUEUE"
        },
        "variableTableId": {
          "type": "string"
        },
        "variableTableName": {
          "type": "string"
        },
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "runCycles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RunCycle"
          }
        },
        "workloadApplicationId": {
          "type": "string"
        },
        "fileStartCondition": {
          "$ref": "#/definitions/FileStartCondition",
          "description": "If specified, jobStartCondition must not be set."
        },
        "jobStartCondition": {
          "$ref": "#/definitions/JobStartCondition",
          "description": "If specified, fileStartCondition must not be set."
        },
        "triggerOnce": {
          "type": "boolean",
          "default": false,
          "description": "Default value is false"
        }
      }
    },
    "JobstreamFilter": {
      "properties": {
        "jobStreamName": {
          "type": "string"
        },
        "abstractId": {
          "type": "string"
        },
        "draft": {
          "type": "string",
          "description": "Default value is false"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "validTo": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "validIn": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss, selects the job streams whose validity period contains the time instant specified by the parameter."
        },
        "validInRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "workstationName": {
          "type": "string"
        },
        "folderName": {
          "type": "string"
        },
        "freeDaysCalendarName": {
          "type": "string"
        },
        "runcycleCalendarName": {
          "type": "string"
        },
        "jobstreamVariableTableName": {
          "type": "string",
          "description": "Selects job streams referencing the specified variable table directly."
        },
        "runcycleVariableTableName": {
          "type": "string"
        },
        "runcycleRunCycleGroupName": {
          "type": "string"
        },
        "variableTableName": {
          "type": "string",
          "description": "Selects job streams referencing the specified variable table either directly or indirectly through defined run cycles."
        },
        "jobName": {
          "type": "string"
        },
        "jobDefinitionName": {
          "type": "string"
        },
        "jobDefinitionworkstationName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileworkstationName": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceworkstationName": {
          "type": "string"
        },
        "promptName": {
          "type": "string"
        },
        "workloadApplicationName": {
          "type": "string",
          "description": "Selects JobStreams referencing the specified workload application directly."
        },
        "priorityRange": {
          "$ref": "#/definitions/IntegerRange"
        },
        "group": {
          "type": "boolean"
        },
        "groupName": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "authGroup": {
          "type": "string"
        },
        "monitored": {
          "type": "boolean"
        },
        "automation": {
          "type": "boolean"
        },
        "jobDefinitionTask": {
          "type": "string"
        },
        "wlmCritical": {
          "type": "boolean"
        },
        "wlmPolicy": {
          "type": "string"
        },
        "jobDefinitionSeName": {
          "type": "string"
        }
      }
    },
    "JobStreamInstancesFilter": {
      "properties": {
        "planId": {
          "type": "string"
        },
        "jobStreamId": {
          "type": "string"
        },
        "workstationId": {
          "type": "string"
        },
        "scheduledDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "status": {
          "type": "string",
          "description": "Valid values are: COMPLETED, NOT_COMPLETED, OBSOLETE"
        },
        "jobStreamName": {
          "type": "string"
        },
        "scheduledFromDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "scheduledToDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "JobKey": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "jobStreamKey": {
          "$ref": "#/definitions/JobStreamKey"
        }
      }
    },
    "JobHeader": {
      "required": [
        "key"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/JobKey"
        },
        "description": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "timeZone": {
          "type": "string"
        },
        "critical": {
          "type": "boolean"
        }
      }
    },
    "Job": {
      "required": [
        "header"
      ],
      "properties": {
        "abstractId": {
          "type": "string"
        },
        "isMonitored": {
          "type": "boolean"
        },
        "timeRestrictions": {
          "$ref": "#/definitions/TimeRestrictions"
        },
        "comment": {
          "type": "string"
        },
        "externalDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependency"
          }
        },
        "externalConditionalDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependency"
          }
        },
        "interNetworkDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InterNetworkDependency"
          }
        },
        "fileDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDependency"
          }
        },
        "promptDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromptDependency"
          }
        },
        "resourceDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDependency"
          }
        },
        "conditionalJoins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionalJoin"
          }
        },
        "header": {
          "$ref": "#/definitions/JobHeader"
        },
        "repeatInterval": {
          "type": "integer",
          "format": "int64"
        },
        "requiresConfirmation": {
          "type": "boolean"
        },
        "jobStreamId": {
          "type": "string"
        },
        "abstractJobStreamId": {
          "type": "string"
        },
        "jobDefinitionId": {
          "type": "string"
        },
        "jobDefinitionKey": {
          "$ref": "#/definitions/JobDefinitionKey"
        },
        "jobDefinition": {
          "$ref": "#/definitions/JobDefinition"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "internalDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalDependency"
          }
        },
        "internalConditionalDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalDependency"
          }
        },
        "conditionalDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionalDependency"
          }
        },
        "noOperation": {
          "type": "boolean"
        },
        "statisticsType": {
          "type": "string",
          "description": "The statistics type. Valid values are: AUTOMATIC, CUSTOM"
        },
        "pollingInterval": {
          "type": "integer",
          "format": "int64"
        },
        "pollingCondition": {
          "type": "string"
        }
      }
    },
    "JobFilter": {
      "properties": {
        "statisticsType": {
          "type": "string",
          "description": "The statistics type. Valid values are: AUTOMATIC, CUSTOM"
        },
        "jobId": {
          "type": "string"
        }
      }
    },
    "ModifyData": {
      "properties": {
        "modifiedBy": {
          "type": "string"
        },
        "modifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "LockData": {
      "properties": {
        "lockedBy": {
          "type": "string"
        },
        "lockedSession": {
          "type": "string"
        },
        "lockedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "StringMapObj": {
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "StringMap": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringMapObj"
          }
        }
      }
    },
    "TimeRange": {
      "properties": {
        "rangeStart": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "rangeEnd": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "TimeRestrictions": {
      "properties": {
        "isTimeDependent": {
          "type": "boolean"
        },
        "latestStartAction": {
          "type": "string",
          "description": "Valid values are: SUPPRESS, CONTINUE, CANCEL"
        },
        "maxDurationAction": {
          "type": "string",
          "description": "Valid values are: SUPPRESS, CONTINUE, CANCEL"
        },
        "minDurationAction": {
          "type": "string",
          "description": "Valid values are: ABEND, CONTINUE, CONFIRM"
        },
        "deadlineAction": {
          "type": "string",
          "description": "Can be defined only on Job. Valid value is: SUPPRESS"
        },
        "startOffset": {
          "type": "integer",
          "format": "int64"
        },
        "deadlineOffset": {
          "type": "integer",
          "format": "int64"
        },
        "latestStartOffset": {
          "type": "integer",
          "format": "int64"
        },
        "maxDuration": {
          "type": "integer",
          "format": "int64"
        },
        "minDuration": {
          "type": "integer",
          "format": "int64"
        },
        "numberOfOccurrences": {
          "type": "integer",
          "format": "int64"
        },
        "interval": {
          "type": "integer",
          "format": "int64"
        },
        "repeatInterval": {
          "type": "integer",
          "format": "int64"
        },
        "repeatEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "hoursList": {
          "type": "string"
        },
        "minutesList": {
          "type": "string"
        },
        "maxDurationType": {
          "type": "string",
          "description": "The OffsetType Type. Valid values are: DEFAULT, DAYS, WORKDAYS, WEEKDAYS, MINUTES, PERCENTAGE"
        },
        "minDurationType": {
          "type": "string",
          "description": "The OffsetType Type. Valid values are: DEFAULT, DAYS, WORKDAYS, WEEKDAYS, MINUTES, PERCENTAGE"
        },
        "frequency": {
          "type": "string",
          "description": "The frequencyWithinDayType Type. Valid values are: NONE, HOURLY, MINUTELY"
        },
        "perJobUntil": {
          "type": "boolean",
          "default": false,
          "description": "Default value is false"
        },
        "zosDeadlineAction": {
          "type": "string",
          "description": "JobDeadlineAction Type. Valid values are: ALERT, COMPLETE, NOP, ERROR, BLANK. For z/OS only"
        },
        "notStartedAlertTime": {
          "type": "integer",
          "format": "int64",
          "description": "For z/OS only"
        },
        "notStartedActionTime": {
          "type": "integer",
          "format": "int64",
          "description": "For z/OS only"
        },
        "notStartedAction": {
          "type": "string",
          "description": "JobDeadlineAction Type. Valid values are: ALERT, COMPLETE, NOP, ERROR, BLANK. For z/OS only"
        }
      }
    },
    "DeployWorkloadApplicationTemplate": {
      "properties": {
        "xml": {
          "type": "string"
        },
        "mapping": {
          "type": "string"
        },
        "force": {
          "type": "boolean",
          "description": "True if the existing workload application template must be replaced"
        }
      }
    },
    "OutputCondition": {
      "properties": {
        "conditionId": {
          "type": "string"
        },
        "jobDefinitionModelId": {
          "type": "string"
        },
        "jobDefinitionModelKey": {
          "$ref": "#/definitions/JobDefinitionKey"
        },
        "conditionName": {
          "type": "string"
        },
        "mappingExpression": {
          "type": "string"
        },
        "succCondition": {
          "type": "boolean"
        }
      }
    },
    "ResolutionData": {
      "properties": {
        "resolutionRule": {
          "type": "string",
          "description": "The resolution rule. Valid values are: NEAREST_BEFORE, IN_SAME_DAY, IN_ABSOLUTE_INTERVAL, IN_RELATIVE_INTERVAL, CLOSEST_PRECEDING, SAME_DAY"
        },
        "startOffset": {
          "type": "integer",
          "format": "int64"
        },
        "endOffset": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InternalDependency": {
      "properties": {
        "jobId": {
          "type": "string"
        },
        "jobKey": {
          "$ref": "#/definitions/JobKey"
        },
        "taskData": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "transportTime": {
          "type": "integer",
          "format": "int64"
        },
        "reportPrintOption": {
          "type": "string",
          "description": "The print option. Valid values are: ALWAYS, CONDITIONAL"
        },
        "conditionalDependencyId": {
          "type": "string",
          "description": "For internal conditional dependency ONLY"
        },
        "joinId": {
          "type": "string",
          "description": "For internal conditional dependency ONLY"
        },
        "statusConditions": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A status condition. Valid values are: STARTED, COMPLETED, DUMMY_COMPLETED, ERROR, SUCC, FAIL, SUPPRESS. For internal conditional dependency ONLY"
          }
        },
        "outputConditions": {
          "type": "array",
          "description": "For internal conditional dependency ONLY",
          "items": {
            "$ref": "#/definitions/OutputCondition"
          }
        }
      }
    },
    "ExternalDependency": {
      "properties": {
        "abstractJobStreamId": {
          "type": "string"
        },
        "abstractJobStreamKey": {
          "$ref": "#/definitions/JobStreamKey"
        },
        "abstractJobId": {
          "type": "string"
        },
        "abstractJobKey": {
          "$ref": "#/definitions/JobKey"
        },
        "resolutionData": {
          "$ref": "#/definitions/ResolutionData"
        },
        "mandatoryOption": {
          "type": "string",
          "description": "The mandatory option. Valid values are: NO, PLAN, CONTROL"
        },
        "conditionalDependencyId": {
          "type": "string",
          "description": "For external conditional dependency ONLY"
        },
        "joinId": {
          "type": "string",
          "description": "For external conditional dependency ONLY"
        },
        "statusConditions": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A status condition. Valid values are: STARTED, COMPLETED, DUMMY_COMPLETED, ERROR, SUCC, FAIL, SUPPRESS. For internal conditional dependency ONLY"
          }
        },
        "outputConditions": {
          "type": "array",
          "description": "For external conditional dependency ONLY",
          "items": {
            "$ref": "#/definitions/OutputCondition"
          }
        }
      }
    },
    "ConditionalJobDependency": {
      "required": [
        "conditionCheckType",
        "conditionLogicalOperatorType",
        "conditionStatus"
      ],
      "properties": {
        "abstractJobId": {
          "type": "string"
        },
        "abstractJobKey": {
          "$ref": "#/definitions/JobKey"
        },
        "jobWorkstationName": {
          "type": "string"
        },
        "taskData": {
          "type": "string"
        },
        "isExternal": {
          "type": "boolean"
        },
        "conditionCheckType": {
          "type": "string",
          "description": "Valid values are: RETURN_CODE_TYPE, STATUS_TYPE"
        },
        "conditionLogicalOperatorType": {
          "type": "string",
          "description": "Valid values are: GE_TYPE, GT_TYPE, LE_TYPE, LT_TYPE, EQ_TYPE, NE_TYPE, RG_TYPE"
        },
        "returnCodeValue": {
          "type": "string"
        },
        "returnCodeValue2": {
          "type": "string"
        },
        "conditionStatus": {
          "type": "string",
          "description": "The status conditions. Valid values are: STARTED, COMPLETED, DUMMY_COMPLETED, ERROR, SUCC, FAIL, SUPPRESS"
        },
        "procedureStep": {
          "type": "string"
        },
        "stepName": {
          "type": "string"
        },
        "resolutionData": {
          "$ref": "#/definitions/ResolutionData"
        },
        "mandatoryOption": {
          "type": "string",
          "description": "The mandatory option. Valid values are: NO, PLAN, CONTROL"
        }
      }
    },
    "ConditionalDependency": {
      "properties": {
        "conditionId": {
          "type": "string"
        },
        "requiresAll": {
          "type": "boolean"
        },
        "subsetValue": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "conditionalJobDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionalJobDependency"
          }
        }
      }
    },
    "InterNetworkDependency": {
      "properties": {
        "networkAgentId": {
          "type": "string"
        },
        "networkAgentName": {
          "type": "string"
        },
        "dependency": {
          "type": "string"
        }
      }
    },
    "FileDependency": {
      "required": [
        "fileName",
        "workstationName"
      ],
      "properties": {
        "fileId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "workstationId": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "qualifiers": {
          "type": "string"
        }
      }
    },
    "PromptDependency": {
      "properties": {
        "promptId": {
          "type": "string"
        },
        "prompt": {
          "$ref": "#/definitions/Prompt"
        },
        "adHoc": {
          "type": "boolean",
          "description": "If true, the 'prompt' field is required. Otherwise, the 'promptId' field is required."
        }
      }
    },
    "ResourceDependency": {
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "resourceKey": {
          "$ref": "#/definitions/ResourceKey"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "resourceQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "allocationType": {
          "type": "string",
          "description": "The allocation type. Valid values are: SHARED, EXCLUSIVE"
        },
        "onError": {
          "type": "string",
          "description": "The error management. Valid values are: KEEP, RELEASE, DEFAULT"
        },
        "actionOnComplete": {
          "type": "string",
          "description": "The action after completion. Valid values are: DEFAULT, YES, NO, RESET"
        }
      }
    },
    "ConditionalJoin": {
      "properties": {
        "joinId": {
          "type": "string"
        },
        "jobStreamId": {
          "type": "string"
        },
        "jobStreamKey": {
          "$ref": "#/definitions/JobStreamKey"
        },
        "jobId": {
          "type": "string"
        },
        "jobKey": {
          "$ref": "#/definitions/JobKey"
        },
        "joinName": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "externalConditionalDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependency"
          }
        },
        "internalConditionalDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalDependency"
          }
        }
      }
    },
    "ObjectProperties": {
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cpus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ObjectRule": {
      "properties": {
        "include": {
          "$ref": "#/definitions/ObjectProperties"
        },
        "exclude": {
          "$ref": "#/definitions/ObjectProperties"
        }
      }
    },
    "JobProperties": {
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cpus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jcltypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jcls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "JobRule": {
      "properties": {
        "include": {
          "$ref": "#/definitions/JobProperties"
        },
        "exclude": {
          "$ref": "#/definitions/JobProperties"
        }
      }
    },
    "NameObjectProperties": {
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NameObjectRule": {
      "properties": {
        "include": {
          "$ref": "#/definitions/NameObjectProperties"
        },
        "exclude": {
          "$ref": "#/definitions/NameObjectProperties"
        }
      }
    },
    "UserobjProperties": {
      "properties": {
        "logons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cpus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserobjRule": {
      "properties": {
        "include": {
          "$ref": "#/definitions/UserobjProperties"
        },
        "exclude": {
          "$ref": "#/definitions/UserobjProperties"
        }
      }
    },
    "ActionProperties": {
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ActionRule": {
      "properties": {
        "include": {
          "$ref": "#/definitions/ActionProperties"
        },
        "exclude": {
          "$ref": "#/definitions/ActionProperties"
        }
      }
    },
    "EventProperties": {
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EventObjectRule": {
      "properties": {
        "include": {
          "$ref": "#/definitions/EventProperties"
        },
        "exclude": {
          "$ref": "#/definitions/EventProperties"
        }
      }
    },
    "RoleProperties": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "SecurityKey": {
      "properties": {
        "keyText": {
          "type": "string"
        },
        "keyPrefix": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "OperatorInstructionKey": {
      "properties": {
        "jobStreamName": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "validTo": {
          "type": "string",
          "format": "date"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "OperatorInstructionHeader": {
      "required": [
        "OperatorInstructionKey"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "validfrom": {
          "type": "string",
          "format": "date"
        },
        "OperatorInstructionKey": {
          "$ref": "#/definitions/OperatorInstructionKey"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        }
      }
    },
    "OperatorInstruction": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/OperatorInstructionHeader"
        },
        "textLines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperatorInstructionFilter": {
      "properties": {
        "jobstreamName": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss."
        },
        "validTo": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss."
        },
        "validInRange": {
          "$ref": "#/definitions/TimeRange"
        }
      }
    },
    "PeriodHeader": {
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        },
        "variableTable": {
          "type": "string"
        },
        "intervalLength": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "PeriodInterval": {
      "properties": {
        "originDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Period": {
      "properties": {
        "header": {
          "$ref": "#/definitions/PeriodHeader"
        },
        "intervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PeriodInterval"
          }
        }
      }
    },
    "PeriodFilter": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Prompt": {
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "dbaId": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Required for predefined prompts, null for recovery and ad-hoc ones. Alphanumeric characters. Starting with alphabetic character. '-' and '_' characters allowed. Blank spaces not allowed. Not longer than 8 characters."
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "PromptFilter": {
      "properties": {
        "promptName": {
          "type": "string"
        },
        "workloadApplicationName": {
          "type": "string",
          "description": "Selects prompts referencing the specified workload application directly."
        }
      }
    },
    "QueryFilterModel": {
      "properties": {
        "filters": {
          "$ref": "#/definitions/FiltersModel"
        }
      }
    },
    "FiltersModel": {
      "properties": {
        "workstationFilter": {
          "$ref": "#/definitions/WorkstationFilter"
        },
        "workstationClassFilter": {
          "$ref": "#/definitions/WorkstationClassFilter"
        },
        "variableTableFilter": {
          "$ref": "#/definitions/VariableTableFilter"
        },
        "variableFilter": {
          "$ref": "#/definitions/VariableFilter"
        },
        "domainFilter": {
          "$ref": "#/definitions/DomainFilter"
        },
        "promptFilter": {
          "$ref": "#/definitions/PromptFilter"
        },
        "resourceFilter": {
          "$ref": "#/definitions/ResourceFilter"
        },
        "calendarFilter": {
          "$ref": "#/definitions/CalendarFilter"
        },
        "windowsUserFilter": {
          "$ref": "#/definitions/WindowsUserFilter"
        },
        "runCycleGroupFilter": {
          "$ref": "#/definitions/RunCycleGroupFilter"
        },
        "jobDefinitionFilter": {
          "$ref": "#/definitions/JobDefinitionFilter"
        },
        "jobFilter": {
          "$ref": "#/definitions/JobFilter"
        },
        "jobstreamFilter": {
          "$ref": "#/definitions/JobstreamFilter"
        },
        "jobHistoryRunFilter": {
          "$ref": "#/definitions/JobHistoryRunFilter"
        },
        "workloadApplicationTemplateFilter": {
          "$ref": "#/definitions/WorkloadApplicationTemplateFilter"
        },
        "deployedWorkloadApplicationFilter": {
          "$ref": "#/definitions/WorkloadApplicationFilter"
        },
        "jobDetailedStatisticsFilter": {
          "$ref": "#/definitions/JobDetailedStatisticFilter"
        },
        "eventRuleFilter": {
          "$ref": "#/definitions/EventRuleFilter"
        },
        "jobStreamInstancesFilter": {
          "$ref": "#/definitions/JobStreamInstancesFilter"
        },
        "jclFilter": {
          "$ref": "#/definitions/JCLFilter"
        },
        "periodFilter": {
          "$ref": "#/definitions/PeriodFilter"
        },
        "workstationClosedIntervalFilter": {
          "$ref": "#/definitions/WorkstationClosedIntervalFilter"
        },
        "eventTriggeredTrackingFilter": {
          "$ref": "#/definitions/EventTriggeredTrackingFilter"
        },
        "operatorInstructionFilter": {
          "$ref": "#/definitions/OperatorInstructionFilter"
        },
        "zDestinationFilter": {
          "$ref": "#/definitions/ZDestinationFilter"
        },
        "folderFilter": {
          "$ref": "#/definitions/FolderFilter"
        }
      }
    },
    "QueryModelContext": {
      "properties": {
        "filters": {
          "$ref": "#/definitions/FiltersModel"
        },
        "objectsKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of keys of the latest objects retrieved"
        },
        "howMany": {
          "type": "integer",
          "description": "The total number of the items to be returned - used for query next API"
        }
      }
    },
    "RCGPeriod": {
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The RCGPeriod Type. Valid values are: NON_CYCLIC, CYCLIC_ALL, CYCLIC_WORKDAY, RUNCYCLEGROUP_PERIOD"
        },
        "name": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "ResourceKey": {
      "required": [
        "name",
        "workstationName"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        }
      }
    },
    "ResourceBaseConstraints": {
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "isAvailable": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "usedFor": {
          "type": "string"
        },
        "actionOnError": {
          "type": "string"
        },
        "actionOnComplete": {
          "type": "string"
        },
        "maxUsageLimitType": {
          "type": "string"
        },
        "maxUsageLimitValue": {
          "type": "integer"
        },
        "zOSHiperbatch": {
          "type": "boolean"
        }
      }
    },
    "ResourceHeader": {
      "required": [
        "key"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "defaultConstraints": {
          "$ref": "#/definitions/ResourceBaseConstraints"
        },
        "key": {
          "$ref": "#/definitions/ResourceKey"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "Resource": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/ResourceHeader"
        },
        "workstationId": {
          "type": "string"
        },
        "dbaId": {
          "type": "string"
        },
        "ownerName": {
          "type": "string"
        },
        "workloadApplicationId": {
          "type": "string"
        },
        "connectedWorkstationLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkstationLink"
          }
        },
        "resourceAvailabilityIntervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceAvailabilityInterval"
          }
        }
      }
    },
    "ResourceAvailabilityInterval": {
      "properties": {
        "isStandardIntervalType": {
          "type": "boolean"
        },
        "isDayOfWeekIntervalType": {
          "type": "boolean"
        },
        "isDateIntervalType": {
          "type": "boolean"
        },
        "intervalStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "intervalEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "intervalValidityDayOfWeek": {
          "type": "integer"
        },
        "intervalValidityDate": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "isAvailable": {
          "type": "string"
        },
        "connectedWorkstationLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkstationLink"
          }
        }
      }
    },
    "ResourceFilter": {
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "workloadApplicationName": {
          "type": "string",
          "description": "Selects resources referencing the specified workload application directly."
        },
        "groupId": {
          "type": "string"
        },
        "hiperBatch": {
          "type": "boolean"
        },
        "matchingCriteria": {
          "type": "string"
        }
      }
    },
    "RunCycleGroupHeader": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "timeRestrictions": {
          "$ref": "#/definitions/TimeRestrictions"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "RunCycleGroup": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/RunCycleGroupHeader"
        },
        "owner": {
          "type": "string"
        },
        "freeDaysCalendarName": {
          "type": "string"
        },
        "saturdayFree": {
          "type": "boolean"
        },
        "sundayFree": {
          "type": "boolean"
        },
        "variableTableId": {
          "type": "string"
        },
        "calendarId": {
          "type": "string"
        },
        "runCycles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RunCycle"
          },
          "description": "A valid object must contain at least one RunCycle"
        },
        "variableTableName": {
          "type": "string"
        },
        "workloadApplicationId": {
          "type": "string"
        }
      }
    },
    "RunCycleGroupFilter": {
      "properties": {
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "calendar": {
          "type": "string"
        },
        "variableTable": {
          "type": "string"
        },
        "runCycleName": {
          "type": "string"
        },
        "runCycleCalendar": {
          "type": "string"
        },
        "runCycleVariableTable": {
          "type": "string"
        },
        "subsetId": {
          "type": "string"
        },
        "runCycleCalendarName": {
          "type": "string"
        },
        "runCycleVariableTableName": {
          "type": "string"
        },
        "workloadApplicationName": {
          "type": "string",
          "description": "Selects RunCycleGroups referencing the specified workload application directly."
        }
      }
    },
    "RunCycleExceptions": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The RunCycle Type. Valid values are: SIMPLE, CALENDAR, RULE, GROUP, NORMAL, NEGATIVE, EXCLUSION, RULE_INCLUSIVE, RULE_EXCLUSIVE"
        },
        "iCalendar": {
          "type": "string"
        },
        "calendarId": {
          "type": "string"
        },
        "calendarName": {
          "type": "string"
        },
        "offsetValue": {
          "type": "integer"
        },
        "offsetType": {
          "type": "string",
          "description": "The OffsetType Type. Valid values are: DEFAULT, DAYS, WORKDAYS, WEEKDAYS, MINUTES, PERCENTAGE"
        }
      }
    },
    "AvailabilityCalendarInterval": {
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RunCycle": {
      "required": [
        "name",
        "type",
        "validFrom",
        "freeDaysRule"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The RunCycle Type. Valid values are: SIMPLE, CALENDAR, RULE, GROUP, NORMAL, NEGATIVE, EXCLUSION, RULE_INCLUSIVE, RULE_EXCLUSIVE"
        },
        "inclusive": {
          "type": "boolean"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "validTo": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "timeRestrictions": {
          "$ref": "#/definitions/TimeRestrictions"
        },
        "iCalendar": {
          "type": "string",
          "description": "Required if type is not CALENDAR; must be null if type is CALENDAR. Must comply with the RFC2445 standard."
        },
        "calendarId": {
          "type": "string"
        },
        "runCycleGroupId": {
          "type": "string"
        },
        "availabilityValue": {
          "type": "string"
        },
        "offsetValue": {
          "type": "integer",
          "description": "Must be 0 if type is not CALENDAR"
        },
        "priority": {
          "type": "integer"
        },
        "variableTableId": {
          "type": "string"
        },
        "jobStreamId": {
          "type": "string"
        },
        "availabilityCalendarId": {
          "type": "string"
        },
        "parentRunCycleGroupId": {
          "type": "string"
        },
        "subsetId": {
          "type": "string"
        },
        "subsetOperator": {
          "type": "string"
        },
        "repeatEveryTime": {
          "type": "integer",
          "format": "int64"
        },
        "repeatEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "calendarName": {
          "type": "string"
        },
        "variableTableName": {
          "type": "string",
          "description": "Must be null if run cycle is exclusive (inclusive=false)"
        },
        "runCycleGroupName": {
          "type": "string"
        },
        "runCycleExceptions": {
          "$ref": "#/definitions/RunCycleExceptions"
        },
        "offsetType": {
          "type": "string",
          "description": "The OffsetType Type. Valid values are: DEFAULT, DAYS, WORKDAYS, WEEKDAYS, MINUTES, PERCENTAGE. Required if type is not CALENDAR; must be null if type is CALENDAR."
        },
        "freeDaysRule": {
          "type": "string",
          "description": "The FreeDaysRule Type. Valid values are: NONE, NEAREST_BEFORE, NEAREST_AFTER, DO_NOT_SELECT, DO_NOT_COUNT"
        },
        "intervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailabilityCalendarInterval"
          }
        }
      }
    },
    "SecurityDomain": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        },
        "type": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/SecurityDomainFilter"
        }
      }
    },
    "SecurityDomainFilter": {
      "properties": {
        "common": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectRule"
          }
        },
        "job": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobRule"
          }
        },
        "schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectRule"
          }
        },
        "cpu": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectRule"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectRule"
          }
        },
        "prompt": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameObjectRule"
          }
        },
        "calendar": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameObjectRule"
          }
        },
        "file": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameObjectRule"
          }
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectRule"
          }
        },
        "report": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameObjectRule"
          }
        },
        "runcygrp": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameObjectRule"
          }
        },
        "userobj": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserobjRule"
          }
        },
        "vartable": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameObjectRule"
          }
        },
        "action": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionRule"
          }
        },
        "event": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventObjectRule"
          }
        },
        "eventrule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameObjectRule"
          }
        },
        "wkldappl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameObjectRule"
          }
        },
        "lob": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameObjectRule"
          }
        },
        "securitydomain": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameObjectRule"
          }
        }
      }
    },
    "SecurityRole": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        },
        "permissions": {
          "$ref": "#/definitions/SecurityRolePermissions"
        }
      }
    },
    "SecurityRolePermissions": {
      "properties": {
        "job": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schedule": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cpu": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "prompt": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "calendar": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "file": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parameter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "report": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "runcygrp": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userobj": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vartable": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "event": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "eventrule": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "wkldappl": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lob": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VariableTableHeader": {
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "VariableTable": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/VariableTableHeader"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "workloadApplicationId": {
          "type": "string"
        },
        "ownerName": {
          "type": "string"
        }
      }
    },
    "VariableTableFilter": {
      "properties": {
        "isDefaultTable": {
          "type": "boolean"
        },
        "variableTableName": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        },
        "workloadApplicationName": {
          "type": "string",
          "description": "Selects variable tables referencing the specified workload application directly."
        }
      }
    },
    "Variable": {
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "variableTableId": {
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/VariableKey"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "VariableKey": {
      "properties": {
        "name": {
          "type": "string"
        },
        "variableTableName": {
          "type": "string"
        },
        "isInDefaultTable": {
          "type": "boolean"
        }
      }
    },
    "VariableFilter": {
      "properties": {
        "variableTableName": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        }
      }
    },
    "WindowsUserKey": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        }
      }
    },
    "WindowsUser": {
      "required": [
        "isPasswordEncrypted"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "workstationId": {
          "type": "string"
        },
        "isPasswordEncrypted": {
          "type": "boolean"
        },
        "password": {
          "type": "string",
          "description": "The Password is a required parameter to create the windows user object, but it is not required to update the windows user object."
        },
        "key": {
          "$ref": "#/definitions/WindowsUserKey"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "WindowsUserFilter": {
      "properties": {
        "userName": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        }
      }
    },
    "WorkloadApplicationTemplateHeader": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "WorkloadApplicationTemplateItem": {
      "properties": {
        "jobStreamId": {
          "type": "string"
        },
        "jobStreamName": {
          "type": "string"
        },
        "workstations": {
          "type": "string"
        }
      }
    },
    "WorkloadApplicationTemplate": {
      "required": [
        "header",
        "jobStreams"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/WorkloadApplicationTemplateHeader"
        },
        "jobStreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadApplicationTemplateItem"
          }
        }
      }
    },
    "WorkloadApplicationTemplateFilter": {
      "properties": {
        "workloadApplicationTemplateName": {
          "type": "string",
          "description": "Selects workload application template referencing the specified workload application template directly."
        },
        "workloadApplicationTemplateOwnerName": {
          "type": "string",
          "description": "Selects workload application template referencing the specified workload application template directly."
        },
        "jobStreamName": {
          "type": "string"
        }
      }
    },
    "WorkloadApplicationHeader": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "deployedFrom": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "WorkloadApplication": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/WorkloadApplicationHeader"
        },
        "distJobDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobDefinition"
          }
        },
        "jobStreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobStream"
          }
        },
        "variableTables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariableTable"
          }
        },
        "calendars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Calendar"
          }
        },
        "prompts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Prompt"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "runCycleGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RunCycleGroup"
          }
        },
        "mapping": {
          "type": "string"
        },
        "xmlObject": {
          "type": "string"
        }
      }
    },
    "WorkloadApplicationFilter": {
      "properties": {
        "workloadApplicationName": {
          "type": "string",
          "description": "Selects workload application referencing the specified workload application directly."
        },
        "workloadApplicationOwnerName": {
          "type": "string",
          "description": "Selects workload application referencing the specified workload application directly."
        }
      }
    },
    "WorkstationClassHeader": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "includeInPlan": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        }
      }
    },
    "WorkstationClass": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/WorkstationClassHeader"
        },
        "allWorkstationsIncluded": {
          "type": "boolean"
        },
        "workstationLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkstationLink"
          }
        }
      }
    },
    "WorkstationClassFilter": {
      "properties": {
        "workstationClassName": {
          "type": "string"
        }
      }
    },
    "WorkstationClosedInterval": {
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date when all workstations are unavailable."
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "toTime": {
          "type": "integer",
          "format": "int64",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "WorkstationClosedIntervalFilter": {
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "dateRange": {
          "$ref": "#/definitions/TimeRange"
        }
      }
    },
    "WorkstationHeader": {
      "required": [
        "name",
        "nodeName",
        "securityLevel",
        "type",
        "os",
        "tcpPort"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "includeInPlan": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "lockData": {
          "$ref": "#/definitions/LockData"
        },
        "type": {
          "type": "string",
          "description": "The Workstation Type. Valid values are: MANAGER, FTA, XA, SA, WORKLOAD_BROKER, AGENT, POOL, DYNAMIC_POOL, REMOTE_ENGINE, GENERAL, COMPUTER, PRINTER, ZCENTRIC"
        },
        "os": {
          "type": "string",
          "description": "The Workstation Operating System. Valid values are: WINDOWS, UNIX, ZOS, LINUX, AIX, HPUX, SOLARIS, AS400, WEB, OTHER"
        },
        "timeZone": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "securityLevel": {
          "type": "string",
          "description": "The Workstation Security Level. This field is required for all the Workstation Types except XA, POOL, DYNAMIC POOL, WORKLOAD_BROKER. Valid values are: ON, NONE, ENABLED, FORCE. If the Workstation type is REMOTE_ENGINE the securityLevel must be either HTTP or HTTPS."
        },
        "behindFirewall": {
          "type": "boolean"
        },
        "sslPort": {
          "type": "integer"
        },
        "tcpPort": {
          "type": "integer"
        },
        "remoteEnginePort": {
          "type": "integer"
        },
        "domainName": {
          "type": "string",
          "description": "If specified, it must refer to an existing domain. If the Workstation Type is XA, the domainName must be null."
        },
        "remoteEngineType": {
          "type": "string",
          "description": "Valid values are: DISTRIBUTED,ZOS,DEFAULT"
        },
        "licenseType": {
          "type": "string",
          "description": "Valid values are: PER_SERVER, PER_JOB"
        }
      }
    },
    "WorkstationLink": {
      "properties": {
        "workstationId": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        }
      }
    },
    "Workstation": {
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/WorkstationHeader"
        },
        "autoLink": {
          "type": "boolean"
        },
        "fullStatus": {
          "type": "boolean",
          "description": "This field must be set to TRUE if the Workstation Type specified in the WorkstationHeader object is MANAGER."
        },
        "server": {
          "type": "string"
        },
        "accessMethod": {
          "type": "string",
          "description": "This field is required when the Workstation Type specified in the WorkstationHeader object is XA. Access Method is the name of a method file that resides in the TWShome/methods directory on the agent host workstation. For local UNIX extended agents, the method name is unixlocl. For remote UNIX extended agents the method name is unixrsh. For network agents, the method name is netmth."
        },
        "domainId": {
          "type": "string"
        },
        "isHostedByMaster": {
          "type": "boolean"
        },
        "isHostedByManager": {
          "type": "boolean"
        },
        "hostWorkstationId": {
          "type": "string"
        },
        "variableTableId": {
          "type": "string"
        },
        "requirements": {
          "type": "string"
        },
        "agentLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkstationLink"
          }
        },
        "hostWorkstationName": {
          "type": "string",
          "description": "This field is required when the Workstation Type specified in the WorkstationHeader object is XA, AGENT, POOL, DYNAMIC_POOL, REMOTE_ENGINE. The referenced host workstation must be of type WORKLOAD_BROKER."
        },
        "variableTableName": {
          "type": "string"
        },
        "workstationAvailabilityIntervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkstationAvailabilityInterval"
          }
        },
        "zosAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkstationZOSAttributes"
          }
        },
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Destination"
          }
        }
      }
    },
    "WorkstationFilter": {
      "properties": {
        "workstationType": {
          "type": "string",
          "description": "The Workstation Type. Valid values are: MANAGER, FTA, XA, SA, WORKLOAD_BROKER, AGENT, POOL, DYNAMIC_POOL, REMOTE_ENGINE, GENERAL, COMPUTER, PRINTER, ZCENTRIC"
        },
        "workstationName": {
          "type": "string"
        },
        "workstationOperatingSystem": {
          "type": "string",
          "description": "The Workstation Operating System. Valid values are: WINDOWS, UNIX, ZOS, LINUX, AIX, HPUX, SOLARIS, AS400, WEB, OTHER"
        },
        "workstationOperatingSystemList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The Workstation Operating System. Valid values are: WINDOWS, UNIX, ZOS, LINUX, AIX, HPUX, SOLARIS, AS400, WEB, OTHER"
        },
        "workstationAccessMethod": {
          "type": "string"
        },
        "workstationDomainName": {
          "type": "string"
        },
        "hostWorkstationName": {
          "type": "string"
        },
        "variableTableName": {
          "type": "string"
        },
        "workstationTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The Workstation Type. Valid values are: MANAGER, FTA, XA, SA, WORKLOAD_BROKER, AGENT, POOL, DYNAMIC_POOL, REMOTE_ENGINE, GENERAL, COMPUTER, PRINTER, ZCENTRIC"
        },
        "reportingAttributeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "destination": {
          "type": "string"
        },
        "isFaultTolerant": {
          "type": "boolean"
        },
        "supportedTaskType": {
          "type": "string"
        },
        "isAutomation": {
          "type": "boolean"
        },
        "isWait": {
          "type": "boolean"
        },
        "isVirtual": {
          "type": "boolean"
        },
        "isZCentric": {
          "type": "boolean"
        },
        "remoteEngineType": {
          "type": "string"
        },
        "isDynamic": {
          "type": "boolean"
        }
      }
    },
    "WorkstationAvailabilityInterval": {
      "properties": {
        "intervalStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "intervalEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "intervalValidityDayOfWeek": {
          "type": "integer",
          "format": "int32"
        },
        "zosNumberOfParallelServers": {
          "type": "integer",
          "format": "int32"
        },
        "zosR1Capacity": {
          "type": "integer",
          "format": "int32"
        },
        "zosR2Capacity": {
          "type": "integer",
          "format": "int32"
        },
        "isStandardIntervalType": {
          "type": "boolean"
        },
        "isDayOfWeekIntervalType": {
          "type": "boolean"
        },
        "isDateIntervalType": {
          "type": "boolean"
        },
        "isClosed": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "alternateWorkstationName": {
          "type": "string"
        },
        "intervalValidityDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "WorkstationZOSAttributes": {
      "properties": {
        "isSplittable": {
          "type": "boolean"
        },
        "isJobSetupAllowed": {
          "type": "boolean"
        },
        "isStartedTaskSupported": {
          "type": "boolean"
        },
        "isWTOSupported": {
          "type": "boolean"
        },
        "isWait": {
          "type": "boolean"
        },
        "defaultTransportTime": {
          "type": "integer"
        },
        "defaultJobDuration": {
          "type": "integer",
          "format": "int32"
        },
        "printoutRouting": {
          "type": "string"
        },
        "suReDatasetName": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "parallelServersUsage": {
          "type": "string"
        },
        "server1Name": {
          "type": "string"
        },
        "server1Usage": {
          "type": "string"
        },
        "server2Name": {
          "type": "string"
        },
        "server2Usage": {
          "type": "string"
        },
        "accessMethodPort": {
          "type": "integer"
        },
        "accessMethodNodeAddress": {
          "type": "string"
        },
        "supportedTaskTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultUsername": {
          "type": "string"
        },
        "defaultAccessMethod": {
          "type": "string"
        },
        "passwordSpecified": {
          "type": "string",
          "description": "character type"
        },
        "isBroker": {
          "type": "boolean"
        },
        "brokerAgentPoolName": {
          "type": "string"
        },
        "brokerDynamicPool": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "extendedStatus": {
          "type": "string"
        },
        "rerouteMode": {
          "type": "boolean"
        },
        "controlOnServers": {
          "type": "boolean"
        },
        "server1UsedforControl": {
          "type": "boolean"
        },
        "server2UsedforControl": {
          "type": "boolean"
        },
        "server1NumberInUse": {
          "type": "integer"
        },
        "server2NumberInUse": {
          "type": "integer"
        },
        "reportingAttribute": {
          "type": "string"
        },
        "completedJobSummary": {
          "$ref": "#/definitions/JobSummaryInfo"
        },
        "interruptedJobSummary": {
          "$ref": "#/definitions/JobSummaryInfo"
        },
        "startedJobSummary": {
          "$ref": "#/definitions/JobSummaryInfo"
        },
        "readyJobSummary": {
          "$ref": "#/definitions/JobSummaryInfo"
        },
        "waitingJobSummary": {
          "$ref": "#/definitions/JobSummaryInfo"
        },
        "supprByCondJobSummary": {
          "$ref": "#/definitions/JobSummaryInfo"
        },
        "isVirtual": {
          "type": "boolean"
        },
        "isZAgent": {
          "type": "boolean"
        },
        "remoteEngineType": {
          "type": "string",
          "description": "Valid values are DISTRIBUTED, ZOS, DEFAULT"
        },
        "isDynamic": {
          "type": "boolean"
        }
      }
    },
    "CriticalJobStats": {
      "properties": {
        "numberOfNotCompletedJobsOnCrithPath": {
          "type": "integer",
          "description": "The number of not completed jobs on critical path. Read-Only attribute."
        },
        "numberOfCompletedCriticalJobsPred": {
          "type": "integer",
          "description": "The number of completed Critical Job predecessors. Read-Only attribute."
        },
        "numberOfActiveCriticalJobsPred": {
          "type": "integer",
          "description": "The number of active Critical Job predecessors. Read-Only attribute."
        },
        "numberOfLateCriticalJobsPred": {
          "type": "integer",
          "description": "The number of Critical job predecessors in late. Read-Only attribute"
        },
        "numberOfLongDurationCriticalJobsPred": {
          "type": "integer",
          "description": "The number of Critical job predecessors in long running. Read-Only attribute."
        },
        "numberOfErrorCriticalJobsPred": {
          "type": "integer",
          "description": "The number of Critical Job predecessors in error. Read-Only attribute."
        },
        "numberOfCritPathRecalculation": {
          "type": "integer",
          "description": "The number of Critical path recalculation. Read-Only attribute."
        },
        "numberofJobsOnHotList": {
          "type": "integer",
          "description": "The number of Jobs on the hotlist. Read-Only attribute."
        }
      }
    },
    "CriticalJobInfo": {
      "description": "Main information on Critical Job in plan - applicable only for Critical Job in plan",
      "properties": {
        "alertLevel": {
          "type": "string",
          "description": "Valid values are HIGH_RISK, POTENTIAL_RISK, ON_TRACK"
        },
        "criticalPathRemainingDuration": {
          "type": "integer",
          "format": "int64"
        },
        "lastCritPathRecalculation": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The latest critical path recalculation date"
        },
        "appliedDeadlineTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The applied deadline time, i.e. if present the job deadline, otherwise if present the job stream deadline, otherwise a default."
        },
        "confidenceFactor": {
          "type": "number",
          "format": "double",
          "description": "The Critical Job confidence factor"
        },
        "criticalJobStats": {
          "$ref": "#/definitions/CriticalJobStats"
        }
      }
    },
    "JobInPlanOnCriticalNetwork": {
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/JobInPlanKey"
        },
        "jobDefinition": {
          "$ref": "#/definitions/JobDefinitionInPlan"
        },
        "criticalNetworkInfo": {
          "$ref": "#/definitions/JobOnCriticalNetworkInfo"
        },
        "jobDefinitionId": {
          "type": "string"
        },
        "jobStreamId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "predecessors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "successors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jobPredecessors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jobSuccessors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unresolvedPreds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priority": {
          "type": "integer"
        },
        "origPriority": {
          "type": "integer"
        },
        "monitored": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "status": {
          "$ref": "#/definitions/NodeStatus"
        },
        "realStatus": {
          "$ref": "#/definitions/NodeStatus"
        },
        "timeRestriction": {
          "$ref": "#/definitions/TimeRestrictionsInPlan"
        },
        "timeInfo": {
          "$ref": "#/definitions/TimeInfo"
        },
        "timeZone": {
          "type": "string"
        },
        "cpuTime": {
          "type": "integer",
          "format": "int64"
        },
        "recordNumber": {
          "type": "integer",
          "format": "int64"
        },
        "dependenciesStats": {
          "$ref": "#/definitions/DependenciesStats"
        },
        "sigma": {
          "type": "integer",
          "format": "int64",
          "description": "The standard deviation of the estimated duration"
        },
        "estimatedEndSigma": {
          "type": "integer",
          "format": "int64",
          "description": "The standard deviation of the estimated end"
        },
        "dependencies": {
          "$ref": "#/definitions/DependenciesInPlan"
        },
        "isJob": {
          "type": "boolean"
        },
        "isInternal": {
          "type": "boolean"
        },
        "isRerunBlockedBySecurity": {
          "type": "boolean"
        },
        "isRerunBlockedByStatus": {
          "type": "boolean"
        },
        "hasExternalDependencies": {
          "type": "boolean"
        },
        "isHold": {
          "type": "boolean"
        }
      }
    },
    "CriticalJobInPlanFilter": {
      "properties": {
        "jobStreamName": {
          "type": "string"
        },
        "jobStreamAbstractId": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "jobStreamWorkstationName": {
          "type": "string"
        },
        "priority": {
          "type": "integer"
        },
        "priorityRange": {
          "$ref": "#/definitions/IntegerRange"
        },
        "alertLevelList": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Valid values are HIGH_RISK, POTENTIAL_RISK, ON_TRACK"
          }
        },
        "internalStatusList": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Valid values are READY, HOLD, EXEC, EXEC_PLUS, ABEND , SUCC, CANCEL, UNKNOWN, USER_STREAM, CANCELP, ADD, RJOB, FAILED, SUSP, WAIT, INTRO, INTRO_PLUS, WAITD, SCHED, ABENDP, SUCCP, ENDP, EXTRN, ERROR, FENCE, BOUND, SUSP"
          }
        },
        "statusList": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Valid values are WAITING, READY, RUNNING, SUCCESSFUL , ERROR ,  CANCELED , HELD ,  UNDECIDED , BLOCKED, SUPPRESS"
          }
        },
        "criticalStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "criticalStartTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "deadlineRange": {
          "$ref": "#/definitions/TimeRange"
        }
      }
    },
    "DataSetsListResult": {
      "properties": {
        "dataSets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "step": {
          "$ref": "#/definitions/RestartStep"
        }
      }
    },
    "RestartStep": {
      "properties": {
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        }
      }
    },
    "DataSet": {
      "properties": {
        "stepName": {
          "type": "string"
        },
        "datasetName": {
          "type": "string"
        },
        "protectedDataset": {
          "type": "boolean"
        },
        "GDGDataset": {
          "type": "boolean"
        },
        "deviceType": {
          "type": "integer"
        },
        "GDGRelativeNumber": {
          "type": "integer"
        },
        "SMSManaged": {
          "type": "boolean"
        },
        "VSAMDataset": {
          "type": "boolean"
        },
        "migrated": {
          "type": "boolean"
        },
        "firstVolume": {
          "type": "string"
        },
        "userCatalog": {
          "type": "string"
        },
        "numberOfVolumes": {
          "type": "integer"
        },
        "catalogType": {
          "type": "integer"
        },
        "rcdActionType": {
          "type": "integer"
        },
        "rcdUserSelection": {
          "type": "integer"
        },
        "rcdCleanupResult": {
          "type": "integer"
        }
      }
    },
    "DomainInPlanKey": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "DomainInPlan": {
      "properties": {
        "id": {
          "type": "string"
        },
        "domainInPlanKey": {
          "$ref": "#/definitions/DomainInPlanKey"
        },
        "planId": {
          "type": "string"
        },
        "domainModelId": {
          "type": "string"
        },
        "parentDomainKey": {
          "$ref": "#/definitions/DomainInPlanKey"
        },
        "parentDomainId": {
          "type": "string"
        },
        "managerWorkstationKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        }
      }
    },
    "DomainInPlanFilter": {
      "properties": {
        "domainId": {
          "type": "string"
        },
        "domainName": {
          "type": "string"
        },
        "domainNameAsString": {
          "type": "string"
        },
        "parentDomainNameAsString": {
          "type": "string"
        },
        "managerNameAsString": {
          "type": "string"
        }
      }
    },
    "DomainInPlanSorter": {
      "properties": {
        "domainName": {
          "$ref": "#/definitions/Sorter"
        },
        "domId": {
          "$ref": "#/definitions/Sorter"
        },
        "parentDomainName": {
          "$ref": "#/definitions/Sorter"
        },
        "managerName": {
          "$ref": "#/definitions/Sorter"
        }
      }
    },
    "FileInPlanKey": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "workstationInPlanKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "qualifier": {
          "type": "string"
        }
      }
    },
    "FileInPlan": {
      "properties": {
        "id": {
          "type": "string"
        },
        "fileInPlanKey": {
          "$ref": "#/definitions/FileInPlanKey"
        },
        "planId": {
          "type": "string"
        },
        "workstationId": {
          "type": "string"
        },
        "resourceModelId": {
          "type": "string",
          "description": "The File model identifier"
        },
        "qualifier": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Valid values are: Checked, Not Checked, Exist, Not Exist."
        }
      }
    },
    "FileInPlanFilter": {
      "properties": {
        "fileId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "fileNameAsString": {
          "type": "string"
        },
        "workstationNameAsString": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "statusAsString": {
          "type": "string"
        },
        "statusList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "qualifierAsString": {
          "type": "string"
        }
      }
    },
    "FileInPlanSorter": {
      "properties": {
        "name": {
          "$ref": "#/definitions/Sorter"
        },
        "resId": {
          "$ref": "#/definitions/Sorter"
        },
        "qualifiers": {
          "$ref": "#/definitions/Sorter"
        },
        "status": {
          "$ref": "#/definitions/Sorter"
        },
        "workstationName": {
          "$ref": "#/definitions/Sorter"
        }
      }
    },
    "HTTPY": {
      "properties": {
        "header": {
          "$ref": "#/definitions/HTTPYHeader"
        },
        "txtBody": {
          "type": "string"
        }
      }
    },
    "HTTPYHeader": {
      "required": [
        "id",
        "key"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/HTTPYKey"
        },
        "workstation": {
          "type": "string"
        },
        "modifydata": {
          "$ref": "#/definitions/ModifyData"
        },
        "operatingSystem": {
          "type": "integer"
        }
      }
    },
    "HTTPYKey": {
      "properties": {
        "destination": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reqType": {
          "type": "integer"
        }
      }
    },
    "HTTPYFilter": {
      "properties": {
        "httpy": {
          "$ref": "#/definitions/HTTPY"
        }
      }
    },
    "IdentifiersListResult": {
      "description": "List of Jobs' identifiers",
      "properties": {
        "jobIdList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "JobControlLanguage": {
      "properties": {
        "jobId": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "jobWorkstation": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/JCLStatus"
        },
        "lastUpdatingFunction": {
          "$ref": "#/definitions/JCLLastUpdatingFunction"
        },
        "isFromJS": {
          "type": "boolean"
        },
        "isExpanded": {
          "type": "boolean"
        },
        "text": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "taskType": {
          "type": "string"
        }
      }
    },
    "JCLStatus": {
      "properties": {
        "name": {
          "type": "string",
          "description": "'S','T','D','C','N' are the possible values."
        }
      }
    },
    "JCLLastUpdatingFunction": {
      "properties": {
        "name": {
          "type": "string",
          "description": "'L','S','W,'J','M','P','N','R'are the possible values."
        }
      }
    },
    "JCLPromptableVariable": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "JobInPlanSuccessorsResult": {
      "description": "Job successors result",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobInPlanOnCriticalNetwork"
          }
        },
        "question": {
          "type": "string"
        },
        "internalAllowed": {
          "type": "boolean"
        },
        "allAllowed": {
          "type": "boolean"
        }
      }
    },
    "JobDependenciesInPlan": {
      "properties": {
        "internalDependencyInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalDependencyInPlan"
          }
        },
        "externalDependencyInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependencyInPlan"
          }
        },
        "internetworkDependenciesInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternetworkDependencyInPlan"
          }
        },
        "fileDependencyInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDependencyInPlan"
          }
        },
        "promptDependencyInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromptDependencyInPlan"
          }
        },
        "resourceDependencyInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDependencyInPlan"
          }
        }
      }
    },
    "JobInPlanKey": {
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "jobStreamInPlanKey": {
          "$ref": "#/definitions/JobStreamInPlanKey"
        }
      }
    },
    "JobInPlan": {
      "required": [
        "name",
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "jobDefinition": {
          "$ref": "#/definitions/JobDefinitionInPlan"
        },
        "recoveryJobId": {
          "type": "string",
          "description": "The database identifier of the recovery prompt"
        },
        "taskType": {
          "$ref": "#/definitions/TaskTypeInPlan"
        },
        "workstationInPlan": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "jobStreamInPlan": {
          "$ref": "#/definitions/JobStreamInPlanKey"
        },
        "dependencies": {
          "$ref": "#/definitions/JobDependenciesInPlan"
        },
        "priority": {
          "type": "integer"
        },
        "originalPriority": {
          "type": "integer"
        },
        "repeatInterval": {
          "type": "integer",
          "format": "int64"
        },
        "cpuTime": {
          "type": "integer",
          "format": "int64"
        },
        "timeInfo": {
          "$ref": "#/definitions/TimeInfo"
        },
        "timeRestriction": {
          "$ref": "#/definitions/TimeRestrictionsInPlan"
        },
        "jobNumber": {
          "type": "integer",
          "description": "job number"
        },
        "headRecordNumber": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/NodeStatus"
        },
        "rerunInstancesNumber": {
          "type": "integer",
          "description": "get job rerun sequence"
        },
        "lastInRerunChain": {
          "type": "boolean"
        },
        "dependenciesStats": {
          "$ref": "#/definitions/DependenciesStats"
        },
        "criticalNetworkInfo": {
          "$ref": "#/definitions/JobOnCriticalNetworkInfo"
        },
        "extendedProperties": {
          "type": "string"
        },
        "sigma": {
          "type": "integer",
          "format": "int64"
        },
        "estimatedEndSigma": {
          "type": "integer",
          "format": "int64"
        },
        "recordNumber": {
          "type": "integer",
          "format": "int64"
        },
        "monitored": {
          "type": "boolean"
        },
        "aliased": {
          "type": "boolean"
        },
        "buckujob": {
          "type": "boolean"
        },
        "centralized": {
          "type": "boolean"
        },
        "centralizedSatisfied": {
          "type": "boolean"
        },
        "dontTouch": {
          "type": "boolean"
        },
        "every": {
          "type": "boolean"
        },
        "external": {
          "type": "boolean"
        },
        "hasResource": {
          "type": "boolean"
        },
        "heldByUser": {
          "type": "boolean"
        },
        "jobLate": {
          "type": "boolean"
        },
        "needMessage": {
          "type": "boolean"
        },
        "needResource": {
          "type": "boolean"
        },
        "pendingCancellation": {
          "type": "boolean"
        },
        "programmatic": {
          "type": "boolean"
        },
        "recoveryRerunJob": {
          "type": "boolean"
        },
        "released": {
          "type": "boolean"
        },
        "replicated": {
          "type": "boolean"
        },
        "rerunJob": {
          "type": "boolean"
        },
        "restarted": {
          "type": "boolean"
        },
        "running": {
          "type": "boolean"
        },
        "successPending": {
          "type": "boolean"
        },
        "untilGone": {
          "type": "boolean"
        },
        "userJob": {
          "type": "boolean"
        },
        "userRerunAgain": {
          "type": "boolean"
        },
        "wildcarded": {
          "type": "boolean"
        },
        "requiresConfirmation": {
          "type": "boolean"
        },
        "minDurationNotReached": {
          "type": "boolean"
        },
        "maxDurationGone": {
          "type": "boolean"
        },
        "jobDefinitionId": {
          "type": "string",
          "description": "job definition identifier"
        },
        "jobStreamId": {
          "type": "string",
          "description": "The identifier of the Job Stream to which this Job belong"
        },
        "jobRunId": {
          "type": "string",
          "description": "The database identifier of the job run"
        },
        "planId": {
          "type": "string"
        },
        "jobModelId": {
          "type": "string",
          "description": "The database identifier of the job in the model"
        },
        "criticalSuccId": {
          "type": "string",
          "description": "Reference to the DB ID of the closest business critical successor (job or job stream)"
        },
        "headJobRunId": {
          "type": "string",
          "description": "The database identifier of the head job run"
        },
        "headJobRunName": {
          "type": "string",
          "description": "The name of the head job run"
        },
        "position": {
          "type": "integer",
          "description": "The position of this job in the job stream"
        },
        "actualKey": {
          "type": "string",
          "description": "The actual key value"
        },
        "originalKey": {
          "type": "string",
          "description": "The original key value"
        },
        "dependencySequenceNumber": {
          "type": "integer",
          "description": "The dependency sequence number"
        },
        "noOperation": {
          "type": "boolean",
          "description": "No Operation flag"
        },
        "applicationName": {
          "type": "string",
          "description": "job task type application name"
        },
        "rerunType": {
          "type": "string",
          "description": "the type of rerun"
        },
        "recoveryDefinition": {
          "type": "boolean",
          "description": "true if the Job is a Recovery job definition"
        },
        "everyRerun": {
          "type": "boolean",
          "description": "The Job is a every rerun job"
        },
        "rerunStep": {
          "type": "boolean",
          "description": "the Job is a rerun job with step name"
        },
        "zosSpecificAttributes": {
          "type": "string",
          "description": "TODO"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "delayRerun": {
          "type": "boolean",
          "description": "true if the job was running when a rerun successor command has been delivered. When this job is rerunned it is resetted to false"
        },
        "embedded": {
          "type": "boolean",
          "description": "true if the job is embedded"
        },
        "zosSpecificAttributesObj": {
          "$ref": "#/definitions/JobInPlanZOSAttributes"
        },
        "internalSuccessors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalDependencyInPlan"
          }
        },
        "externalSuccessors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependencyInPlan"
          }
        },
        "conditionalSuccessors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionalDependencyInPlan"
          }
        }
      }
    },
    "JobInPlanZOSAttributes": {
      "properties": {
        "extendedStatus": {
          "type": "string"
        },
        "followJobStreamInputArrival": {
          "type": "boolean"
        },
        "authorityGroup": {
          "type": "string"
        },
        "plannedRestriction": {
          "$ref": "#/definitions/TimeRestrictionsInPlan"
        },
        "errorCode": {
          "type": "string"
        },
        "latestOut": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "actualArrival": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "intermediateStart": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "actualEnd": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "numberOfParallelServerRequired": {
          "type": "integer"
        },
        "numberOfR1ResourcesRequired": {
          "type": "integer"
        },
        "numberOfR2ResourcesRequired": {
          "type": "integer"
        },
        "numberOfSpecialResources": {
          "type": "integer"
        },
        "numberOfSuccessors": {
          "type": "integer"
        },
        "numberOfPredecessors": {
          "type": "integer"
        },
        "numberOfCompletedPredecessors": {
          "type": "integer"
        },
        "Long transportTime": {
          "type": "integer",
          "format": "int64"
        },
        "timeOfLastMCPUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "onCriticalPath": {
          "type": "string"
        },
        "latestOutPassed": {
          "type": "boolean"
        },
        "urgent": {
          "type": "boolean"
        },
        "hostJobStatus": {
          "type": "string"
        },
        "jclPreparation": {
          "type": "boolean"
        },
        "operatorInstrution": {
          "type": "string"
        },
        "hrcSet": {
          "type": "string"
        },
        "nopedOperation": {
          "type": "string"
        },
        "userData": {
          "type": "string"
        },
        "operationCommand": {
          "type": "string"
        },
        "catalogManagementStatus": {
          "type": "string"
        },
        "cleanUpStatus": {
          "type": "string"
        },
        "hasRecoveryInfo": {
          "type": "boolean"
        },
        "occurrenceToken": {
          "type": "string"
        },
        "idCreationCriterion": {
          "type": "string"
        },
        "isInSymphony": {
          "type": "boolean"
        },
        "abendPromptStatus": {
          "type": "string"
        },
        "resourceUsageInfo": {
          "$ref": "#/definitions/JobInPlanResourceUsageInfo"
        },
        "jesJobId": {
          "type": "string"
        },
        "isIgnoreForRemoval": {
          "type": "boolean"
        },
        "isCondRecoveryJob": {
          "type": "boolean"
        },
        "numberOfCond": {
          "type": "integer"
        },
        "numberOfCondPred": {
          "type": "integer"
        },
        "numberOfCondSucc": {
          "type": "integer"
        },
        "numberOfCondTrue": {
          "type": "integer"
        },
        "numberOfCondFalse": {
          "type": "integer"
        },
        "numberOfPredXCompleted": {
          "type": "integer"
        },
        "origRC": {
          "type": "string"
        },
        "bindStatus": {
          "type": "string"
        },
        "isShadow": {
          "type": "boolean"
        },
        "unexpecteRC": {
          "type": "boolean"
        },
        "jobMatchingCriteria": {
          "type": "string"
        },
        "generatingRC": {
          "type": "string"
        }
      }
    },
    "JobInPlanResourceUsageInfo": {
      "properties": {
        "userQuantity": {
          "type": "integer"
        },
        "waitingReason": {
          "type": "string"
        },
        "allocationType": {
          "type": "string"
        }
      }
    },
    "JobInPlanFilter": {
      "properties": {
        "jobName": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "jobStreamName": {
          "type": "string"
        },
        "inputArrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "inputArrivalTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "inputArrivalTimeAsString": {
          "type": "string"
        },
        "jobNameQf": {
          "type": "string"
        },
        "successorsId": {
          "type": "string"
        },
        "successorsInternetworkString": {
          "type": "string"
        },
        "successorsWorkstationName": {
          "type": "string"
        },
        "successorsJobStreamName": {
          "type": "string"
        },
        "successorsInputArrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "authGroup": {
          "type": "string"
        },
        "successorsInputArrivalTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "successorsJobName": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "internalStatusList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Valid values are READY, HOLD, EXEC, EXEC_PLUS, ABEND, SUCC, CANCEL, UNKNOWN, USER_STREAM, CANCELP, ADD, RJOB, FAILED, MPE_SUSP, WAIT, INTRO, INTRO_PLUS, WAITD, SCHED, ABENDP, SUCCP, ENDP, EXTRN, ERROR, FENCE, BOUND, SUSP, SUPPRESS, RECOVERY_IN_PROGRESS"
        },
        "internalStatusAsString": {
          "type": "string",
          "description": "Valid values are READY, HOLD, EXEC, EXEC_PLUS, ABEND, SUCC, CANCEL, UNKNOWN, USER_STREAM, CANCELP, ADD, RJOB, FAILED, MPE_SUSP, WAIT, INTRO, INTRO_PLUS, WAITD, SCHED, ABENDP, SUCCP, ENDP, EXTRN, ERROR, FENCE, BOUND, SUSP, SUPPRESS, RECOVERY_IN_PROGRESS"
        },
        "statusList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Valid values are WAITING, READY, RUNNING, SUCCESSFUL, ERROR, CANCELED, HELD, UNDECIDED, BLOCKED, SUPPRESS"
        },
        "statusAsString": {
          "type": "string",
          "description": "Valid values are WAITING, READY, RUNNING, SUCCESSFUL, ERROR, CANCELED, HELD, UNDECIDED, BLOCKED, SUPPRESS"
        },
        "priority": {
          "type": "integer"
        },
        "priorityAsString": {
          "type": "string"
        },
        "priorityRange": {
          "$ref": "#/definitions/IntegerRange"
        },
        "rerunType": {
          "type": "string",
          "description": "RERUN, RERUN_EVERY, RERUN_FROM, RECOVERY, REGULAR"
        },
        "rerunAsString": {
          "type": "string"
        },
        "rerunTypeAsString": {
          "type": "string"
        },
        "rerunOpt": {
          "type": "boolean"
        },
        "rerun": {
          "type": "boolean"
        },
        "recoveryOptionList": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "STOP, CONTINUE, RERUN"
          }
        },
        "recoveryDefinition": {
          "type": "boolean"
        },
        "confirmed": {
          "type": "boolean"
        },
        "confirmedAsString": {
          "type": "string"
        },
        "every": {
          "type": "boolean"
        },
        "everyList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "everyTime": {
          "type": "integer",
          "format": "int64"
        },
        "everyTimeRange": {
          "$ref": "#/definitions/LongRange"
        },
        "untilExpired": {
          "type": "boolean"
        },
        "untilExpiredList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "untilActionList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "untilAction": {
          "type": "string",
          "description": "SUPPRESS, CONTINUE, CANCEL"
        },
        "untilTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "untilTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "untilTimeAsString": {
          "type": "string"
        },
        "actualStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "actualStartTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "actualStartTimeAsString": {
          "type": "string"
        },
        "actualEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "actualEndTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "startTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "startTimeAsString": {
          "type": "string"
        },
        "task": {
          "type": "string"
        },
        "userLogin": {
          "type": "string"
        },
        "fileDependencyId": {
          "type": "string"
        },
        "headJobId": {
          "type": "string"
        },
        "fileDependencyName": {
          "type": "string"
        },
        "fileDependencyWorkstationName": {
          "type": "string"
        },
        "promptDependencyId": {
          "type": "string"
        },
        "promptDependencyName": {
          "type": "string"
        },
        "promptDependencyNumber": {
          "type": "integer"
        },
        "resourceDependencyId": {
          "type": "string"
        },
        "resourceDependencyName": {
          "type": "string"
        },
        "resourceDependencyWorkstationName": {
          "type": "string"
        },
        "monitoredJob": {
          "type": "boolean"
        },
        "monitoredJobList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "critical": {
          "type": "boolean"
        },
        "criticalList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "criticalAsString": {
          "type": "string"
        },
        "wlmCritical": {
          "type": "boolean"
        },
        "wlmCriticalType": {
          "type": "string",
          "description": "NO, PATH, WLM"
        },
        "wlmPolicy": {
          "type": "string",
          "description": "DEFAULT, LONGDURATION, DEADLINE, LATESTSTART, CONDITIONAL"
        },
        "wlmClass": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "canceled": {
          "type": "boolean"
        },
        "canceledList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "cleanupType": {
          "type": "string",
          "description": "NONE, IMMEDIATE, AUTOMATIC, MANUAL"
        },
        "cleanupStatus": {
          "type": "string",
          "description": "STATUSNONE, STATUSCOMPLETE, STATUSERROR"
        },
        "extendedName": {
          "type": "string"
        },
        "schedulingEnvironmentName": {
          "type": "string"
        },
        "waitingForSchedulingEnvironment": {
          "type": "boolean"
        },
        "waitingForWorkstationDelay": {
          "type": "boolean"
        },
        "virtDest": {
          "type": "string"
        },
        "conditionalRecoveryJob": {
          "type": "boolean"
        },
        "recoveredByCondition": {
          "type": "boolean"
        },
        "shadowJob": {
          "type": "boolean"
        },
        "unexpected": {
          "type": "boolean"
        },
        "actualKey": {
          "type": "string"
        },
        "originalKey": {
          "type": "string"
        },
        "deadlineTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "deadlineTimeAsString": {
          "type": "string"
        },
        "estimatedDuration": {
          "type": "integer"
        },
        "estimatedDurationAsString": {
          "type": "string"
        },
        "maxDurationAction": {
          "type": "string",
          "description": "SUPPRESS, CONTINUE, CANCEL"
        },
        "maxDurationActionList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "maxDurationUsed": {
          "type": "boolean"
        },
        "maxDurationUsedList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "maxDurationGone": {
          "type": "boolean"
        },
        "maxDurationGoneList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "maxDuration": {
          "type": "integer"
        },
        "maxDurationAsString": {
          "type": "string"
        },
        "minDurationAction": {
          "type": "string",
          "description": "ABEND, CONTINUE, CONFIRM"
        },
        "minDurationActionList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "minDurationUsed": {
          "type": "boolean"
        },
        "minDurationUsedList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "minDurationNotReached": {
          "type": "boolean"
        },
        "minDurationNotReachedList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "minDuration": {
          "type": "integer"
        },
        "minDurationAsString": {
          "type": "string"
        },
        "late": {
          "type": "boolean"
        },
        "lastInRerunChain": {
          "type": "boolean"
        },
        "lateAsString": {
          "type": "string"
        },
        "runNumber": {
          "type": "integer"
        },
        "rerunNumber": {
          "type": "integer"
        },
        "runNumberAsString": {
          "type": "string"
        },
        "originalPriority": {
          "type": "string"
        },
        "returnCode": {
          "type": "string"
        },
        "totalElapsedTime": {
          "type": "string"
        },
        "sigma": {
          "type": "integer",
          "format": "int64"
        },
        "sigmaAsString": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "jobCommand": {
          "type": "boolean"
        },
        "criticalStart": {
          "type": "string"
        },
        "jobWksName": {
          "type": "string"
        },
        "position": {
          "type": "integer"
        },
        "positionAsString": {
          "type": "string"
        },
        "scheduledTime": {
          "type": "string"
        },
        "jobDeps": {
          "type": "string"
        },
        "inetDeps": {
          "type": "string"
        },
        "jsDeps": {
          "type": "string"
        },
        "promptDeps": {
          "type": "string"
        },
        "fileDeps": {
          "type": "string"
        },
        "resourceDeps": {
          "type": "string"
        },
        "unresolvedDeps": {
          "type": "string"
        },
        "jobNumber": {
          "type": "string"
        },
        "everyTimeAsString": {
          "type": "string"
        },
        "monitored": {
          "type": "string"
        },
        "nopAsString": {
          "type": "string"
        },
        "buckujob": {
          "type": "boolean"
        },
        "buckujobList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "userjob": {
          "type": "boolean"
        },
        "userjobList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "pendingCanc": {
          "type": "boolean"
        },
        "pendingCancList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "nopJob": {
          "type": "boolean"
        },
        "nopJobList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "replyNeeded": {
          "type": "boolean"
        },
        "replyNeededList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "released": {
          "type": "boolean"
        },
        "releasedList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "promoted": {
          "type": "boolean"
        },
        "promotedList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "promotedAsString": {
          "type": "string"
        },
        "actualEndTimeAsString": {
          "type": "string"
        },
        "recordNumber": {
          "type": "integer",
          "format": "int64"
        },
        "jobMatchingCriteria": {
          "type": "string"
        },
        "modifyTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The modify time filter"
        },
        "delayRerun": {
          "type": "boolean"
        },
        "embedded": {
          "type": "boolean"
        },
        "actualWorkstation": {
          "type": "string"
        },
        "zosLate": {
          "type": "string",
          "description": "Valid values are LATEST, NOTSTARTED, EITHER"
        }
      }
    },
    "JobInPlanSorter": {
      "properties": {
        "actualStartTime": {
          "$ref": "#/definitions/Sorter"
        },
        "aliased": {
          "$ref": "#/definitions/Sorter"
        },
        "cancelStatus": {
          "$ref": "#/definitions/Sorter"
        },
        "deadlineTime": {
          "$ref": "#/definitions/Sorter"
        },
        "deadlineFlag": {
          "$ref": "#/definitions/Sorter"
        },
        "durationLimit": {
          "$ref": "#/definitions/Sorter"
        },
        "earliestStartTime": {
          "$ref": "#/definitions/Sorter"
        },
        "estimatedDuration": {
          "$ref": "#/definitions/Sorter"
        },
        "internalStatus": {
          "$ref": "#/definitions/Sorter"
        },
        "lastInChain": {
          "$ref": "#/definitions/Sorter"
        },
        "late": {
          "$ref": "#/definitions/Sorter"
        },
        "maxDuration": {
          "$ref": "#/definitions/Sorter"
        },
        "maxDurationAction": {
          "$ref": "#/definitions/Sorter"
        },
        "maxDurationFlag": {
          "$ref": "#/definitions/Sorter"
        },
        "maxDurationGone": {
          "$ref": "#/definitions/Sorter"
        },
        "minDuration": {
          "$ref": "#/definitions/Sorter"
        },
        "minDurationAction": {
          "$ref": "#/definitions/Sorter"
        },
        "minDurationFlag": {
          "$ref": "#/definitions/Sorter"
        },
        "minDurationNotReached": {
          "$ref": "#/definitions/Sorter"
        },
        "monitored": {
          "$ref": "#/definitions/Sorter"
        },
        "jobRunName": {
          "$ref": "#/definitions/Sorter"
        },
        "runNumber": {
          "$ref": "#/definitions/Sorter"
        },
        "originalPriority": {
          "$ref": "#/definitions/Sorter"
        },
        "priority": {
          "$ref": "#/definitions/Sorter"
        },
        "programmatic": {
          "$ref": "#/definitions/Sorter"
        },
        "promoted": {
          "$ref": "#/definitions/Sorter"
        },
        "recordNumber": {
          "$ref": "#/definitions/Sorter"
        },
        "released": {
          "$ref": "#/definitions/Sorter"
        },
        "repeatInterval": {
          "$ref": "#/definitions/Sorter"
        },
        "replyNeeded": {
          "$ref": "#/definitions/Sorter"
        },
        "requiresConfirmation": {
          "$ref": "#/definitions/Sorter"
        },
        "rerunNumber": {
          "$ref": "#/definitions/Sorter"
        },
        "rerunStep": {
          "$ref": "#/definitions/Sorter"
        },
        "rerunType": {
          "$ref": "#/definitions/Sorter"
        },
        "returnCode": {
          "$ref": "#/definitions/Sorter"
        },
        "running": {
          "$ref": "#/definitions/Sorter"
        },
        "startTime": {
          "$ref": "#/definitions/Sorter"
        },
        "status": {
          "$ref": "#/definitions/Sorter"
        },
        "successPending": {
          "$ref": "#/definitions/Sorter"
        },
        "timeDependent": {
          "$ref": "#/definitions/Sorter"
        },
        "totalCpuTime": {
          "$ref": "#/definitions/Sorter"
        },
        "totalElapsedTime": {
          "$ref": "#/definitions/Sorter"
        },
        "untilAction": {
          "$ref": "#/definitions/Sorter"
        },
        "untilExpired": {
          "$ref": "#/definitions/Sorter"
        },
        "untilTime": {
          "$ref": "#/definitions/Sorter"
        },
        "untilFlag": {
          "$ref": "#/definitions/Sorter"
        },
        "buckujob": {
          "$ref": "#/definitions/Sorter"
        },
        "centrSatisfied": {
          "$ref": "#/definitions/Sorter"
        },
        "everyRerun": {
          "$ref": "#/definitions/Sorter"
        },
        "hasResource": {
          "$ref": "#/definitions/Sorter"
        },
        "heldByUser": {
          "$ref": "#/definitions/Sorter"
        },
        "needResource": {
          "$ref": "#/definitions/Sorter"
        },
        "recoveryRerunJob": {
          "$ref": "#/definitions/Sorter"
        },
        "replicated": {
          "$ref": "#/definitions/Sorter"
        },
        "rerunJob": {
          "$ref": "#/definitions/Sorter"
        },
        "restarted": {
          "$ref": "#/definitions/Sorter"
        },
        "userJob": {
          "$ref": "#/definitions/Sorter"
        },
        "userRerunAgain": {
          "$ref": "#/definitions/Sorter"
        },
        "position": {
          "$ref": "#/definitions/Sorter"
        },
        "numDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numJobDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numJsDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numInetDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numPromptDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numResDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numFileDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDefWorkstationName": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDefCommand": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDefDefinedByJsdl": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDefInteractive": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDefName": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDefRecoveryOption": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDefReturnCodeMapping": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDefTaskString": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDefTaskType": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDefUserLogin": {
          "$ref": "#/definitions/Sorter"
        },
        "jobCritical": {
          "$ref": "#/definitions/Sorter"
        },
        "jobEvery": {
          "$ref": "#/definitions/Sorter"
        },
        "jobName": {
          "$ref": "#/definitions/Sorter"
        },
        "jobId": {
          "$ref": "#/definitions/Sorter"
        },
        "jobPending": {
          "$ref": "#/definitions/Sorter"
        },
        "jobNop": {
          "$ref": "#/definitions/Sorter"
        },
        "jobZombie": {
          "$ref": "#/definitions/Sorter"
        },
        "jobCriticalStart": {
          "$ref": "#/definitions/Sorter"
        },
        "jobBuckujob": {
          "$ref": "#/definitions/Sorter"
        },
        "jobCentralized": {
          "$ref": "#/definitions/Sorter"
        },
        "jobDontTouch": {
          "$ref": "#/definitions/Sorter"
        },
        "jobExternal": {
          "$ref": "#/definitions/Sorter"
        },
        "jobWildcarded": {
          "$ref": "#/definitions/Sorter"
        },
        "jobstreamName": {
          "$ref": "#/definitions/Sorter"
        },
        "jobstreamScheduledTime": {
          "$ref": "#/definitions/Sorter"
        },
        "jobstreamWksName": {
          "$ref": "#/definitions/Sorter"
        },
        "actualKey": {
          "$ref": "#/definitions/Sorter"
        },
        "originalKey": {
          "$ref": "#/definitions/Sorter"
        },
        "numUnresolvedDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "actualEndTime": {
          "$ref": "#/definitions/Sorter"
        },
        "modifyTime": {
          "$ref": "#/definitions/Sorter"
        },
        "jobNumber": {
          "$ref": "#/definitions/Sorter"
        },
        "delayRerun": {
          "$ref": "#/definitions/Sorter"
        },
        "autogenerated": {
          "$ref": "#/definitions/Sorter"
        },
        "jobPolling": {
          "$ref": "#/definitions/Sorter"
        },
        "actualWorkstation": {
          "$ref": "#/definitions/Sorter"
        }
      }
    },
    "JobDefinitionInPlan": {
      "properties": {
        "jobDefinitionInPlanKey": {
          "$ref": "#/definitions/JobDefinitionInPlanKey"
        },
        "description": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "recoveryJobKey": {
          "$ref": "#/definitions/JobDefinitionInPlanKey"
        },
        "command": {
          "type": "boolean"
        },
        "workstationId": {
          "type": "string"
        },
        "recoveryJobId": {
          "type": "string"
        },
        "abendPromptId": {
          "type": "string"
        },
        "abendPromptKey": {
          "$ref": "#/definitions/PromptInPlanKey"
        },
        "abendPromptText": {
          "type": "string"
        },
        "definedByJsdl": {
          "type": "boolean"
        },
        "planId": {
          "type": "string"
        },
        "jobDefinitionModelId": {
          "type": "string"
        },
        "taskString": {
          "type": "string"
        },
        "taskStringInfo": {
          "type": "string"
        },
        "returnCode": {
          "type": "integer"
        },
        "interactive": {
          "type": "boolean"
        },
        "userLogin": {
          "type": "string"
        },
        "recoveryOption": {
          "type": "string"
        },
        "recoveryJob": {
          "$ref": "#/definitions/JobInPlan"
        },
        "outputConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputConditionInPlan"
          }
        },
        "returnCodeMapping": {
          "type": "string",
          "description": "This field will be deprecated in the next Api level. Use outputConditions instead."
        },
        "estimatedDuration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "JobDefinitionInPlanKey": {
      "properties": {
        "name": {
          "type": "string"
        },
        "workstationInPlanKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        }
      }
    },
    "JobCommand": {
      "properties": {
        "command": {
          "type": "string",
          "description": "The command to run"
        },
        "input": {
          "type": "string",
          "description": "The json representation of the parameters needed by the command"
        }
      }
    },
    "SubmitJobInfo": {
      "required": [
        "job"
      ],
      "properties": {
        "variableTable": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringMapObj"
          }
        },
        "hasUniqueName": {
          "type": "boolean"
        },
        "variableTableId": {
          "type": "string"
        },
        "job": {
          "$ref": "#/definitions/JobInPlan"
        }
      }
    },
    "SubmitDependencies": {
      "properties": {
        "removeResourceDeps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDependencyInPlan"
          }
        },
        "removeInternalDeps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalDependencyInPlan"
          }
        },
        "removeExternalDeps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependencyInPlan"
          }
        },
        "removeInternalSucc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalDependencyInPlan"
          }
        },
        "removeExternalSucc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependencyInPlan"
          }
        },
        "removeConditionalDeps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionalDependencyInPlan"
          }
        },
        "addResourceDeps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDependencyInPlan"
          }
        },
        "addInternalDeps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalDependencyInPlan"
          }
        },
        "addExternalDeps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependencyInPlan"
          }
        },
        "addInternalSucc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalDependencyInPlan"
          }
        },
        "addExternalSucc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependencyInPlan"
          }
        },
        "addConditionalDeps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConditionalDependencyInPlan"
          }
        },
        "changeStatus": {
          "type": "boolean"
        },
        "job": {
          "$ref": "#/definitions/JobInPlan"
        }
      }
    },
    "ConditionalDependencyInPlan": {
      "properties": {
        "conditionId": {
          "type": "string"
        },
        "requiresAll": {
          "type": "boolean"
        },
        "subsetValue": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "conditionalJobDependenciesInPlan": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "simpleConditionStatus": {
          "$ref": "#/definitions/DependencyStatusType"
        },
        "extendedConditionStatus": {
          "$ref": "#/definitions/DependencyExtendedStatusType"
        }
      }
    },
    "DependencyStatusType": {
      "properties": {
        "name": {
          "type": "string",
          "description": "'S':satisfied,'N':unsatisfied,'U': undecided are the acceptable values"
        }
      }
    },
    "DependencyExtendedStatusType": {
      "properties": {
        "name": {
          "type": "string",
          "description": "'C':complete,'F':forced by rerun,' ': not set are the acceptable values"
        }
      }
    },
    "JobStep": {
      "properties": {
        "number": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "procStepName": {
          "type": "string"
        },
        "completionCode": {
          "type": "string"
        },
        "programName": {
          "type": "string"
        },
        "mustBeExecuted": {
          "type": "boolean"
        },
        "mustNotBeExecuted": {
          "type": "boolean"
        },
        "type": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "restartability": {
          "type": "integer"
        },
        "action": {
          "type": "integer"
        }
      }
    },
    "JobSummaryInfo": {
      "properties": {
        "numberOfJob": {
          "type": "integer"
        },
        "estimatedDuration": {
          "type": "integer",
          "format": "int64"
        },
        "actualDuration": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ZosJobInfo": {
      "properties": {
        "jobNumber": {
          "type": "integer"
        },
        "workstationName": {
          "type": "string"
        },
        "textDescription": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "parallelServer": {
          "type": "integer"
        },
        "Long duration": {
          "type": "integer",
          "format": "int64"
        },
        "autoSubmit": {
          "type": "boolean"
        },
        "timeDependent": {
          "type": "boolean"
        },
        "centralizedScript": {
          "type": "boolean"
        },
        "r1": {
          "type": "integer"
        },
        "r2": {
          "type": "integer"
        },
        "taskType": {
          "type": "string"
        },
        "workstationType": {
          "type": "string"
        },
        "internalStatus": {
          "type": "string"
        },
        "inputArrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "TimeRestrictionInPlan": {
      "properties": {
        "untilTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "deadlineTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "timeDependent": {
          "type": "boolean"
        },
        "perJobUntil": {
          "type": "boolean"
        },
        "minDurationAction": {
          "type": "string"
        },
        "maxDurationAction": {
          "type": "string"
        },
        "untilAction": {
          "type": "string"
        },
        "deadlineAction": {
          "type": "string"
        },
        "Integer minDuration": {
          "type": "integer"
        },
        "Integer maxDuration": {
          "type": "integer"
        },
        "untilJobStreamTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "lateInfo": {
          "$ref": "#/definitions/LateInfo"
        },
        "originalDeadline": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. For z/OS only"
        },
        "zosDeadlineAction": {
          "type": "string",
          "description": "JobDeadlineAction Type. Valid values are: ALERT, COMPLETE, NOP, ERROR, BLANK. For z/OS only"
        }
      }
    },
    "RestartCleanupOptions": {
      "properties": {
        "useExpandedJCL": {
          "type": "boolean"
        },
        "action": {
          "type": "string",
          "description": "Valid values are ACTION_STEPRESTART, ACTION_JOBRERUN, ACTION_STARTCLEANUP, ACTION_JSRERUN, ACTION_DISPLAYCLEANUP, ACTION_JSRERUNNOCLEANUP, ACTION_FASTJOBRESTART, ACTION_FASTSTEPRESTART"
        },
        "cleanup": {
          "type": "string",
          "description": "Valid values are NONE, IMMEDIATE, AUTOMATIC, MANUAL"
        }
      }
    },
    "LateInfo": {
      "properties": {
        "notStartedAlertDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. For z/OS only"
        },
        "notStartedActionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. For z/OS only"
        },
        "notStartedAction": {
          "type": "string",
          "description": "JobDeadlineAction Type. Valid values are: ALERT, COMPLETE, NOP, ERROR, BLANK. For z/OS only"
        }
      }
    },
    "JobStatus": {
      "properties": {
        "fieldValue": {
          "$ref": "#/definitions/ZosStatus"
        },
        "count": {
          "type": "integer",
          "format": "date-time",
          "description": "Number of jobs"
        }
      }
    },
    "ZosStatus": {
      "properties": {
        "charValue": {
          "type": "string",
          "description": "'H':held,'W':waiting,'B':blocked,'R':ready,'S':started,'O':complete,'E':error,'U':undecided,'X':suppressed by condition"
        }
      }
    },
    "JobStreamInPlanKey": {
      "required": [
        "name",
        "startTime"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Scheduled Time (AKA Input Arrival Time) of This Job Stream"
        },
        "workstationKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        }
      }
    },
    "JobStreamInPlan": {
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/JobStreamInPlanKey"
        },
        "originalJobStreamName": {
          "type": "string",
          "description": "The original Job Stream Name. Before it was aliased. Read-Only attribute."
        },
        "aliasJobStreamName": {
          "type": "string",
          "description": "The aliased Job Stream Name"
        },
        "workstationClass": {
          "type": "string",
          "description": "The Job Stream Workstation Class"
        },
        "actualKey": {
          "type": "string"
        },
        "originalKey": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "workstationId": {
          "type": "string"
        },
        "internalIdentifier": {
          "type": "string"
        },
        "variableTableId": {
          "type": "string"
        },
        "planId": {
          "type": "string"
        },
        "planOriginalId": {
          "type": "string"
        },
        "jobStreamModelId": {
          "type": "string"
        },
        "jobStreamDbIdentifier": {
          "type": "string"
        },
        "workstation": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "productionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - Date when the Job Stream was selected. Read-Only attribute."
        },
        "scheduledDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Scheduled Date of the Job Stream Instance."
        },
        "jobStreamStats": {
          "$ref": "#/definitions/JobStreamStats"
        },
        "limit": {
          "type": "integer",
          "description": "The Job Stream Limit. Valid values from -1 (NO_LIMIT) to 1024. Default value NO_LIMIT"
        },
        "resDepSequenceNum": {
          "type": "integer",
          "description": "The resource dependency sequence number"
        },
        "followsDepSequenceNum": {
          "type": "integer",
          "description": "The follows dependency sequence number"
        },
        "inOrder": {
          "type": "boolean",
          "description": "The Job Stream is in Order. Read-Only attribute."
        },
        "replicated": {
          "type": "boolean",
          "description": "Job Stream replicated for Workstation Class. Read-Only attribute"
        },
        "carriedForward": {
          "type": "boolean",
          "description": "Job Stream has been carried forward"
        },
        "carryForward": {
          "type": "boolean",
          "description": "Job Stream is to be carried forward"
        },
        "dontTouch": {
          "type": "boolean",
          "description": "Job Stream Until Date has passed. Read-Only attribute."
        },
        "userJobs": {
          "type": "boolean",
          "description": "This is a USERJOBS Job Stream. Read-Only attribute."
        },
        "thisCpu": {
          "type": "boolean",
          "description": "Job Stream is on this Workstation. Read-Only attribute."
        },
        "external": {
          "type": "boolean",
          "description": "Job Stream is EXTERNAL. Read-Only attribute."
        },
        "needResources": {
          "type": "boolean",
          "description": "Job Stream has ResourceDependencyInPlan"
        },
        "hasResources": {
          "type": "boolean",
          "description": "Job Stream owns Resources. Read-Only attribute."
        },
        "released": {
          "type": "boolean",
          "description": "Job Stream has been released. Read-Only attribute."
        },
        "pendingCancellation": {
          "type": "boolean",
          "description": "Job Stream is pending cancellation."
        },
        "aliased": {
          "type": "boolean",
          "description": "Job Stream is aliased. Specify this flag if you want to alias this Job Stream"
        },
        "every": {
          "type": "boolean",
          "description": "Job Stream contains at least one Job EVERY. Read-Only attribute."
        },
        "hasInternetworkDependencies": {
          "type": "boolean",
          "description": "Job Stream has InternetworkDependencyInPlan. Read-Only attribute."
        },
        "heldByUser": {
          "type": "boolean",
          "description": "Job Stream has the priority set to zero. Read-Only attribute."
        },
        "lateJobStream": {
          "type": "boolean",
          "description": "Job Stream is a Late Job Stream. Read-Only attribute."
        },
        "pendingPredecessor": {
          "type": "boolean",
          "description": "Job Stream is pending predecessor. Read-Only attribute."
        },
        "zombie": {
          "type": "boolean",
          "description": "Job Stream is orphan cancellation. Read-Only attribute."
        },
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobInPlan"
          }
        },
        "priority": {
          "type": "integer"
        },
        "origPriority": {
          "type": "integer"
        },
        "monitored": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "status": {
          "$ref": "#/definitions/NodeStatus"
        },
        "timeRestriction": {
          "$ref": "#/definitions/TimeRestrictionsInPlan"
        },
        "timeInfo": {
          "$ref": "#/definitions/TimeInfo"
        },
        "timeZone": {
          "type": "string"
        },
        "cpuTime": {
          "type": "integer",
          "format": "int64"
        },
        "recordNumber": {
          "type": "integer",
          "format": "int64"
        },
        "dependenciesStats": {
          "$ref": "#/definitions/DependenciesStats"
        },
        "sigma": {
          "type": "integer",
          "format": "int64",
          "description": "The standard deviation of the estimated duration"
        },
        "estimatedEndSigma": {
          "type": "integer",
          "format": "int64",
          "description": "The standard deviation of the estimated end"
        },
        "dependencies": {
          "$ref": "#/definitions/DependenciesInPlan"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "zosSpecificAttributes": {
          "$ref": "#/definitions/JobStreamInPlanZOSAttributes"
        },
        "groupName": {
          "type": "string"
        },
        "ownerName": {
          "type": "string"
        },
        "ownerDescription": {
          "type": "string"
        },
        "authorityGroup": {
          "type": "string"
        },
        "calendarKey": {
          "type": "string"
        },
        "variableTable": {
          "type": "string"
        },
        "successors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependencyInPlan"
          }
        }
      }
    },
    "JobStreamInPlanZOSAttributes": {
      "properties": {
        "lTPInputArrival": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "errorCode": {
          "type": "string"
        },
        "Boolean rerunRequested": {
          "type": "boolean"
        },
        "Boolean addedToCurrentPlan": {
          "type": "boolean"
        },
        "addingFunction": {
          "type": "string"
        },
        "Boolean latestOutPassed": {
          "type": "boolean"
        },
        "remainingDurationCriticalPath": {
          "type": "integer",
          "format": "int64"
        },
        "remainingOperationsCriticalPath": {
          "type": "integer"
        },
        "firstCriticalOperation": {
          "type": "string"
        },
        "firstCriticalOperationWorkstation": {
          "type": "string"
        },
        "occurrenceToken": {
          "type": "string"
        },
        "mostCriticalDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "generatingRC": {
          "type": "string"
        }
      }
    },
    "JobStreamStats": {
      "properties": {
        "numberOfJob": {
          "type": "integer",
          "description": "The number of Jobs that are part of this Job Stream. Read-Only attribute."
        },
        "numberOfCurrentNodes": {
          "type": "integer",
          "description": "The number of Jobs that are part of this Job Stream excluding the reruns and recoveries. Read-Only attribute."
        },
        "numberOfSuccessfullJob": {
          "type": "integer",
          "description": "The number of Jobs in Success that are part of this Job Stream. Read-Only attribute."
        },
        "numberOfDeltaJob": {
          "type": "integer",
          "description": "The number of Jobs that are archieved by stageman but that belongs to the Job Stream. Read-Only attribute"
        },
        "numberOfDeltaSuccJob": {
          "type": "integer",
          "description": "The number of Jobs in Success that are archieved by stageman but that belongs to the Job Stream. Read-Only attribute."
        },
        "numberOfNotRunningJob": {
          "type": "integer",
          "description": "The number of Jobs Not Yet Run in this Job Stream. Read-Only attribute."
        },
        "numberOfExecutingJob": {
          "type": "integer",
          "description": "The number of Jobs Executing in this Job Stream. Read-Only attribute."
        },
        "numberOfAbendedJob": {
          "type": "integer",
          "description": "The number of Jobs Abended in this Job Stream. Read-Only attribute."
        },
        "numberOfFailedJob": {
          "type": "integer",
          "description": "The number of Jobs Failed in this Job Stream. Read-Only attribute."
        },
        "numberOfSkelJob": {
          "type": "integer",
          "description": "The number of Jobs still to be executed in this Job Stream. Read-Only attribute."
        },
        "numberOfUndecidedJob": {
          "type": "integer",
          "description": "The number of Jobs Undecided in this Job Stream. Read-Only attribute."
        }
      }
    },
    "JobStreamInPlanFilter": {
      "properties": {
        "workstationName": {
          "type": "string",
          "description": "The Workstation name filter"
        },
        "jobStreamName": {
          "type": "string",
          "description": "The job stream real name filter"
        },
        "jobStreamId": {
          "type": "string",
          "description": "The Job Stream Identifier filter"
        },
        "successorsId": {
          "type": "string",
          "description": "The successors job identifier filter."
        },
        "successorsInternetwork": {
          "type": "string",
          "description": "The successors internetwork filter."
        },
        "successorsWorkstationName": {
          "type": "string",
          "description": "The successors workstation name filter."
        },
        "successorsJobStreamName": {
          "type": "string",
          "description": "The successors schedule name filter."
        },
        "successorsInputArrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The successors input arrival time filter."
        },
        "successorsInputArrivalTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "successorsJobName": {
          "type": "string",
          "description": "The successors job name filter"
        },
        "internalStatusList": {
          "description": "The Internal status list filter",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statusList": {
          "description": "The status filter",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "internalStatusAsString": {
          "type": "string"
        },
        "statusAsString": {
          "type": "string"
        },
        "limit": {
          "type": "integer"
        },
        "limitRange": {
          "$ref": "#/definitions/IntegerRange"
        },
        "carriedForward": {
          "type": "boolean"
        },
        "carryForward": {
          "type": "boolean"
        },
        "deadlineTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Deadline Time Filter"
        },
        "deadlineTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "numCurrentNodes": {
          "type": "integer",
          "description": "The current node filter"
        },
        "priority": {
          "type": "integer"
        },
        "priorityRange": {
          "$ref": "#/definitions/IntegerRange"
        },
        "actualEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Finish Time Filter. It is Time Started plus Elapsed Time."
        },
        "actualEndTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Start Time Filter"
        },
        "startTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "inputArrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Input Arrival Time Filter"
        },
        "scheduledTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "actualStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Time Started Filter"
        },
        "actualStartTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "untilTime": {
          "type": "string",
          "format": "date-time"
        },
        "untilTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "fileDependencyId": {
          "type": "string"
        },
        "fileDependencyName": {
          "type": "string"
        },
        "fileDependencyWorkstationName": {
          "type": "string"
        },
        "promptDependencyId": {
          "type": "string"
        },
        "promptDependencyName": {
          "type": "string"
        },
        "promptDependencyNumber": {
          "type": "string"
        },
        "resourceDependencyId": {
          "type": "string"
        },
        "resourceDependencyName": {
          "type": "string"
        },
        "resourceDependencyWorkstationName": {
          "type": "string"
        },
        "monitoredJob": {
          "type": "boolean",
          "description": "The job stream monitored job filter"
        },
        "monitoredJobList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "actualKey": {
          "type": "string",
          "description": "The job stream actual key filter"
        },
        "originalKey": {
          "type": "string",
          "description": "The job stream original key filter"
        },
        "workstationNameAsString": {
          "type": "string"
        },
        "timeStartedAsString": {
          "type": "string"
        },
        "deadlineTimeAsString": {
          "type": "string"
        },
        "startTimeAsString": {
          "type": "string"
        },
        "estimatedDurationAsString": {
          "type": "string"
        },
        "limitAsString": {
          "type": "string"
        },
        "nameAsString": {
          "type": "string"
        },
        "originalName": {
          "type": "string"
        },
        "originalPriority": {
          "type": "string"
        },
        "priorityAsString": {
          "type": "string"
        },
        "scheduledTimeAsString": {
          "type": "string"
        },
        "successfulJobsAsString": {
          "type": "string"
        },
        "totalElapsedTimeAsString": {
          "type": "string"
        },
        "totalJobsAsString": {
          "type": "string"
        },
        "untilTimeAsString": {
          "type": "string"
        },
        "numJobDepsAsString": {
          "type": "string"
        },
        "numJsDepsAsString": {
          "type": "string"
        },
        "numInetDepsAsString": {
          "type": "string"
        },
        "numPromptDepsAsString": {
          "type": "string"
        },
        "numResDepsAsString": {
          "type": "string"
        },
        "numFileDepsAsString": {
          "type": "string"
        },
        "numSkelJobsAsString": {
          "type": "string"
        },
        "aliasName": {
          "type": "string"
        },
        "numUnresolvedDepsAsString": {
          "type": "string"
        },
        "internalIdentifierAsString": {
          "type": "string"
        },
        "modifyTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The modify time filter"
        }
      }
    },
    "JobStreamInPlanSorter": {
      "properties": {
        "workstationName": {
          "$ref": "#/definitions/Sorter"
        },
        "actualStartTime": {
          "$ref": "#/definitions/Sorter"
        },
        "cancelStatus": {
          "$ref": "#/definitions/Sorter"
        },
        "carriedForward": {
          "$ref": "#/definitions/Sorter"
        },
        "carryForward": {
          "$ref": "#/definitions/Sorter"
        },
        "critical": {
          "$ref": "#/definitions/Sorter"
        },
        "deadlineTime": {
          "$ref": "#/definitions/Sorter"
        },
        "earliestStartTime": {
          "$ref": "#/definitions/Sorter"
        },
        "estimatedDuration": {
          "$ref": "#/definitions/Sorter"
        },
        "internalStatus": {
          "$ref": "#/definitions/Sorter"
        },
        "late": {
          "$ref": "#/definitions/Sorter"
        },
        "limit": {
          "$ref": "#/definitions/Sorter"
        },
        "monitored": {
          "$ref": "#/definitions/Sorter"
        },
        "name": {
          "$ref": "#/definitions/Sorter"
        },
        "jobStreamId": {
          "$ref": "#/definitions/Sorter"
        },
        "originalName": {
          "$ref": "#/definitions/Sorter"
        },
        "originalPriority": {
          "$ref": "#/definitions/Sorter"
        },
        "priority": {
          "$ref": "#/definitions/Sorter"
        },
        "scheduledTime": {
          "$ref": "#/definitions/Sorter"
        },
        "startTime": {
          "$ref": "#/definitions/Sorter"
        },
        "status": {
          "$ref": "#/definitions/Sorter"
        },
        "successfulJobs": {
          "$ref": "#/definitions/Sorter"
        },
        "totalElapsedTime": {
          "$ref": "#/definitions/Sorter"
        },
        "totalJobs": {
          "$ref": "#/definitions/Sorter"
        },
        "untilTime": {
          "$ref": "#/definitions/Sorter"
        },
        "internalIdentifier": {
          "$ref": "#/definitions/Sorter"
        },
        "numDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numJobDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numJsDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numInetDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numPromptDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numResDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numFileDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numUnresolvedDeps": {
          "$ref": "#/definitions/Sorter"
        },
        "numSkelJobs": {
          "$ref": "#/definitions/Sorter"
        }
      }
    },
    "SubmitJobStreamInfo": {
      "required": [
        "inputArrivalTime"
      ],
      "properties": {
        "variableTable": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringMapObj"
          }
        },
        "inputArrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "variableTableId": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "jobstream": {
          "$ref": "#/definitions/JobStreamInPlan"
        }
      }
    },
    "SubmitJobIntoJobStreamInfo": {
      "required": [
        "jobDefinitionId",
        "inputArrivalTime"
      ],
      "properties": {
        "variableTable": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringMapObj"
          }
        },
        "jobDefinitionId": {
          "type": "string"
        },
        "inputArrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "variableTableId": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "MakeJobStreamInfo": {
      "required": [
        "inputArrivalTime"
      ],
      "properties": {
        "inputArrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "SubmitZOSJobStreamInfo": {
      "required": [
        "name",
        "startTime"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "description": {
          "type": "string"
        },
        "deadlineTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "priority": {
          "type": "integer"
        },
        "group": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "ownerDescription": {
          "type": "string"
        },
        "variableTable": {
          "type": "string"
        },
        "authorityGroup": {
          "type": "string"
        },
        "holdAll": {
          "type": "boolean"
        },
        "dependeciesResolution": {
          "type": "string"
        },
        "jobsToDelete": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZosJobInfo"
          }
        },
        "jobsToAdd": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZosJobInfo"
          }
        },
        "jobsToModify": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZosJobInfo"
          }
        },
        "variablesToBeSubstituted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringMapObj"
          }
        },
        "dependencyToDelete": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/String2IntegerList"
          }
        },
        "dependencyToAdd": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/String2IntegerList"
          }
        },
        "jobVariablesToBeSubstituted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringMapObjList"
          }
        }
      }
    },
    "OperatorInstructionInPlan": {
      "properties": {
        "id": {
          "type": "string"
        },
        "jobStreamName": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "workstation": {
          "type": "string"
        },
        "jclName": {
          "type": "string"
        },
        "textLines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "validFromDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "validToDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "EngineInformation": {
      "properties": {
        "version": {
          "type": "string"
        },
        "masterDomainKey": {
          "$ref": "#/definitions/DomainInPlanKey"
        },
        "masterDomainId": {
          "type": "string"
        },
        "masterWorkstationKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "masterWorkstationId": {
          "type": "string"
        },
        "thisWorkstationKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "thisWorkstationId": {
          "type": "string"
        },
        "planRunNumber": {
          "type": "integer",
          "format": "int64"
        },
        "currentJobStreamDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The current Job Stream Date"
        },
        "startOfDay": {
          "type": "integer",
          "format": "int64"
        },
        "engineStatus": {
          "type": "string",
          "description": "Possible values are ENGINE_STATUS_LIVES ENGINE_STATUS_DOWN ENGINE_STATUS_RULES"
        },
        "dbExpanded": {
          "type": "boolean"
        },
        "planExpanded": {
          "type": "boolean"
        },
        "timeZoneEnabled": {
          "type": "boolean"
        },
        "masterDatabaseTimeZone": {
          "type": "string"
        },
        "masterPlanTimeZone": {
          "type": "string"
        },
        "databaseAuditLevel": {
          "type": "integer",
          "format": "int32"
        },
        "planAuditLevel": {
          "type": "integer",
          "format": "int32"
        },
        "currentSymphony": {
          "$ref": "#/definitions/SymphonyInPlan"
        }
      }
    },
    "InternalDependencyInPlan": {
      "properties": {
        "jobId": {
          "type": "string"
        },
        "jobInPlanKey": {
          "$ref": "#/definitions/JobInPlanKey"
        },
        "satisfied": {
          "type": "boolean"
        },
        "depSequence": {
          "type": "integer"
        },
        "conditional": {
          "type": "boolean"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "joinName": {
          "type": "string",
          "description": "The name of the join associated with an Internal Conditional Dependency. Used with Conditional Dependency."
        },
        "joinQuantity": {
          "type": "integer",
          "description": "The quantity of the join associated with an Internal Conditional Dependency. Used with Conditional Dependency."
        },
        "outputConditionList": {
          "type": "string",
          "description": "The list of the output conditions - separated by commas - associated with an Internal Conditional Dependency. Used with Conditional Dependency."
        },
        "statusConditions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of the status conditions associated to an Internal Conditional Dependency. Possible status are STARTED COMPLETED DUMMY_COMPLETED ERROR SUCC FAIL SUPPRESS"
        }
      }
    },
    "ExternalDependencyInPlan": {
      "properties": {
        "jobStreamId": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "jobSuccId": {
          "type": "string",
          "description": "The identifier of the JobInPlan that points to this dependency."
        },
        "jobStreamSuccId": {
          "type": "string",
          "description": "The identifier of the JobStreamInPlan that points to this dependency."
        },
        "jobStreamKey": {
          "$ref": "#/definitions/JobStreamInPlanKey"
        },
        "jobKey": {
          "$ref": "#/definitions/JobInPlanKey"
        },
        "depSequence": {
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "satisfied": {
          "type": "boolean"
        },
        "conditional": {
          "type": "boolean"
        },
        "pending": {
          "type": "boolean",
          "description": "representing if the pointed object is pending or not"
        },
        "zombie": {
          "type": "boolean",
          "description": "indicating if the dependency is a zombie (i.e. cannot be resolved) or not"
        },
        "joinName": {
          "type": "string",
          "description": "The name of the join associated with an External Conditional Dependency. Used with Conditional Dependency."
        },
        "joinQuantity": {
          "type": "integer",
          "description": "The quantity of the join associated with an External Conditional Dependency. Used with Conditional Dependency."
        },
        "outputConditionList": {
          "type": "string",
          "description": "The list of the output conditions - separated by commas - associated with an External Conditional Dependency. Used with Conditional Dependency."
        },
        "statusConditions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of the status conditions associated with an External Conditional Dependency. Possible status are STARTED COMPLETED DUMMY_COMPLETED ERROR SUCC FAIL SUPPRESS"
        }
      }
    },
    "InternetworkDependencyInPlan": {
      "properties": {
        "jobId": {
          "type": "string"
        },
        "jobStreamId": {
          "type": "string"
        },
        "networkAgentId": {
          "type": "string"
        },
        "workstationInPlanKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "dependency": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "depSequence": {
          "type": "integer"
        },
        "satisfied": {
          "type": "boolean"
        }
      }
    },
    "FileDependencyInPlan": {
      "properties": {
        "fileInPlan": {
          "$ref": "#/definitions/FileInPlan"
        },
        "satisfied": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "description": "File Dependency is Satisfied, Unsatisfied or Undecided"
        },
        "depSequence": {
          "type": "integer"
        },
        "timeLastCheck": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "PromptDependencyInPlan": {
      "properties": {
        "promptId": {
          "type": "string"
        },
        "promptKey": {
          "$ref": "#/definitions/PromptInPlanKey"
        },
        "text": {
          "type": "string"
        },
        "workstationId": {
          "type": "string"
        },
        "workstationInPlanKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "status": {
          "type": "string",
          "description": "Valid values are: Satisfied, Unsatisfied, Undecided."
        },
        "promptStatus": {
          "type": "string",
          "description": "Valid values are: Asked, Not Asked, Answered Yes, Answered No."
        },
        "promptType": {
          "type": "string",
          "description": "Valid values are: Local, Global, Restart."
        },
        "promptNumber": {
          "type": "integer"
        },
        "satisfied": {
          "type": "boolean"
        },
        "depSequence": {
          "type": "integer"
        },
        "loadedFromDB": {
          "type": "boolean"
        }
      }
    },
    "ResourceDependencyInPlan": {
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "resourceKey": {
          "$ref": "#/definitions/ResourceInPlanKey"
        },
        "workstationId": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "description": "Number of units required by the dependency."
        },
        "quantityHeld": {
          "type": "integer",
          "description": "Number of units currently held by the dependency."
        },
        "available": {
          "type": "integer",
          "description": "The Available Resources"
        },
        "satisfied": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "description": "Valid values are: Satisfied, Unsatisfied, Undecided."
        },
        "resourceActionOnComplete": {
          "type": "string"
        },
        "allocationType": {
          "type": "string",
          "description": "z/OS attribute"
        },
        "onError": {
          "type": "string",
          "description": "z/OS attribute"
        },
        "depSequence": {
          "type": "integer"
        }
      }
    },
    "RerunDetails": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The Job Definition Identifier taken from the Database.  If specified, the rerun will be a 'Rerun from'."
        },
        "priority": {
          "type": "integer",
          "description": "The new priority values. If not specified the default is 10."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss, the start time. If not specified the default is null."
        },
        "asap": {
          "type": "boolean",
          "description": "If set to true, the job is run immediatly, otherwise according to the start time that was set. If not speficified the default value is false."
        },
        "stepName": {
          "type": "string",
          "description": "The step name to be used. If not specifed, the rerun will not be a 'rerun step'."
        },
        "skipCheckForJobSuccessorRerun": {
          "type": "boolean",
          "description": "If set to true, the security and status check must be skipped. If not specified the default value is false."
        },
        "rerunJobOnTermination": {
          "type": "boolean",
          "description": "True if rerun must be performed at the job termination. False otherwise. If not specified the default value is false."
        },
        "rerunJobOnSameWorkstation": {
          "type": "boolean",
          "description": "True if rerun must be performed on the same workstation (for pool and dynamic pool). False otherwise. If not specified the default value is false."
        },
        "jobDefinitionInPlan": {
          "$ref": "#/definitions/JobDefinitionInPlan"
        }
      }
    },
    "TimeRestrictionsInPlan": {
      "properties": {
        "untilTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "untilJobStreamTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - Until time applied to the start of the Job Stream instead of the start of its jobs, applicable only for Job Stream in plan."
        },
        "deadlineTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "timeDependent": {
          "type": "boolean"
        },
        "minDurationAction": {
          "type": "string",
          "description": "Applicable only for Job in plan"
        },
        "maxDurationAction": {
          "type": "string",
          "description": "Applicable only for Job in plan"
        },
        "untilAction": {
          "type": "string"
        },
        "minDuration": {
          "type": "integer",
          "description": "Time in milliseconds - applicable only for Job in plan"
        },
        "maxDuration": {
          "type": "integer",
          "description": "Time in milliseconds - applicable only for Job in plan"
        },
        "deadlineAction": {
          "type": "string",
          "description": "Can be defined only on Job. Valid value is: SUPPRESS"
        },
        "perJobUntil": {
          "type": "boolean",
          "default": false,
          "description": "Default value is false"
        },
        "lateInfo": {
          "$ref": "#/definitions/LateInfo"
        },
        "originalDeadline": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. For z/OS only"
        },
        "zosDeadlineAction": {
          "type": "string",
          "description": "JobDeadlineAction Type. Valid values are: ALERT, COMPLETE, NOP, ERROR, BLANK. For z/OS only"
        }
      }
    },
    "TimeInfo": {
      "properties": {
        "actualStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - This is the Real Start Time. This Time plus the Real Duration (elapsedTime) gives the Finish Time."
        },
        "estimatedDuration": {
          "type": "integer",
          "format": "int64",
          "description": "Time in milliseconds"
        },
        "elapsedTime": {
          "type": "integer",
          "format": "int64",
          "description": "Time in milliseconds"
        },
        "actualEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        }
      }
    },
    "Status": {
      "required": [
        "commonStatus",
        "internalStatus"
      ],
      "properties": {
        "commonStatus": {
          "type": "string",
          "description": "Valid statuses are: Satisfied, Unsatisfied, Undecided."
        },
        "internalStatus": {
          "type": "string",
          "description": "Valid statuses are: Satisfied, Unsatisfied, Undecided."
        }
      }
    },
    "NodeStatus": {
      "required": [
        "commonStatus",
        "internalStatus"
      ],
      "properties": {
        "commonStatus": {
          "type": "string",
          "description": "Valid values are WAITING, READY, RUNNING, SUCCESSFUL, ERROR, CANCELED, HELD, UNDECIDED, BLOCKED, SUPPRESS"
        },
        "internalStatus": {
          "type": "string",
          "description": "Valid values are READY, HOLD, EXEC, EXEC_PLUS, ABEND, SUCC, CANCEL, UNKNOWN, USER_STREAM, CANCELP, ADD, RJOB, FAILED, MPE_SUSP, WAIT, INTRO, INTRO_PLUS, WAITD, SCHED, ABENDP, SUCCP, ENDP, EXTRN, ERROR, FENCE, BOUND, SUSP, SUPPRESS, RECOVERY_IN_PROGRESS"
        },
        "canceled": {
          "type": "boolean"
        }
      }
    },
    "JobOnCriticalNetworkInfo": {
      "properties": {
        "criticalJobInfo": {
          "$ref": "#/definitions/CriticalJobInfo"
        },
        "critical": {
          "type": "boolean"
        },
        "onCriticalPath": {
          "type": "boolean"
        },
        "late": {
          "type": "boolean"
        },
        "longRunning": {
          "type": "boolean"
        },
        "promotedToUrgentQueue": {
          "type": "boolean"
        },
        "riskForJobStreamLimit": {
          "type": "boolean"
        },
        "riskForJobStreamPriority": {
          "type": "boolean"
        },
        "riskForJobStreamFence": {
          "type": "boolean"
        },
        "riskForJobStreamSuppressed": {
          "type": "boolean"
        },
        "riskForJobSuppressed": {
          "type": "boolean"
        },
        "riskForJobPriority": {
          "type": "boolean"
        },
        "riskForJobFence": {
          "type": "boolean"
        },
        "riskForStartTime": {
          "type": "boolean"
        },
        "riskForWorkStationIgnore": {
          "type": "boolean"
        },
        "criticalStart": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "actualEnd": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "latestOut": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "actualArrival": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "estimatedStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "estimatedEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "plannedRestriction": {
          "$ref": "#/definitions/TimeRestrictionsInPlan"
        },
        "every": {
          "type": "boolean"
        },
        "restarted": {
          "type": "boolean"
        }
      }
    },
    "DependenciesStats": {
      "properties": {
        "numberOfDependencies": {
          "type": "integer"
        },
        "numberOfJobDependencies": {
          "type": "integer"
        },
        "numberOfJobStreamDependencies": {
          "type": "integer"
        },
        "numberOfInternetworkDependencies": {
          "type": "integer"
        },
        "numberOfPromptDependencies": {
          "type": "integer"
        },
        "numberOfResourceDependencies": {
          "type": "integer"
        },
        "numberOfFileDependencies": {
          "type": "integer"
        },
        "numberOfUnresolvedDependencies": {
          "type": "integer"
        },
        "numberOfNonResourceUnresolvedDependencies": {
          "type": "integer"
        }
      }
    },
    "TaskTypeInPlan": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "recordNumber": {
          "type": "integer",
          "description": "Record number in the Symphony"
        }
      }
    },
    "IntegerRange": {
      "properties": {
        "rangeStart": {
          "type": "integer"
        },
        "rangeEnd": {
          "type": "integer"
        }
      }
    },
    "LongRange": {
      "properties": {
        "rangeStart": {
          "type": "integer",
          "format": "int64"
        },
        "rangeEnd": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Sorter": {
      "properties": {
        "descending": {
          "type": "boolean",
          "description": "True is descending"
        },
        "priority": {
          "type": "integer",
          "description": "The priority used to sort on multiple level ordering - small number is higher"
        }
      }
    },
    "OutputConditionInPlan": {
      "properties": {
        "conditionId": {
          "type": "string"
        },
        "jobDefinitionInPlanId": {
          "type": "string"
        },
        "jobDefinitionInPlanKey": {
          "$ref": "#/definitions/JobDefinitionInPlanKey"
        },
        "conditionName": {
          "type": "string"
        },
        "mappingExpression": {
          "type": "string"
        },
        "succCondition": {
          "type": "boolean"
        },
        "satisfied": {
          "type": "boolean"
        }
      }
    },
    "DependenciesInPlan": {
      "properties": {
        "externalDependencyInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalDependencyInPlan"
          }
        },
        "internetworkDependenciesInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternetworkDependencyInPlan"
          }
        },
        "fileDependencyInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDependencyInPlan"
          }
        },
        "promptDependencyInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromptDependencyInPlan"
          }
        },
        "resourceDependencyInPlan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDependencyInPlan"
          }
        }
      }
    },
    "WhatIfInfo": {
      "properties": {
        "jobs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "levels": {
          "type": "integer"
        },
        "maxObjs": {
          "type": "integer"
        },
        "getPredecessors": {
          "type": "boolean"
        },
        "getSuccessors": {
          "type": "boolean"
        },
        "returnReqJobs": {
          "type": "boolean"
        },
        "limitOnCompletedObj": {
          "type": "boolean"
        }
      }
    },
    "WhatIfResult": {
      "description": "What-if result",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/JobInPlanOnCriticalNetwork"
        }
      }
    },
    "WorkstationConnectInfo": {
      "description": "Connect to host info",
      "properties": {
        "connection": {
          "type": "string"
        },
        "command": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "PredecessorsChainInfo": {
      "description": "Predecessors chain info, filter is optional",
      "properties": {
        "option": {
          "description": "Available options are : CRITICAL_PATH, HOT_LIST, ACTIVE_PREDECESSORS, ALL_PREDECESSORS, COMPLETED_PREDECESSORS",
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/QueryFilterPlan"
        }
      }
    },
    "NextPredecessorsChainInfo": {
      "description": "Next predecessors chain info",
      "properties": {
        "option": {
          "description": "Available options are : CRITICAL_PATH, HOT_LIST, ACTIVE_PREDECESSORS, ALL_PREDECESSORS, COMPLETED_PREDECESSORS",
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/QueryPlanContext"
        }
      }
    },
    "PlanInfo": {
      "description": "Create plan info",
      "properties": {
        "key": {
          "$ref": "#/definitions/SymphonyInPlanKey"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss. This option is required only for create_plan action"
        },
        "timeExtension": {
          "type": "integer",
          "format": "int64"
        },
        "planType": {
          "description": "Available options are : TRIAL, FORECAST. This option is required only for create_plan action.",
          "type": "string"
        }
      }
    },
    "StringMessage": {
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "String2IntegerList": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "StringMapObjList": {
      "properties": {
        "key": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringMapObj"
          }
        }
      }
    },
    "PromptInPlanKey": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "PromptInPlan": {
      "properties": {
        "id": {
          "type": "string"
        },
        "promptInPlanKey": {
          "$ref": "#/definitions/PromptInPlanKey"
        },
        "workstationId": {
          "type": "string"
        },
        "resourceModelId": {
          "type": "string"
        },
        "planId": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "jobStreamId": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "The Prompt Status. Vaid values are: Asked, Not Asked, Exists, Not Exists."
        },
        "type": {
          "type": "string",
          "description": "The Prompt Type. Valid values are: Local, Global, Restart."
        },
        "number": {
          "type": "integer",
          "description": "The Prompt Number (used for ad-hoc prompt)"
        },
        "workstationInPlanKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "jobInPlanKey": {
          "$ref": "#/definitions/JobInPlanKey"
        },
        "jobStreamInPlanKey": {
          "$ref": "#/definitions/JobStreamInPlanKey"
        },
        "timeAsked": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Date this prompt has been asked."
        },
        "timeRespond": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Date this Prompt has been answered."
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        }
      }
    },
    "PromptInPlanFilter": {
      "properties": {
        "promptId": {
          "type": "string"
        },
        "promptName": {
          "type": "string"
        },
        "prompt_nameAsString": {
          "type": "string"
        },
        "promptJobId": {
          "type": "string"
        },
        "promptNumber": {
          "type": "integer"
        },
        "statusList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "promptText": {
          "type": "string"
        },
        "promptType": {
          "type": "string"
        },
        "promptTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifyTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The modify time filter"
        }
      }
    },
    "PromptInPlanSorter": {
      "properties": {
        "askTime": {
          "$ref": "#/definitions/Sorter"
        },
        "name": {
          "$ref": "#/definitions/Sorter"
        },
        "resId": {
          "$ref": "#/definitions/Sorter"
        },
        "number": {
          "$ref": "#/definitions/Sorter"
        },
        "replyTime": {
          "$ref": "#/definitions/Sorter"
        },
        "status": {
          "$ref": "#/definitions/Sorter"
        },
        "text": {
          "$ref": "#/definitions/Sorter"
        },
        "type": {
          "$ref": "#/definitions/Sorter"
        },
        "workstationName": {
          "$ref": "#/definitions/Sorter"
        }
      }
    },
    "QueryFilterPlan": {
      "properties": {
        "filters": {
          "$ref": "#/definitions/FiltersPlan"
        },
        "sorters": {
          "$ref": "#/definitions/Sorters"
        },
        "complexFilters": {
          "$ref": "#/definitions/ComplexQueryFilters"
        }
      }
    },
    "FiltersPlan": {
      "properties": {
        "jobInPlanFilter": {
          "$ref": "#/definitions/JobInPlanFilter"
        },
        "jobStreamInPlanFilter": {
          "$ref": "#/definitions/JobStreamInPlanFilter"
        },
        "fileInPlanFilter": {
          "$ref": "#/definitions/FileInPlanFilter"
        },
        "domainInPlanFilter": {
          "$ref": "#/definitions/DomainInPlanFilter"
        },
        "resourceInPlanFilter": {
          "$ref": "#/definitions/ResourceInPlanFilter"
        },
        "promptInPlanFilter": {
          "$ref": "#/definitions/PromptInPlanFilter"
        },
        "workstationInPlanFilter": {
          "$ref": "#/definitions/WorkstationInPlanFilter"
        },
        "criticalJobInPlanFilter": {
          "$ref": "#/definitions/CriticalJobInPlanFilter"
        },
        "symphonyInPlanFilter": {
          "$ref": "#/definitions/SymphonyInPlanFilter"
        },
        "windowsUserInPlanFilter": {
          "$ref": "#/definitions/WindowsUserInPlanFilter"
        }
      }
    },
    "Sorters": {
      "description": "Used only with the current plan",
      "properties": {
        "jobInPlanSorter": {
          "$ref": "#/definitions/JobInPlanSorter"
        },
        "jobStreamInPlanSorter": {
          "$ref": "#/definitions/JobStreamInPlanSorter"
        },
        "fileInPlanSorter": {
          "$ref": "#/definitions/FileInPlanSorter"
        },
        "domainInPlanSorter": {
          "$ref": "#/definitions/DomainInPlanSorter"
        },
        "promptInPlanSorter": {
          "$ref": "#/definitions/PromptInPlanSorter"
        },
        "resourceInPlanSorter": {
          "$ref": "#/definitions/ResourceInPlanSorter"
        },
        "workstationInPlanSorter": {
          "$ref": "#/definitions/WorkstationInPlanSorter"
        },
        "windowsUserInPlanSorter": {
          "$ref": "#/definitions/WindowsUserInPlanSorter"
        }
      }
    },
    "ComplexQueryFilters": {
      "description": "Used only with the current plan",
      "properties": {
        "operator": {
          "type": "string",
          "description": "AND, OR, NOT or empty for NONE. With NOT or empty operator, only one filter can be used. In this case, if more than one filter is specified, the operator will be OR"
        },
        "jobInPlanComplexFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobInPlanComplexFilter"
          }
        },
        "jobStreamInPlanComplexFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobStreamInPlanComplexFilter"
          }
        },
        "fileInPlanComplexFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileInPlanComplexFilter"
          }
        },
        "domainInPlanComplexFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DomainInPlanComplexFilter"
          }
        },
        "promptInPlanComplexFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromptInPlanComplexFilter"
          }
        },
        "resourceInPlanComplexFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceInPlanComplexFilter"
          }
        },
        "workstationInPlanComplexFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkstationInPlanComplexFilter"
          }
        },
        "windowsUserInPlanComplexFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WindowsUserInPlanComplexFilter"
          }
        }
      }
    },
    "JobStreamInPlanComplexFilter": {
      "properties": {
        "filter": {
          "$ref": "#/definitions/JobStreamInPlanFilter"
        },
        "notOperator": {
          "type": "boolean"
        }
      }
    },
    "JobInPlanComplexFilter": {
      "properties": {
        "filter": {
          "$ref": "#/definitions/JobInPlanFilter"
        },
        "notOperator": {
          "type": "boolean"
        }
      }
    },
    "FileInPlanComplexFilter": {
      "properties": {
        "filter": {
          "$ref": "#/definitions/FileInPlanFilter"
        },
        "notOperator": {
          "type": "boolean"
        }
      }
    },
    "DomainInPlanComplexFilter": {
      "properties": {
        "filter": {
          "$ref": "#/definitions/DomainInPlanFilter"
        },
        "notOperator": {
          "type": "boolean"
        }
      }
    },
    "PromptInPlanComplexFilter": {
      "properties": {
        "filter": {
          "$ref": "#/definitions/PromptInPlanFilter"
        },
        "notOperator": {
          "type": "boolean"
        }
      }
    },
    "ResourceInPlanComplexFilter": {
      "properties": {
        "filter": {
          "$ref": "#/definitions/ResourceInPlanFilter"
        },
        "notOperator": {
          "type": "boolean"
        }
      }
    },
    "WorkstationInPlanComplexFilter": {
      "properties": {
        "filter": {
          "$ref": "#/definitions/WorkstationInPlanFilter"
        },
        "notOperator": {
          "type": "boolean"
        }
      }
    },
    "WindowsUserInPlanComplexFilter": {
      "properties": {
        "filter": {
          "$ref": "#/definitions/WindowsUserInPlanFilter"
        },
        "notOperator": {
          "type": "boolean"
        }
      }
    },
    "QueryPlanContext": {
      "properties": {
        "filters": {
          "$ref": "#/definitions/FiltersPlan"
        },
        "objectsIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "restartIndex": {
          "type": "integer",
          "format": "int64",
          "description": "Plan Restart Index"
        },
        "sequenceNumber": {
          "type": "integer",
          "description": "Plan Sequence Number"
        },
        "objectCount": {
          "type": "integer",
          "description": "The total number of remaining items to return"
        },
        "howMany": {
          "type": "integer",
          "description": "The total number of items to be returned - used for query next API"
        }
      }
    },
    "ResourceInPlan": {
      "properties": {
        "id": {
          "type": "string"
        },
        "resourceInPlanKey": {
          "$ref": "#/definitions/ResourceInPlanKey"
        },
        "planId": {
          "type": "string"
        },
        "resourceModelId": {
          "type": "string"
        },
        "workstationId": {
          "type": "string"
        },
        "quantityAvailable": {
          "type": "integer"
        },
        "quantityDefined": {
          "type": "integer"
        },
        "quantityInUse": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "description": "The status of this resource. Available, Not Available, Undecided."
        },
        "holders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceHolderInPlan"
          },
          "description": "The list of Jobs or Job Streams that hold this resource. They should be of type ResourceHolderInPlan"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        }
      }
    },
    "ResourceInPlanKey": {
      "properties": {
        "name": {
          "type": "string"
        },
        "workstationInPlanKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        }
      }
    },
    "ResourceHolderInPlan": {
      "properties": {
        "jobStreamId": {
          "type": "string"
        },
        "jobStreamKey": {
          "$ref": "#/definitions/JobStreamInPlanKey"
        },
        "jobId": {
          "type": "string"
        },
        "jobKey": {
          "$ref": "#/definitions/JobInPlanKey"
        },
        "quantity": {
          "type": "integer",
          "description": "The Resource quantity held by the Job or Job Stream."
        },
        "jobStreamInternalName": {
          "type": "string"
        }
      }
    },
    "ResourceInPlanFilter": {
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "workstatioName": {
          "type": "string"
        },
        "workstationNameAsString": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Possible values are AVAILABLE, NOT_AVAILABLE, UNDECIDED"
        },
        "statusList": {
          "description": "Possible values are AVAILABLE, NOT_AVAILABLE, UNDECIDED",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quantityDefined": {
          "type": "string"
        },
        "quantityAvailable": {
          "type": "integer"
        },
        "quantityAvailableRange": {
          "$ref": "#/definitions/IntegerRange"
        },
        "quantityAvailableAsString": {
          "type": "string"
        },
        "quantityInUse": {
          "type": "integer"
        },
        "resourceType": {
          "type": "string"
        },
        "modifyTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The modify time filter"
        }
      }
    },
    "ResourceInPlanSorter": {
      "properties": {
        "name": {
          "$ref": "#/definitions/Sorter"
        },
        "resId": {
          "$ref": "#/definitions/Sorter"
        },
        "quantity": {
          "$ref": "#/definitions/Sorter"
        },
        "quantityInUse": {
          "$ref": "#/definitions/Sorter"
        },
        "status": {
          "$ref": "#/definitions/Sorter"
        },
        "workstatioName": {
          "$ref": "#/definitions/Sorter"
        },
        "availableQuantity": {
          "$ref": "#/definitions/Sorter"
        }
      }
    },
    "SymphonyInPlan": {
      "description": "Information about Symphony File",
      "properties": {
        "key": {
          "$ref": "#/definitions/SymphonyInPlanKey"
        },
        "id": {
          "type": "string"
        },
        "dbId": {
          "type": "string",
          "description": "The identifier of database."
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "timeFirstJobStarted": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "lastTimeOpened": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The latest time this file has been opened."
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The validity start time of this plan."
        },
        "validTo": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The validity end time of this plan."
        },
        "runNumber": {
          "type": "integer",
          "description": "The sequential run number of this plan."
        },
        "size": {
          "type": "integer",
          "description": "The size of this Symphony file."
        },
        "criticalPathEnabled": {
          "type": "boolean"
        },
        "whatIfEnabled": {
          "type": "boolean"
        },
        "listSecurityCheckEnabled": {
          "type": "boolean"
        },
        "startOfDay": {
          "type": "integer"
        },
        "rerunSameName": {
          "type": "boolean",
          "description": "The rerun with same job name value."
        },
        "active": {
          "type": "boolean"
        },
        "emptySchedsAreSucc": {
          "type": "boolean"
        },
        "recoveryPromptBase": {
          "type": "integer"
        },
        "recoveryPromptDelta": {
          "type": "integer"
        },
        "companyName": {
          "type": "string"
        },
        "timezoneEnabled": {
          "type": "boolean"
        },
        "eventProcessorWorkstationName": {
          "type": "string"
        },
        "eventProcessorPort": {
          "type": "integer"
        },
        "eventProcessorEIFSSLPort": {
          "type": "integer"
        },
        "eventProcessorEIFPort": {
          "type": "integer"
        },
        "masterWorkstationName": {
          "type": "string"
        },
        "masterDomainName": {
          "type": "string"
        },
        "numberOfCpu": {
          "type": "integer",
          "description": "The number of CPU in this plan."
        },
        "untilDays": {
          "type": "integer"
        }
      }
    },
    "SymphonyInPlanKey": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The Plan Type. Valid values are: ARCHIVED, SYMNEW, TRIAL, FORECAST, CURRENT, UNKNOWN"
        }
      }
    },
    "SymphonyInPlanFilter": {
      "properties": {
        "planName": {
          "type": "string"
        },
        "planId": {
          "type": "string"
        },
        "planType": {
          "type": "string",
          "description": "The Plan Type. Valid values are: ARCHIVED, SYMNEW, TRIAL, FORECAST, CURRENT, UNKNOWN"
        }
      }
    },
    "UserFieldInPlan": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "operation": {
          "type": "string",
          "description": "Valid values are INSERT, MODIFY, DELETE, NONE"
        }
      }
    },
    "VirtualWorkstationInPlan": {
      "properties": {
        "key": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "id": {
          "type": "string"
        },
        "hostWorkstationKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "hostWorkstationId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "securityLevel": {
          "type": "string"
        },
        "sslPort": {
          "type": "integer"
        },
        "domainKey": {
          "$ref": "#/definitions/DomainInPlanKey"
        },
        "domainId": {
          "type": "string"
        },
        "linkStatus": {
          "type": "string"
        },
        "limit": {
          "type": "integer"
        },
        "fence": {
          "type": "integer"
        },
        "accessMethod": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "timeStarted": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Date this Workstation started"
        },
        "Long elapsedTime": {
          "type": "integer",
          "format": "int64"
        },
        "server": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        },
        "requested": {
          "type": "integer"
        },
        "defuser": {
          "type": "string"
        },
        "jobmanUp": {
          "type": "boolean"
        },
        "tcpLink": {
          "type": "boolean"
        },
        "writerUp": {
          "type": "boolean"
        },
        "writerDs": {
          "type": "boolean"
        },
        "symDwnld": {
          "type": "boolean"
        },
        "isInited": {
          "type": "boolean"
        },
        "initExec": {
          "type": "boolean"
        },
        "mailReceived": {
          "type": "boolean"
        },
        "fullStatus": {
          "type": "boolean"
        },
        "autoLink": {
          "type": "boolean"
        },
        "resolveDependencies": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "virtualWorkstationInPlanAvailabilityIntervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualWorkstationInPlanAvailabilityIntervals"
          }
        },
        "zOSAttributes": {
          "$ref": "#/definitions/WorkstationZOSAttributes"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        }
      }
    },
    "VirtualWorkstationInPlanAvailabilityIntervals": {
      "properties": {
        "intervalStartDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Date this Workstation started"
        },
        "intervalEndDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Date this Workstation started"
        },
        "description": {
          "type": "string"
        },
        "plannedSettings": {
          "$ref": "#/definitions/WorkstationInPlanAvailabilitySettings"
        },
        "modifiedSettings": {
          "$ref": "#/definitions/WorkstationInPlanAvailabilitySettings"
        }
      }
    },
    "WAObjectIssueListResult": {
      "properties": {
        "issuesList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WAObjectIssue"
          }
        }
      }
    },
    "WAObjectIssue": {
      "description": "WAObjectIssue responses",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the related Job"
        },
        "issueMessage": {
          "type": "string",
          "description": "The issue related message"
        },
        "issueType": {
          "type": "string",
          "description": "The kind of issue"
        }
      }
    },
    "WindowsUserInPlanKey": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "workstationKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        }
      }
    },
    "WindowsUserInPlan": {
      "properties": {
        "id": {
          "type": "string"
        },
        "planId": {
          "type": "string"
        },
        "userDefinitionId": {
          "type": "string"
        },
        "workstationId": {
          "type": "string"
        },
        "windowsUserInPlanKey": {
          "$ref": "#/definitions/WindowsUserInPlanKey"
        },
        "password": {
          "type": "string"
        },
        "isPasswordEncrypted": {
          "type": "boolean"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        }
      }
    },
    "WindowsUserInPlanFilter": {
      "properties": {
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "modifyTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The modify time filter"
        }
      }
    },
    "WindowsUserInPlanSorter": {
      "properties": {
        "userName": {
          "$ref": "#/definitions/Sorter"
        },
        "userId": {
          "$ref": "#/definitions/Sorter"
        },
        "workstationName": {
          "$ref": "#/definitions/Sorter"
        }
      }
    },
    "WorkstationInPlanKey": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "WorkstationInPlan": {
      "required": [
        "id",
        "workstationInPlanKey"
      ],
      "properties": {
        "workstationInPlanKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "hostWorkstationKey": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "domainInPlanKey": {
          "$ref": "#/definitions/DomainInPlanKey"
        },
        "id": {
          "type": "string"
        },
        "hostWorkstationId": {
          "type": "string"
        },
        "planId": {
          "type": "string"
        },
        "workstationModelId": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "domainId": {
          "type": "string"
        },
        "accessMethod": {
          "type": "string",
          "description": "The (XA only) Workstation access method, used during the connectToHostCpu API"
        },
        "version": {
          "type": "string"
        },
        "server": {
          "type": "string",
          "description": "A char representing the server code"
        },
        "userInfo": {
          "type": "string"
        },
        "defaultUser": {
          "type": "string",
          "description": "Default user name. Used by OPC."
        },
        "type": {
          "type": "string",
          "description": "The Workstation Type. Valid values are: MANAGER, FTA, XA, SA, WORKLOAD_BROKER, AGENT, POOL, DYNAMIC_POOL, REMOTE_ENGINE, GENERAL, COMPUTER, PRINTER, ZCENTRIC"
        },
        "hostType": {
          "type": "string",
          "description": "The Host Workstation Type. Valid values are: MASTER, MANAGER, WORKSTATION"
        },
        "os": {
          "type": "string",
          "description": "The Workstation Operating System. Valid values are: WINDOWS, UNIX, ZOS, LINUX, AIX, HPUX, SOLARIS, AS400, WEB, OTHER"
        },
        "securityLevel": {
          "type": "string",
          "description": "The Workstation Security Level. Valid values are: ON, NONE, ENABLED, FORCE, HTTP, HTTPS"
        },
        "linkStatus": {
          "type": "string",
          "description": "The Workstation link status. Valid values are: LINKED, UNLINKED, FULLY_LINKED, NOT_APPLICABLE"
        },
        "applicationServerStatus": {
          "type": "string",
          "description": "The Application Server Status. Valid values are: RUNNING, NOT_RUNNING, RESTARTING"
        },
        "sslPort": {
          "type": "integer"
        },
        "remoteEnginePort": {
          "type": "integer",
          "description": "The remote engine port (broker port on broker workstations)"
        },
        "tcpPort": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "fence": {
          "type": "integer"
        },
        "symRunNumber": {
          "type": "integer",
          "description": "The Symphony RunNumber of the Workstation"
        },
        "elapsedTime": {
          "type": "integer",
          "format": "int64"
        },
        "requestedJobs": {
          "type": "integer",
          "description": "Number of requested jobs"
        },
        "monmanCurrentCfg": {
          "type": "integer",
          "description": "Monman current monitoring configuration crc"
        },
        "monmanNewCfg": {
          "type": "integer",
          "description": "Monman new monitoring configuration crc"
        },
        "jobmanUp": {
          "type": "boolean"
        },
        "tcpLink": {
          "type": "boolean"
        },
        "writerUp": {
          "type": "boolean"
        },
        "writerDs": {
          "type": "boolean",
          "description": "Mailman is writing to Mailbox"
        },
        "symDwnld": {
          "type": "boolean",
          "description": "Symphony downloaded for new day"
        },
        "initialized": {
          "type": "boolean"
        },
        "initExec": {
          "type": "boolean",
          "description": "JobMan updating Workstation for exececuting job"
        },
        "mailReceived": {
          "type": "boolean",
          "description": "Used to check if the link is Up"
        },
        "fullStatus": {
          "type": "boolean"
        },
        "autoLink": {
          "type": "boolean"
        },
        "resolveDependencies": {
          "type": "boolean"
        },
        "behindFirewall": {
          "type": "boolean"
        },
        "evtProcRunning": {
          "type": "boolean",
          "description": "Event Processor is running"
        },
        "ssmRunning": {
          "type": "boolean"
        },
        "configUpdated": {
          "type": "boolean",
          "description": "SSM Agent's configuration is updated"
        },
        "daylightTime": {
          "type": "boolean"
        },
        "jobLauncherDisabled": {
          "type": "boolean"
        },
        "timeStarted": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The Date this Workstation started"
        },
        "modifyData": {
          "$ref": "#/definitions/ModifyData"
        },
        "description": {
          "type": "string"
        },
        "alternateWorkstation": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        },
        "zOSAttributes": {
          "$ref": "#/definitions/WorkstationZOSAttributes"
        },
        "workstationInPlanAvailabilityIntervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkstationInPlanAvailabilityIntervals"
          }
        },
        "automation": {
          "type": "boolean"
        }
      }
    },
    "WorkstationInPlanFilter": {
      "properties": {
        "workstationId": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "workstationTypeList": {
          "description": "Valid values are: MANAGER, FTA, XA, SA, WORKLOAD_BROKER, AGENT, POOL, DYNAMIC_POOL, REMOTE_ENGINE, GENERAL, COMPUTER, PRINTER, ZCENTRIC",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domainName": {
          "type": "string"
        },
        "reportingAttributesList": {
          "description": "Valid values are: AUTOMATIC, MANUAL_START_STOP, MANUAL_COMPLETION_ONLY, NON_REPORTING",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accessMethod": {
          "type": "string"
        },
        "linkStatus": {
          "type": "string"
        },
        "linkStatusList": {
          "description": "Valid values are: LINKED, UNLINKED, FULLY_LINKED, NOT_APPLICABLE",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workstationNameAsString": {
          "type": "string"
        },
        "jobmanUp": {
          "type": "boolean"
        },
        "jobmanUpList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "writerUp": {
          "type": "boolean"
        },
        "writerUpList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "startTimeAsString": {
          "type": "string"
        },
        "symRunNumber": {
          "type": "string"
        },
        "limit": {
          "type": "string"
        },
        "workstationType": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "fence": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "timezoneId": {
          "type": "string"
        },
        "tcpPort": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        },
        "securityLevel": {
          "type": "string"
        },
        "sslPort": {
          "type": "string"
        },
        "hostId": {
          "type": "string"
        },
        "hostType": {
          "type": "string",
          "description": "Valid values are MASTER, MANAGER, WORKSTATION"
        },
        "hostName": {
          "type": "string"
        },
        "evtProcRunning": {
          "type": "boolean"
        },
        "evtProcRunningList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "ssmConfigUpdated": {
          "type": "boolean"
        },
        "ssmConfigUpdatedList": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "modifyTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The modify time filter"
        }
      }
    },
    "WorkstationInPlanAvailabilityIntervals": {
      "properties": {
        "isStandardIntervalType": {
          "type": "boolean"
        },
        "isDayOfWeekIntervalType": {
          "type": "boolean"
        },
        "isDateIntervalType": {
          "type": "boolean"
        },
        "intervalStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "intervalEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "intervalValidityDayOfWeek": {
          "type": "integer"
        },
        "intervalValidityDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss - The modify time filter"
        },
        "description": {
          "type": "string"
        },
        "zosNumberOfParallelServers": {
          "type": "integer"
        },
        "zosR1Capacity": {
          "type": "integer"
        },
        "zosR2Capacity": {
          "type": "integer"
        },
        "alternateWorkstationName": {
          "type": "string"
        },
        "isClosed": {
          "type": "boolean"
        }
      }
    },
    "WorkstationInPlanAvailabilitySettings": {
      "properties": {
        "description": {
          "type": "string"
        },
        "zosNumberOfParallelServers": {
          "type": "integer"
        },
        "zosR1Capacity": {
          "type": "integer"
        },
        "zosR2Capacity": {
          "type": "integer"
        },
        "alternateWorkstation": {
          "$ref": "#/definitions/WorkstationInPlanKey"
        }
      }
    },
    "WorkstationInPlanSorter": {
      "properties": {
        "accessMethod": {
          "$ref": "#/definitions/Sorter"
        },
        "workstationType": {
          "$ref": "#/definitions/Sorter"
        },
        "applicationSrvStatus": {
          "$ref": "#/definitions/Sorter"
        },
        "autolink": {
          "$ref": "#/definitions/Sorter"
        },
        "behindFirewall": {
          "$ref": "#/definitions/Sorter"
        },
        "elapsedTime": {
          "$ref": "#/definitions/Sorter"
        },
        "engineAddressPort": {
          "$ref": "#/definitions/Sorter"
        },
        "fence": {
          "$ref": "#/definitions/Sorter"
        },
        "fullStatus": {
          "$ref": "#/definitions/Sorter"
        },
        "initExec": {
          "$ref": "#/definitions/Sorter"
        },
        "initialized": {
          "$ref": "#/definitions/Sorter"
        },
        "jobmanUp": {
          "$ref": "#/definitions/Sorter"
        },
        "limit": {
          "$ref": "#/definitions/Sorter"
        },
        "linkStatus": {
          "$ref": "#/definitions/Sorter"
        },
        "mailReceived": {
          "$ref": "#/definitions/Sorter"
        },
        "mailmanWriting": {
          "$ref": "#/definitions/Sorter"
        },
        "monmanCurrCfg": {
          "$ref": "#/definitions/Sorter"
        },
        "monmanNewCfg": {
          "$ref": "#/definitions/Sorter"
        },
        "workstationName": {
          "$ref": "#/definitions/Sorter"
        },
        "workstationId": {
          "$ref": "#/definitions/Sorter"
        },
        "nodeName": {
          "$ref": "#/definitions/Sorter"
        },
        "operatingSystem": {
          "$ref": "#/definitions/Sorter"
        },
        "remoteEnginePort": {
          "$ref": "#/definitions/Sorter"
        },
        "requestedJobs": {
          "$ref": "#/definitions/Sorter"
        },
        "securityLevel": {
          "$ref": "#/definitions/Sorter"
        },
        "server": {
          "$ref": "#/definitions/Sorter"
        },
        "sslPort": {
          "$ref": "#/definitions/Sorter"
        },
        "ssmConfigUpdated": {
          "$ref": "#/definitions/Sorter"
        },
        "startTime": {
          "$ref": "#/definitions/Sorter"
        },
        "symDownloaded": {
          "$ref": "#/definitions/Sorter"
        },
        "symRunNumber": {
          "$ref": "#/definitions/Sorter"
        },
        "tcpLinked": {
          "$ref": "#/definitions/Sorter"
        },
        "tcpPort": {
          "$ref": "#/definitions/Sorter"
        },
        "timezoneId": {
          "$ref": "#/definitions/Sorter"
        },
        "userInfo": {
          "$ref": "#/definitions/Sorter"
        },
        "version": {
          "$ref": "#/definitions/Sorter"
        },
        "writerUp": {
          "$ref": "#/definitions/Sorter"
        },
        "evtProcRunning": {
          "$ref": "#/definitions/Sorter"
        },
        "ssmRunning": {
          "$ref": "#/definitions/Sorter"
        },
        "domainName": {
          "$ref": "#/definitions/Sorter"
        },
        "hostName": {
          "$ref": "#/definitions/Sorter"
        }
      }
    },
    "EngineInfo": {
      "properties": {
        "hasDatabasePlan": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "timezoneEnable": {
          "type": "boolean"
        },
        "roleBasedSecurityEnabled": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "apiLevel": {
          "type": "integer",
          "format": "int64"
        },
        "featureLevel": {
          "type": "integer",
          "format": "int64"
        },
        "hasModel": {
          "type": "boolean"
        },
        "hasPlan": {
          "type": "boolean"
        },
        "enableRerunOpt": {
          "type": "boolean"
        },
        "engineType": {
          "type": "string"
        },
        "ltpStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "ltpEndDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "dbTimezone": {
          "type": "string"
        },
        "planTimezone": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "domainName": {
          "type": "string"
        },
        "synphonyRunNumber": {
          "type": "integer"
        },
        "synphonyScheduledDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "synphonyBatchManStatus": {
          "type": "string",
          "description": "Possible values are ENGINE_STATUS_LIVES ENGINE_STATUS_DOWN ENGINE_STATUS_RULES"
        },
        "synphonyStartOfDay": {
          "type": "integer",
          "format": "int64"
        },
        "masterDomain": {
          "type": "string"
        },
        "masterWorkstation": {
          "type": "string"
        },
        "synphonyFileName": {
          "type": "string"
        },
        "synphonyPlanStart": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "synphonyPlanEnd": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "synphonySize": {
          "type": "integer"
        },
        "synphonyStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time in ISO 8601 UTC with format yyyy-MM-dd'T'HH:mm:ss"
        },
        "synphonyFound": {
          "type": "boolean"
        },
        "enableLegacyStartOdDayEvaluation": {
          "type": "boolean"
        },
        "dbStartOfDay": {
          "type": "string"
        },
        "rdbmsSchema": {
          "type": "string"
        },
        "rdbmsUser": {
          "type": "string"
        },
        "rdbmsType": {
          "type": "string"
        },
        "rdbmsUrl": {
          "type": "string"
        },
        "fipsEnabled": {
          "type": "boolean"
        },
        "regardlessOfStatusFilterEnabled": {
          "type": "boolean"
        },
        "executorList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Executor"
          }
        },
        "auditStore": {
          "type": "string"
        },
        "auditModel": {
          "type": "string"
        },
        "auditPlan": {
          "type": "string"
        },
        "licenseType": {
          "type": "string"
        }
      }
    },
    "Executor": {
      "properties": {
        "application": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "schemaLocation": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "factory": {
          "type": "string"
        },
        "supportedWs": {
          "type": "string"
        },
        "supportedOs": {
          "type": "string"
        },
        "stoppable": {
          "type": "boolean"
        },
        "produceLog": {
          "type": "boolean"
        },
        "restartable": {
          "type": "boolean"
        },
        "produceLogWhenRunning": {
          "type": "boolean"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringMapObj"
          }
        }
      }
    },
    "ComponentCommandInfo": {
      "properties": {
        "componentId": {
          "type": "string"
        },
        "workstationName": {
          "type": "string"
        },
        "command": {
          "type": "string"
        },
        "parameters": {
          "type": "string"
        }
      }
    },
    "ParametersInfo": {
      "required": [
        "executorId",
        "parameters"
      ],
      "properties": {
        "executorId": {
          "type": "string",
          "description": "The identifier of the executor to invoke."
        },
        "parameters": {
          "type": "string",
          "description": "The json representation of the parameters that must be converted in the jsdl format."
        }
      }
    },
    "JsdlInfo": {
      "required": [
        "executorId",
        "jsdl"
      ],
      "properties": {
        "executorId": {
          "type": "string",
          "description": "The identifier of the executor to invoke."
        },
        "jsdl": {
          "type": "string",
          "description": "The jsdl representing the task to execute that must be converted in the parameters format."
        }
      }
    }
  },
  "parameters": {
    "language": {
      "in": "header",
      "name": "Accept-Language",
      "type": "string",
      "required": false
    },
    "contextSessionHeader": {
      "in": "header",
      "name": "Context-Session",
      "type": "string",
      "required": false,
      "description": "Name of the session. Required for lock and unlock operations"
    },
    "contextSessionForInternalLockHeader": {
      "in": "header",
      "name": "Context-Session",
      "type": "string",
      "required": false,
      "description": "Name of the session. Required if the paramenter lock is true."
    },
    "contextPlanIdHeader": {
      "in": "header",
      "name": "Context-PlanId",
      "type": "string",
      "required": false
    },
    "contextJobStreamScopeHeader": {
      "in": "header",
      "name": "Context-JobStreamScope",
      "type": "integer",
      "required": false,
      "description": "1=The scope integer used to identify the properties of a job stream 2=The scope integer used to identify a job stream with its run cycles only 3=The scope integer used to identify the whole content of a job stream, except for run cycles 4=The scope integer used to identify the whole content of a job stream without job definitions 5=The scope integer used to identify the whole content of a job stream"
    },
    "contextPlanDependenciesScopeHeader": {
      "in": "header",
      "name": "Context-PlanDependenciesScope",
      "type": "integer",
      "required": false,
      "description": "0=Disables loading of dependencies in plan queries 1=Enables loading of dependencies in plan queries"
    },
    "contextTransferModeHeader": {
      "in": "header",
      "name": "Context-TransferMode",
      "type": "integer",
      "required": false,
      "description": "Defines how data are retrived by engine. 0=The transfer mode integer used to specify that plan query results must be transferred in objects 1=The transfer mode integer used to specify that plan query results must be transferred in bytes"
    },
    "contextObjectCountHeader": {
      "in": "header",
      "name": "Context-ObjectCount",
      "type": "integer",
      "required": false,
      "description": "0=The integer used to specify that no object count is requested in plan queries 1=The integer used to specify that object count is requested in plan queries"
    },
    "contextStatusScopeHeader": {
      "in": "header",
      "name": "Context-StatusScope",
      "type": "integer",
      "required": false,
      "description": "0=The integer used to specify old behaviour in plan queries 1=The integer used to specify that workstation fence must not be considered for job status in plan queries"
    },
    "contextUseCacheHeader": {
      "in": "header",
      "name": "Context-UseCache",
      "type": "integer",
      "required": false,
      "description": "0=Load Information without using the cache 1=Load Information using the cache"
    },
    "contextHasMoreObjectsHeader": {
      "in": "header",
      "name": "Context-HasMoreObjects",
      "type": "integer",
      "required": false,
      "description": "0=The integer used to specify that no more objects exist than the returned in plan view queries 1=The integer used to specify that more objects exist than the returned in plan view queries"
    },
    "contextBrokerInfoRequestedHeader": {
      "in": "header",
      "name": "Context-BrokerInfoRequested",
      "type": "integer",
      "required": false,
      "description": "0=The integer used to specify that the broker information is not requested 1=The integer used to specify that the broker information is requested"
    },
    "contextForceCommandHeader": {
      "in": "header",
      "name": "Context-ForceCommand",
      "type": "integer",
      "required": false,
      "description": "0=The integer used to specify that no forced action is requested on model command 1=The integer used to specify that forced action is requested on model command"
    },
    "contextDatabasePlanHeader": {
      "in": "header",
      "name": "Context-DatabasePlan",
      "type": "integer",
      "required": false,
      "description": "0=Disables loading of plan on database 1=Enables loading of plan on database"
    },
    "contextJobHistoryScopeHeader": {
      "in": "header",
      "name": "Context-JobHistoryScope",
      "type": "integer",
      "required": false,
      "description": "0=The integer used to specify to get all the job history information while running queries 1=The integer used to specify to get only the latest status of the job history while running queries"
    },
    "queryPageSizeHeader": {
      "in": "header",
      "name": "Query-PageSize",
      "type": "integer",
      "description": "The number of elements (max 10000) contained in a single returned page - mutual exclusive  with How-Many - Used only with the current plan and mirroring enabled - Default Value 10000"
    },
    "queryPageNumberHeader": {
      "in": "header",
      "name": "Query-PageNumber",
      "type": "integer",
      "description": "The number of pages that must be returned - mutual exclusive with How-Many - Used only with the current plan and mirroring enabled - Default Value 1"
    },
    "howManyHeader": {
      "in": "header",
      "name": "How-Many",
      "type": "integer",
      "description": "How many objects (max 10000) - mutual exclusive with Query-PageSize and Query-PageOffset - used with a query on a first bunch of object. Use 0 (zero) to retrieve all the objects that match the given filter in one shot"
    },
    "howManyHeaderNotMutual": {
      "in": "header",
      "name": "How-Many",
      "type": "integer",
      "required": true,
      "description": "How many objects (max 10000) are used with a query on a first bunch of object. Use 0 (zero) to retrieve all the objects that match the filter simultaneously"
    },
    "lastObject": {
      "in": "header",
      "name": "Last-Object",
      "type": "string",
      "required": true,
      "description": "Identificative string of the last object (or objects) returned in the last query"
    },
    "sequenceNumber": {
      "in": "header",
      "name": "Sequence-Number",
      "type": "string",
      "required": true,
      "description": "Plan Sequence Number"
    },
    "restartIndex": {
      "in": "header",
      "name": "Restart-Index",
      "type": "string",
      "required": true,
      "description": "Plan Restart Index, used in job and JS query"
    },
    "idEncoding": {
      "in": "header",
      "name": "Id-Encoding",
      "type": "integer",
      "required": false,
      "description": "0=ID with old layout not encoded 1=ID Base64-encoded layout (default value)"
    }
  }
}
