[pytest]
# Define o modo de execução para testes assíncronos (asyncio).
# 'auto' detecta automaticamente testes async e os executa corretamente.
asyncio_mode = auto

# Caminhos onde o pytest deve procurar por testes.
testpaths = tests

# Padrões de nome de arquivo que o pytest deve considerar como arquivos de teste.
python_files = test_*.py *_test.py

# Padrões de nome de classe que o pytest deve considerar como suítes de teste.
python_classes = Test*

# Opções de linha de comando a serem usadas por padrão em cada execução.
# -v: modo verboso, mostra mais detalhes sobre cada teste.
# --cov=resync: ativa a análise de cobertura de código para o pacote 'resync'.
# --cov-report=term-missing: mostra no terminal as linhas que não foram cobertas.
# --cov-report=html: gera um relatório HTML detalhado na pasta 'htmlcov/'.
# --cov-fail-under=99: faz com que a suíte de testes falhe se a cobertura for menor que 99%.
# --import-mode=importlib: evita duplicação de módulos e reduz consumo de memória.
# --asyncio-mode=auto: otimiza o comportamento do event loop.
# -q: modo quiet para reduzir overhead de logging durante desenvolvimento.
addopts = -v --cov=resync --cov-report=term-missing --cov-report=html --cov-fail-under=99 --import-mode=importlib --asyncio-mode=auto -q